{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nconst initialState = {\n  drivers: null,\n  loading: false,\n  error: null\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case \"GET_DRIVERS\":\n      return _objectSpread({}, state, {\n        drivers: action.payload,\n        loading: false\n      });\n\n    case \"ADD_DRIVER\":\n      return _objectSpread({}, state, {\n        drivers: [...state.drivers, action.payload],\n        loading: false\n      });\n\n    case \"DELETE_DRIVER\":\n      return _objectSpread({}, state, {\n        drivers: state.drivers.filter(driver => driver.id !== action.payload),\n        loading: false\n      });\n\n    case \"CREATE_DRIVER\":\n      console.log(\"created driver\", action.driver);\n      return state;\n\n    case \"CREATE_DRIVER_ERROR\":\n      console.log(\"create driver error\", action.err);\n      return state;\n\n    case \"SET_LOADING\":\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case \"DRIVERS_ERROR\":\n      console.log(action.payload);\n      return _objectSpread({}, state, {\n        error: action.payload,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher/src/store/reducers/driverReducer.js"],"names":["initialState","drivers","loading","error","state","action","type","payload","filter","driver","id","console","log","err"],"mappings":";AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,IADU;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,gBAAe,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,+BACKF,KADL;AAEEH,QAAAA,OAAO,EAAEI,MAAM,CAACE,OAFlB;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAK,YAAL;AACE,+BACKE,KADL;AAEEH,QAAAA,OAAO,EAAE,CAAC,GAAGG,KAAK,CAACH,OAAV,EAAmBI,MAAM,CAACE,OAA1B,CAFX;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAK,eAAL;AACE,+BACKE,KADL;AAEEH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,CAAcO,MAAd,CAAqBC,MAAM,IAAIA,MAAM,CAACC,EAAP,KAAcL,MAAM,CAACE,OAApD,CAFX;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAK,eAAL;AACES,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BP,MAAM,CAACI,MAArC;AACA,aAAOL,KAAP;;AACF,SAAK,qBAAL;AACEO,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCP,MAAM,CAACQ,GAA1C;AACA,aAAOT,KAAP;;AACF,SAAK,aAAL;AACE,+BACKA,KADL;AAEEF,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAK,eAAL;AACES,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACE,OAAnB;AACA,+BACKH,KADL;AAEED,QAAAA,KAAK,EAAEE,MAAM,CAACE,OAFhB;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF;AACE,aAAOE,KAAP;AAtCJ;AAwCD,CAzCD","sourcesContent":["const initialState = {\r\n  drivers: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_DRIVERS\":\r\n      return {\r\n        ...state,\r\n        drivers: action.payload,\r\n        loading: false\r\n      };\r\n    case \"ADD_DRIVER\":\r\n      return {\r\n        ...state,\r\n        drivers: [...state.drivers, action.payload],\r\n        loading: false\r\n      };\r\n    case \"DELETE_DRIVER\":\r\n      return {\r\n        ...state,\r\n        drivers: state.drivers.filter(driver => driver.id !== action.payload),\r\n        loading: false\r\n      };\r\n    case \"CREATE_DRIVER\":\r\n      console.log(\"created driver\", action.driver);\r\n      return state;\r\n    case \"CREATE_DRIVER_ERROR\":\r\n      console.log(\"create driver error\", action.err);\r\n      return state;\r\n    case \"SET_LOADING\":\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case \"DRIVERS_ERROR\":\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}