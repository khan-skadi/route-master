{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher\\\\src\\\\components\\\\logs\\\\AddLogModal.js\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport DriverSelectOptions from \"../drivers/DriverSelectOptions\";\nimport { addLog } from \"../../store/actions/logActions\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst AddLogModal = ({\n  addLog\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        locationFrom = _useState2[0],\n        setLocationFrom = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        locationTo = _useState4[0],\n        setLocationTo = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        distance = _useState6[0],\n        setDistance = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        postedOn = _useState8[0],\n        setPostedOn = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        postedBy = _useState10[0],\n        setPostedBy = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        attention = _useState12[0],\n        setAttention = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        progress = _useState14[0],\n        setProgress = _useState14[1];\n\n  const _useState15 = useState(\"\"),\n        _useState16 = _slicedToArray(_useState15, 2),\n        driver = _useState16[0],\n        setDriver = _useState16[1]; // useEffect(() => {\n  //   if (currentRoute) {\n  //     setLocationFrom(currentRoute.locationFrom);\n  //     setLocationTo(currentRoute.locationTo);\n  //     setDistance(currentRoute.distance);\n  //     setPostedOn(currentRoute.postedOn);\n  //     setPostedBy(currentRoute.postedBy);\n  //     setId(currentRoute.id);\n  //   }\n  // }, [currentRoute]);\n\n\n  const onSubmit = () => {\n    const newRoute = {\n      locationFrom,\n      locationTo,\n      distance,\n      postedOn,\n      postedBy,\n      attention,\n      progress,\n      driver,\n      date: new Date()\n    };\n    addLog(newRoute);\n    M.toast({\n      html: \"Route added\"\n    }); //  Clear Fields\n\n    setLocationFrom(\"\");\n    setLocationTo(\"\");\n    setDistance(\"\");\n    setPostedOn(\"\");\n    setPostedBy(\"\");\n    setAttention(false);\n    setProgress(\"\");\n    setDriver(\"\");\n  };\n\n  return React.createElement(\"div\", {\n    id: \"add-log-modal\",\n    className: \"modal\",\n    style: modalStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Submit Route\"), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"locationFrom\",\n    value: locationFrom,\n    onChange: e => setLocationFrom(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"locationFrom\",\n    className: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Location From\"))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"locationTo\",\n    value: locationTo,\n    onChange: e => setLocationTo(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"locationTo\",\n    className: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Location To\"))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    name: \"driver\",\n    value: driver,\n    className: \"browser-default\",\n    onChange: e => setDriver(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Driver\"), React.createElement(DriverSelectOptions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"distance\",\n    value: distance,\n    onChange: e => setDistance(e.target.value),\n    style: {\n      width: \"150px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"distance\",\n    className: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Distance\"))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"postedOn\",\n    value: postedOn,\n    onChange: e => setPostedOn(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"postedOn\",\n    className: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Posted On\"))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"postedBy\",\n    value: postedBy,\n    onChange: e => setPostedBy(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"postedBy\",\n    className: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Posted By\"))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"filled-in\",\n    checked: attention,\n    value: attention,\n    onChange: e => setAttention(!attention),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Important - Time Sensitive\"))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"filled-in\",\n    checked: progress,\n    value: progress,\n    onChange: e => setProgress(!progress),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"In Progress\"))), React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#!\",\n    onClick: onSubmit,\n    className: \"modal-close waves-effect blue darken-3 btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"Add Route\", React.createElement(\"i\", {\n    className: \"material-icons right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"send\"))))));\n};\n\nconst modalStyle = {\n  width: \"75%\",\n  height: \"75%\"\n};\nAddLogModal.propTypes = {\n  addLog: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addLog\n})(AddLogModal); // const AddLogModal = ({ addLog }) => {\n//   const [message, setMessage] = useState(\"\");\n//   const [driver, setDriver] = useState(\"\");\n//   const [attention, setAttention] = useState(false);\n//   const [progress, setProgress] = useState(false);\n//   const onSubmit = () => {\n//     if (message === \"\" || driver === \"\") {\n//       M.toast({ html: \"Please describe route and enter driver\" });\n//     } else {\n//       const newRoute = {\n//         message,\n//         attention,\n//         progress,\n//         driver,\n//         date: new Date()\n//       };\n//       addLog(newRoute);\n//       M.toast({ html: `Route added by ${driver}` });\n//       // Clear Fields\n//       setMessage(\"\");\n//       setDriver(\"\");\n//       setAttention(false);\n//       setProgress(false);\n//     }\n//   };\n//   return (\n//     <div id=\"add-log-modal\" className=\"modal\" style={modalStyle}>\n//       <div className=\"modal-content\">\n//         <h4>Submit Route</h4>\n//         <div className=\"row\">\n//           <div className=\"input-field\">\n//             <input\n//               type=\"text\"\n//               name=\"message\"\n//               value={message}\n//               onChange={e => setMessage(e.target.value)}\n//             />\n//             <label htmlFor=\"message\" className=\"active\">\n//               Route info\n//             </label>\n//           </div>\n//         </div>\n//         <div className=\"row\">\n//           <div className=\"input-field\">\n//             <select\n//               name=\"driver\"\n//               value={driver}\n//               className=\"browser-default\"\n//               onChange={e => setDriver(e.target.value)}\n//             >\n//               <option value=\"\" disabled>\n//                 Driver\n//               </option>\n//               <DriverSelectOptions />\n//             </select>\n//           </div>\n//         </div>\n//         <div className=\"row\">\n//           <div className=\"input-field\">\n//             <p>\n//               <label>\n//                 <input\n//                   type=\"checkbox\"\n//                   className=\"filled-in\"\n//                   checked={attention}\n//                   value={attention}\n//                   onChange={e => setAttention(!attention)}\n//                 />\n//                 <span>Important - Time Sensitive</span>\n//               </label>\n//             </p>\n//             <p>\n//               <label>\n//                 <input\n//                   type=\"checkbox\"\n//                   className=\"filled-in\"\n//                   checked={progress}\n//                   value={progress}\n//                   onChange={e => setProgress(!progress)}\n//                 />\n//                 <span>In Progress</span>\n//               </label>\n//             </p>\n//           </div>\n//         </div>\n//       </div>\n//       <div className=\"modal-footer\">\n//         <a\n//           href=\"#!\"\n//           onClick={onSubmit}\n//           className=\"modal-close waves-effect blue darken-3 btn\"\n//         >\n//           Submit\n//           <i className=\"material-icons right\">send</i>\n//         </a>\n//       </div>\n//     </div>\n//   );\n// };\n// AddLogModal.propTypes = {\n//   addLog: PropTypes.func.isRequired\n// };\n// const modalStyle = {\n//   width: \"75%\",\n//   height: \"75%\"\n// };\n// export default connect(null, { addLog })(AddLogModal);","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher/src/components/logs/AddLogModal.js"],"names":["React","useState","connect","PropTypes","DriverSelectOptions","addLog","M","AddLogModal","locationFrom","setLocationFrom","locationTo","setLocationTo","distance","setDistance","postedOn","setPostedOn","postedBy","setPostedBy","attention","setAttention","progress","setProgress","driver","setDriver","onSubmit","newRoute","date","Date","toast","html","modalStyle","e","target","value","width","height","propTypes","func","isRequired"],"mappings":"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":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport DriverSelectOptions from \"../drivers/DriverSelectOptions\";\r\nimport { addLog } from \"../../store/actions/logActions\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nconst AddLogModal = ({ addLog }) => {\r\n  const [locationFrom, setLocationFrom] = useState(\"\");\r\n  const [locationTo, setLocationTo] = useState(\"\");\r\n  const [distance, setDistance] = useState(\"\");\r\n  const [postedOn, setPostedOn] = useState(\"\");\r\n  const [postedBy, setPostedBy] = useState(\"\");\r\n  const [attention, setAttention] = useState(false);\r\n  const [progress, setProgress] = useState(false);\r\n  const [driver, setDriver] = useState(\"\");\r\n\r\n  // useEffect(() => {\r\n  //   if (currentRoute) {\r\n  //     setLocationFrom(currentRoute.locationFrom);\r\n  //     setLocationTo(currentRoute.locationTo);\r\n  //     setDistance(currentRoute.distance);\r\n  //     setPostedOn(currentRoute.postedOn);\r\n  //     setPostedBy(currentRoute.postedBy);\r\n  //     setId(currentRoute.id);\r\n  //   }\r\n  // }, [currentRoute]);\r\n\r\n  const onSubmit = () => {\r\n    const newRoute = {\r\n      locationFrom,\r\n      locationTo,\r\n      distance,\r\n      postedOn,\r\n      postedBy,\r\n      attention,\r\n      progress,\r\n      driver,\r\n      date: new Date()\r\n    };\r\n\r\n    addLog(newRoute);\r\n\r\n    M.toast({ html: \"Route added\" });\r\n\r\n    //  Clear Fields\r\n    setLocationFrom(\"\");\r\n    setLocationTo(\"\");\r\n    setDistance(\"\");\r\n    setPostedOn(\"\");\r\n    setPostedBy(\"\");\r\n    setAttention(false);\r\n    setProgress(\"\");\r\n    setDriver(\"\");\r\n  };\r\n\r\n  return (\r\n    <div id=\"add-log-modal\" className=\"modal\" style={modalStyle}>\r\n      <div className=\"modal-content\">\r\n        <h4>Submit Route</h4>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"locationFrom\"\r\n              value={locationFrom}\r\n              onChange={e => setLocationFrom(e.target.value)}\r\n            />\r\n            <label htmlFor=\"locationFrom\" className=\"active\">\r\n              Location From\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"locationTo\"\r\n              value={locationTo}\r\n              onChange={e => setLocationTo(e.target.value)}\r\n            />\r\n            <label htmlFor=\"locationTo\" className=\"active\">\r\n              Location To\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <select\r\n              name=\"driver\"\r\n              value={driver}\r\n              className=\"browser-default\"\r\n              onChange={e => setDriver(e.target.value)}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Driver\r\n              </option>\r\n              <DriverSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"input-field\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"distance\"\r\n            value={distance}\r\n            onChange={e => setDistance(e.target.value)}\r\n            style={{ width: \"150px\" }}\r\n          />\r\n          <label htmlFor=\"distance\" className=\"active\">\r\n            Distance\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"input-field\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"postedOn\"\r\n            value={postedOn}\r\n            onChange={e => setPostedOn(e.target.value)}\r\n          />\r\n          <label htmlFor=\"postedOn\" className=\"active\">\r\n            Posted On\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"input-field\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"postedBy\"\r\n            value={postedBy}\r\n            onChange={e => setPostedBy(e.target.value)}\r\n          />\r\n          <label htmlFor=\"postedBy\" className=\"active\">\r\n            Posted By\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"input-field\">\r\n          <p>\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"filled-in\"\r\n                checked={attention}\r\n                value={attention}\r\n                onChange={e => setAttention(!attention)}\r\n              />\r\n              <span>Important - Time Sensitive</span>\r\n            </label>\r\n          </p>\r\n          <p>\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"filled-in\"\r\n                checked={progress}\r\n                value={progress}\r\n                onChange={e => setProgress(!progress)}\r\n              />\r\n              <span>In Progress</span>\r\n            </label>\r\n          </p>\r\n\r\n          <div className=\"modal-footer\">\r\n            <a\r\n              href=\"#!\"\r\n              onClick={onSubmit}\r\n              className=\"modal-close waves-effect blue darken-3 btn\"\r\n            >\r\n              Add Route\r\n              <i className=\"material-icons right\">send</i>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: \"75%\",\r\n  height: \"75%\"\r\n};\r\n\r\nAddLogModal.propTypes = {\r\n  addLog: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addLog })(AddLogModal);\r\n\r\n// const AddLogModal = ({ addLog }) => {\r\n//   const [message, setMessage] = useState(\"\");\r\n//   const [driver, setDriver] = useState(\"\");\r\n//   const [attention, setAttention] = useState(false);\r\n//   const [progress, setProgress] = useState(false);\r\n\r\n//   const onSubmit = () => {\r\n//     if (message === \"\" || driver === \"\") {\r\n//       M.toast({ html: \"Please describe route and enter driver\" });\r\n//     } else {\r\n//       const newRoute = {\r\n//         message,\r\n//         attention,\r\n//         progress,\r\n//         driver,\r\n//         date: new Date()\r\n//       };\r\n\r\n//       addLog(newRoute);\r\n\r\n//       M.toast({ html: `Route added by ${driver}` });\r\n\r\n//       // Clear Fields\r\n//       setMessage(\"\");\r\n//       setDriver(\"\");\r\n//       setAttention(false);\r\n//       setProgress(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div id=\"add-log-modal\" className=\"modal\" style={modalStyle}>\r\n//       <div className=\"modal-content\">\r\n//         <h4>Submit Route</h4>\r\n//         <div className=\"row\">\r\n//           <div className=\"input-field\">\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"message\"\r\n//               value={message}\r\n//               onChange={e => setMessage(e.target.value)}\r\n//             />\r\n//             <label htmlFor=\"message\" className=\"active\">\r\n//               Route info\r\n//             </label>\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"row\">\r\n//           <div className=\"input-field\">\r\n//             <select\r\n//               name=\"driver\"\r\n//               value={driver}\r\n//               className=\"browser-default\"\r\n//               onChange={e => setDriver(e.target.value)}\r\n//             >\r\n//               <option value=\"\" disabled>\r\n//                 Driver\r\n//               </option>\r\n//               <DriverSelectOptions />\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"row\">\r\n//           <div className=\"input-field\">\r\n//             <p>\r\n//               <label>\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   className=\"filled-in\"\r\n//                   checked={attention}\r\n//                   value={attention}\r\n//                   onChange={e => setAttention(!attention)}\r\n//                 />\r\n//                 <span>Important - Time Sensitive</span>\r\n//               </label>\r\n//             </p>\r\n//             <p>\r\n//               <label>\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   className=\"filled-in\"\r\n//                   checked={progress}\r\n//                   value={progress}\r\n//                   onChange={e => setProgress(!progress)}\r\n//                 />\r\n//                 <span>In Progress</span>\r\n//               </label>\r\n//             </p>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"modal-footer\">\r\n//         <a\r\n//           href=\"#!\"\r\n//           onClick={onSubmit}\r\n//           className=\"modal-close waves-effect blue darken-3 btn\"\r\n//         >\r\n//           Submit\r\n//           <i className=\"material-icons right\">send</i>\r\n//         </a>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// AddLogModal.propTypes = {\r\n//   addLog: PropTypes.func.isRequired\r\n// };\r\n\r\n// const modalStyle = {\r\n//   width: \"75%\",\r\n//   height: \"75%\"\r\n// };\r\n\r\n// export default connect(null, { addLog })(AddLogModal);\r\n"]},"metadata":{},"sourceType":"module"}