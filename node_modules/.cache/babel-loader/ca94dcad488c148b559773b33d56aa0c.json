{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher-working_branch2_router\\\\src\\\\components\\\\logs\\\\Logs.js\";\nimport React, { useEffect } from \"react\";\nimport { getLogs } from \"../../store/actions/logActions\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport LogItem from \"./LogItem\";\nimport InfoPanel from \"../layout/InfoPanel\";\nimport ProfileModal from \"./ProfileModal\";\nimport Preloader from \"../layout/Preloader\";\nimport PropTypes from \"prop-types\";\nimport { getDrivers } from \"../../store/actions/driverActions\";\n\nconst Logs = ({\n  log: {\n    logs,\n    loading\n  },\n  driver: {\n    drivers\n  },\n  getLogs\n}) => {\n  useEffect(() => {\n    getLogs();\n    getDrivers(); // eslint-disable-next-line\n  }, []);\n\n  if (loading || logs === null) {\n    return React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col s8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"collection with-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"collection-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"All Routes\")), !loading && logs.length === 0 ? React.createElement(\"p\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"No logs to show...\") : logs.map(log => React.createElement(LogItem, {\n    log: log,\n    key: log.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(NavLink, {\n    to: \"/archived-routes\",\n    className: \"flow-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"blockquote\", {\n    style: {\n      color: \"green\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Archived Routes\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(ProfileModal, {\n    driver: drivers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"col s4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(InfoPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))));\n};\n\nLogs.propTypes = {\n  log: PropTypes.object.isRequired,\n  getLogs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  log: state.log,\n  driver: state.driver\n});\n\nexport default connect(mapStateToProps, {\n  getLogs,\n  getDrivers\n})(Logs);","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher-working_branch2_router/src/components/logs/Logs.js"],"names":["React","useEffect","getLogs","connect","NavLink","LogItem","InfoPanel","ProfileModal","Preloader","PropTypes","getDrivers","Logs","log","logs","loading","driver","drivers","length","map","id","color","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { getLogs } from \"../../store/actions/logActions\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport LogItem from \"./LogItem\";\nimport InfoPanel from \"../layout/InfoPanel\";\nimport ProfileModal from \"./ProfileModal\";\nimport Preloader from \"../layout/Preloader\";\nimport PropTypes from \"prop-types\";\nimport { getDrivers } from \"../../store/actions/driverActions\";\n\nconst Logs = ({ log: { logs, loading }, driver: { drivers }, getLogs }) => {\n  useEffect(() => {\n    getLogs();\n    getDrivers();\n    // eslint-disable-next-line\n  }, []);\n\n  if (loading || logs === null) {\n    return <Preloader />;\n  }\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col s8\">\n          <ul className=\"collection with-header\">\n            <li className=\"collection-header\">\n              <h4 className=\"center\">All Routes</h4>\n            </li>\n            {!loading && logs.length === 0 ? (\n              <p className=\"center\">No logs to show...</p>\n            ) : (\n              logs.map(log => <LogItem log={log} key={log.id} />)\n            )}\n            <NavLink to=\"/archived-routes\" className=\"flow-text\">\n              <blockquote style={{ color: \"green\" }}>\n                Archived Routes\n              </blockquote>\n            </NavLink>\n          </ul>\n          <div>\n            <ProfileModal driver={drivers} />\n          </div>\n        </div>\n\n        <div className=\"col s4\">\n          <InfoPanel />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nLogs.propTypes = {\n  log: PropTypes.object.isRequired,\n  getLogs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  log: state.log,\n  driver: state.driver\n});\n\nexport default connect(mapStateToProps, { getLogs, getDrivers })(Logs);\n"]},"metadata":{},"sourceType":"module"}