{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher\\\\src\\\\components\\\\layout\\\\FindRoutesModal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport FindRoutesModalList from \"./FindRoutesModalList\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst FindRoutesModal = ({\n  route,\n  currentRoute\n}, ownProps) => {\n  const locationTo = ownProps.locationTo,\n        locationFrom = ownProps.locationFrom,\n        distance = ownProps.distance,\n        postedOn = ownProps.postedOn,\n        postedBy = ownProps.postedBy,\n        id = ownProps.id;\n  console.log(locationTo);\n  return React.createElement(\"div\", {\n    id: \"find-routes-modal\",\n    className: \"modal\",\n    style: modalStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Route Info\"), route.routes !== null && route.routes.map(route => {\n    return React.createElement(FindRoutesModalList, {\n      route: route,\n      key: route.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  })));\n};\n\nconst modalStyle = {\n  width: \"75%\",\n  height: \"75%\"\n};\nFindRoutesModal.propTypes = {\n  current: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  let id = ownProps.id;\n  return {\n    route: state.route.find(route => route.id === id),\n    currentRoute: state.route.currentRoutes\n  };\n};\n\nexport default connect(mapStateToProps)(FindRoutesModal);","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher/src/components/layout/FindRoutesModal.js"],"names":["React","useState","useEffect","connect","PropTypes","FindRoutesModalList","M","FindRoutesModal","route","currentRoute","ownProps","locationTo","locationFrom","distance","postedOn","postedBy","id","console","log","modalStyle","routes","map","width","height","propTypes","current","object","mapStateToProps","state","find","currentRoutes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,CAAP,MAAc,4CAAd;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,EAA0BC,QAA1B,KAAuC;AAAA,QAE3DC,UAF2D,GAQzDD,QARyD,CAE3DC,UAF2D;AAAA,QAG3DC,YAH2D,GAQzDF,QARyD,CAG3DE,YAH2D;AAAA,QAI3DC,QAJ2D,GAQzDH,QARyD,CAI3DG,QAJ2D;AAAA,QAK3DC,QAL2D,GAQzDJ,QARyD,CAK3DI,QAL2D;AAAA,QAM3DC,QAN2D,GAQzDL,QARyD,CAM3DK,QAN2D;AAAA,QAO3DC,EAP2D,GAQzDN,QARyD,CAO3DM,EAP2D;AAS7DC,EAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACA,SACE;AAAK,IAAA,EAAE,EAAC,mBAAR;AAA4B,IAAA,SAAS,EAAC,OAAtC;AAA8C,IAAA,KAAK,EAAEQ,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGX,KAAK,CAACY,MAAN,KAAiB,IAAjB,IACCZ,KAAK,CAACY,MAAN,CAAaC,GAAb,CAAiBb,KAAK,IAAI;AACxB,WAAO,oBAAC,mBAAD;AAAqB,MAAA,KAAK,EAAEA,KAA5B;AAAmC,MAAA,GAAG,EAAEA,KAAK,CAACQ,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,CAHJ,CADF,CADF;AAWD,CArBD;;AAuBA,MAAMG,UAAU,GAAG;AACjBG,EAAAA,KAAK,EAAE,KADU;AAEjBC,EAAAA,MAAM,EAAE;AAFS,CAAnB;AAKAhB,eAAe,CAACiB,SAAhB,GAA4B;AAC1BC,EAAAA,OAAO,EAAErB,SAAS,CAACsB;AADO,CAA5B;;AAIA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQlB,QAAR,KAAqB;AAC3C,MAAIM,EAAE,GAAGN,QAAQ,CAACM,EAAlB;AACA,SAAO;AACLR,IAAAA,KAAK,EAAEoB,KAAK,CAACpB,KAAN,CAAYqB,IAAZ,CAAiBrB,KAAK,IAAIA,KAAK,CAACQ,EAAN,KAAaA,EAAvC,CADF;AAELP,IAAAA,YAAY,EAAEmB,KAAK,CAACpB,KAAN,CAAYsB;AAFrB,GAAP;AAID,CAND;;AAQA,eAAe3B,OAAO,CAACwB,eAAD,CAAP,CAAyBpB,eAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport FindRoutesModalList from \"./FindRoutesModalList\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nconst FindRoutesModal = ({ route, currentRoute }, ownProps) => {\r\n  const {\r\n    locationTo,\r\n    locationFrom,\r\n    distance,\r\n    postedOn,\r\n    postedBy,\r\n    id\r\n  } = ownProps;\r\n  console.log(locationTo);\r\n  return (\r\n    <div id=\"find-routes-modal\" className=\"modal\" style={modalStyle}>\r\n      <div className=\"modal-content\">\r\n        <h4>Route Info</h4>\r\n        {route.routes !== null &&\r\n          route.routes.map(route => {\r\n            return <FindRoutesModalList route={route} key={route.id} />;\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: \"75%\",\r\n  height: \"75%\"\r\n};\r\n\r\nFindRoutesModal.propTypes = {\r\n  current: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let id = ownProps.id;\r\n  return {\r\n    route: state.route.find(route => route.id === id),\r\n    currentRoute: state.route.currentRoutes\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(FindRoutesModal);\r\n"]},"metadata":{},"sourceType":"module"}