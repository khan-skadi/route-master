{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher-working_branch2_router\\\\src\\\\components\\\\driverProfileLayout\\\\DriverProfileG.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass DriverProfileG extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: null\n    };\n  }\n\n  getDrivers() {\n    this.setState({\n      driver: this.state.driver\n    });\n  }\n\n  componentDidMount() {\n    this.getDrivers();\n    let id = this.props.match.params.driver_id;\n    this.setState({\n      id: id\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        backgroundColor: \"light-blue accent-1\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12 z-depth-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"flow-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \" \", \"DRIVERS > \", driver.firstName, \" \", driver.lastName)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col s4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s10 center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: {\n        marginLeft: \"80px\"\n      },\n      className: \"responsive-img materialboxed circle\",\n      width: \"120px\",\n      src: driver.url,\n      alt: \"profile_picture\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"flow-text center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, driver.firstName, \" \", driver.lastName)), React.createElement(\"div\", {\n      className: \"col s2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-user-edit small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"EDIT\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"LICENSE NUMBER\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"flow-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, driver.license))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"EMAIL/USERNAME\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"flow-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, driver.email)))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"PHONE NUMBER\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"flow-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, driver.phoneNumber))))), React.createElement(\"div\", {\n      className: \"col s8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"#!\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"with-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"collection-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, driver.firstName, \"'s Logs\"))))))); // const { driver } = this.state;\n    // console.log(this.props);\n    // const driver = this.props.driver ? (\n    //   <div>\n    //     <h4 className=\"center\">{this.props.driver.firstName}</h4>\n    //     {/* {this.props.driver.firstName} */}\n    //     <p>Driver 1 NAME</p>\n    //     {/* {this.props.driver.lastName} */}\n    //   </div>\n    // ) : (\n    //   <div className=\"center\">Loading post...</div>\n    // );\n    // const driver = this.props.driver ? (\n    //   <div>\n    //     <h4 className=\"center\">{this.props.driver.firstName}</h4>\n    //   </div>\n    // ) : (\n    //   <div className=\"center\">Loading post...</div>\n    // );\n    // return <div className=\"container\">{driver}</div>;\n    // const { drivers } = this.props;\n    // const driverList = drivers.length ? (\n    //   drivers.map(driver => {\n    //     return (\n    //       <div>\n    //         <div\n    //           className=\"row\"\n    //           style={{ backgroundColor: \"light-blue accent-1\" }}\n    //         >\n    //           <div className=\"col s12 z-depth-1\">\n    //             <span className=\"flow-text\"> DRIVERS > 1234</span>\n    //           </div>\n    //           <br />\n    //           <br />\n    //           <br />\n    //           {/* Main left side */}\n    //           <div className=\"col s4\">\n    //             <div className=\"row\">\n    //               <div className=\"col s10 center\">\n    //                 <span className=\"flow-text center\">12341234</span>\n    //               </div>\n    //               <div className=\"col s2\">\n    //                 <span>\n    //                   <i className=\"fas fa-user-edit small\"></i>\n    //                   <span style={{ fontWeight: \"bold\" }}>EDIT</span>\n    //                 </span>\n    //               </div>\n    //             </div>\n    //           </div>\n    //         </div>\n    //       </div>\n    //     );\n    //   })\n    // ) : (\n    //   <div className=\"center\">No Drivers yet</div>\n    // );\n    // return (\n    //   <div className=\"container\">\n    //     <h4 className=\"center\">Profile</h4>\n    //     {driverList}\n    //   </div>\n    // );\n  }\n\n} // ownProps is the props of this component before we attach the props of the store.\n// Our ownProps are gonna contain information about the route. i.e: \"/driver/1\".\n// Then we use that id to connect to the particular id from the store.\n// const mapStateToProps = (state, ownProps) => {\n//   console.log(state);\n//   let id = ownProps.match.params.id;\n//   return {\n//     driver: state.driver\n//   };\n// };\n\n\nconst mapStateToProps = (state, ownProps) => {\n  let id = ownProps.match.params.driver_id;\n  console.log(id);\n  return {\n    driver: state.driver\n  };\n}; // const mapDispatchToProps = dispatch => {\n//   return {\n//     getDrivers: driver => dispatch(getDrivers(driver))\n//   };\n// };\n//.find(driver => driver.id === id)\n\n\nexport default connect(mapStateToProps)(DriverProfileG);","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher-working_branch2_router/src/components/driverProfileLayout/DriverProfileG.js"],"names":["React","Component","connect","DriverProfileG","state","id","getDrivers","setState","driver","componentDidMount","props","match","params","driver_id","render","backgroundColor","firstName","lastName","marginLeft","url","fontWeight","license","email","phoneNumber","mapStateToProps","ownProps","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass DriverProfileG extends Component {\r\n  state = {\r\n    id: null\r\n  };\r\n\r\n  getDrivers() {\r\n    this.setState({\r\n      driver: this.state.driver\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDrivers();\r\n    let id = this.props.match.params.driver_id;\r\n    this.setState({\r\n      id: id\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row\" style={{ backgroundColor: \"light-blue accent-1\" }}>\r\n          <div className=\"col s12 z-depth-1\">\r\n            <span className=\"flow-text\">\r\n              {\" \"}\r\n              DRIVERS > {driver.firstName} {driver.lastName}\r\n            </span>\r\n          </div>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          {/* Main left side */}\r\n          <div className=\"col s4\">\r\n            <div className=\"row\">\r\n              <div className=\"col s10 center\">\r\n                <img\r\n                  style={{ marginLeft: \"80px\" }}\r\n                  className=\"responsive-img materialboxed circle\"\r\n                  width=\"120px\"\r\n                  src={driver.url}\r\n                  alt=\"profile_picture\"\r\n                />\r\n                <span className=\"flow-text center\">\r\n                  {driver.firstName} {driver.lastName}\r\n                </span>\r\n              </div>\r\n              <div className=\"col s2\">\r\n                <span>\r\n                  <i className=\"fas fa-user-edit small\"></i>\r\n                  <span style={{ fontWeight: \"bold\" }}>EDIT</span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <span>\r\n                <span className=\"grey-text\">LICENSE NUMBER</span>\r\n                <br />\r\n                <span className=\"flow-text\">{driver.license}</span>\r\n              </span>\r\n            </div>\r\n            <br />\r\n            <div className=\"row\">\r\n              <span>\r\n                <span className=\"grey-text\">EMAIL/USERNAME</span>\r\n                <br />\r\n                <span className=\"flow-text\">\r\n                  <a href=\"#!\">{driver.email}</a>\r\n                </span>\r\n              </span>\r\n            </div>\r\n            <br />\r\n            <div className=\"row\">\r\n              <span>\r\n                <span className=\"grey-text\">PHONE NUMBER</span>\r\n                <br />\r\n                <span className=\"flow-text\">\r\n                  <a href=\"#!\">{driver.phoneNumber}</a>\r\n                </span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {/* Main right side */}\r\n          <div className=\"col s8\">\r\n            <ul className=\"right\">\r\n              <li>\r\n                <img src=\"#!\" alt=\"\" />\r\n              </li>\r\n              {/* <DriverProfileButton /> */}\r\n            </ul>\r\n            <div className=\"col s12\">\r\n              <ul className=\"with-header\">\r\n                <li className=\"collection-header\">\r\n                  <h4 className=\"center\">{driver.firstName}'s Logs</h4>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n    // const { driver } = this.state;\r\n    // console.log(this.props);\r\n    // const driver = this.props.driver ? (\r\n    //   <div>\r\n    //     <h4 className=\"center\">{this.props.driver.firstName}</h4>\r\n    //     {/* {this.props.driver.firstName} */}\r\n    //     <p>Driver 1 NAME</p>\r\n    //     {/* {this.props.driver.lastName} */}\r\n    //   </div>\r\n    // ) : (\r\n    //   <div className=\"center\">Loading post...</div>\r\n    // );\r\n    // const driver = this.props.driver ? (\r\n    //   <div>\r\n    //     <h4 className=\"center\">{this.props.driver.firstName}</h4>\r\n    //   </div>\r\n    // ) : (\r\n    //   <div className=\"center\">Loading post...</div>\r\n    // );\r\n    // return <div className=\"container\">{driver}</div>;\r\n\r\n    // const { drivers } = this.props;\r\n    // const driverList = drivers.length ? (\r\n    //   drivers.map(driver => {\r\n    //     return (\r\n    //       <div>\r\n    //         <div\r\n    //           className=\"row\"\r\n    //           style={{ backgroundColor: \"light-blue accent-1\" }}\r\n    //         >\r\n    //           <div className=\"col s12 z-depth-1\">\r\n    //             <span className=\"flow-text\"> DRIVERS > 1234</span>\r\n    //           </div>\r\n    //           <br />\r\n    //           <br />\r\n    //           <br />\r\n    //           {/* Main left side */}\r\n    //           <div className=\"col s4\">\r\n    //             <div className=\"row\">\r\n    //               <div className=\"col s10 center\">\r\n    //                 <span className=\"flow-text center\">12341234</span>\r\n    //               </div>\r\n    //               <div className=\"col s2\">\r\n    //                 <span>\r\n    //                   <i className=\"fas fa-user-edit small\"></i>\r\n    //                   <span style={{ fontWeight: \"bold\" }}>EDIT</span>\r\n    //                 </span>\r\n    //               </div>\r\n    //             </div>\r\n    //           </div>\r\n    //         </div>\r\n    //       </div>\r\n    //     );\r\n    //   })\r\n    // ) : (\r\n    //   <div className=\"center\">No Drivers yet</div>\r\n    // );\r\n    // return (\r\n    //   <div className=\"container\">\r\n    //     <h4 className=\"center\">Profile</h4>\r\n    //     {driverList}\r\n    //   </div>\r\n    // );\r\n  }\r\n}\r\n\r\n// ownProps is the props of this component before we attach the props of the store.\r\n// Our ownProps are gonna contain information about the route. i.e: \"/driver/1\".\r\n// Then we use that id to connect to the particular id from the store.\r\n// const mapStateToProps = (state, ownProps) => {\r\n//   console.log(state);\r\n//   let id = ownProps.match.params.id;\r\n//   return {\r\n//     driver: state.driver\r\n//   };\r\n// };\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let id = ownProps.match.params.driver_id;\r\n  console.log(id);\r\n  return {\r\n    driver: state.driver\r\n  };\r\n};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     getDrivers: driver => dispatch(getDrivers(driver))\r\n//   };\r\n// };\r\n//.find(driver => driver.id === id)\r\nexport default connect(mapStateToProps)(DriverProfileG);\r\n"]},"metadata":{},"sourceType":"module"}