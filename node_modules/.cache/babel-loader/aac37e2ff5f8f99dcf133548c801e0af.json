{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher\\\\src\\\\components\\\\driverProfileLayout\\\\DriverProfile.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getDrivers } from \"../../store/actions/driverActions\";\nimport { withRouter } from \"react-router\";\nimport DriverProfileList from \"./DriverProfileList\";\nimport Preloader from \"../layout/Preloader\";\nimport PropTypes from \"prop-types\";\n\nconst DriverProfile = (props, ownProps) => {\n  useEffect(() => {\n    getDrivers();\n    let id = ownProps.match.params.driver_id;\n    console.log(id); //   // eslint-disable-next-line\n  }, []);\n\n  if (props.loading || props.drivers === null) {\n    return React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  }\n\n  let id = props.id;\n  console.log(id);\n  return React.createElement(\"div\", {\n    className: \"col s12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"with-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.driver.drivers && props.driver.drivers.map(driver => {\n    return React.createElement(DriverProfileList, {\n      driver: driver,\n      key: driver.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    });\n  })));\n};\n\nDriverProfile.propTypes = {\n  driver: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  // let id = ownProps.match.params.driver_id;\n  // const drivers = state.driver.drivers;\n  // const driver = drivers ? drivers[id] : null;\n  // console.log(id);\n  // console.log(driver);\n  return {\n    driver: state.driver\n  };\n}; //.find(driver => driver.id === id)\n// .filter(driver => driver.id === id)\n\n\nexport default withRouter(connect(mapStateToProps, {\n  getDrivers\n})(DriverProfile));","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher/src/components/driverProfileLayout/DriverProfile.js"],"names":["React","useEffect","connect","getDrivers","withRouter","DriverProfileList","Preloader","PropTypes","DriverProfile","props","ownProps","id","match","params","driver_id","console","log","loading","drivers","driver","map","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzCT,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,UAAU;AACV,QAAIQ,EAAE,GAAGD,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBC,SAA/B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,EAAZ,EAHc,CAId;AACD,GALQ,EAKN,EALM,CAAT;;AAMA,MAAIF,KAAK,CAACQ,OAAN,IAAiBR,KAAK,CAACS,OAAN,KAAkB,IAAvC,EAA6C;AAC3C,WAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,MAAIP,EAAE,GAAGF,KAAK,CAACE,EAAf;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,EAAZ;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGF,KAAK,CAACU,MAAN,CAAaD,OAAb,IACCT,KAAK,CAACU,MAAN,CAAaD,OAAb,CAAqBE,GAArB,CAAyBD,MAAM,IAAI;AACjC,WAAO,oBAAC,iBAAD;AAAmB,MAAA,MAAM,EAAEA,MAA3B;AAAmC,MAAA,GAAG,EAAEA,MAAM,CAACR,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,CAVJ,CAJF,CADF;AAqBD,CAlCD;;AAoCAH,aAAa,CAACa,SAAd,GAA0B;AACxBF,EAAAA,MAAM,EAAEZ,SAAS,CAACe,MAAV,CAAiBC;AADD,CAA1B;;AAIA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQf,QAAR,KAAqB;AAC3C;AACA;AACA;AACA;AACA;AACA,SAAO;AACLS,IAAAA,MAAM,EAAEM,KAAK,CAACN;AADT,GAAP;AAGD,CATD,C,CAUA;AACA;;;AACA,eAAef,UAAU,CACvBF,OAAO,CAACsB,eAAD,EAAkB;AAAErB,EAAAA;AAAF,CAAlB,CAAP,CAAyCK,aAAzC,CADuB,CAAzB","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDrivers } from \"../../store/actions/driverActions\";\r\nimport { withRouter } from \"react-router\";\r\nimport DriverProfileList from \"./DriverProfileList\";\r\nimport Preloader from \"../layout/Preloader\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst DriverProfile = (props, ownProps) => {\r\n  useEffect(() => {\r\n    getDrivers();\r\n    let id = ownProps.match.params.driver_id;\r\n    console.log(id);\r\n    //   // eslint-disable-next-line\r\n  }, []);\r\n  if (props.loading || props.drivers === null) {\r\n    return <Preloader />;\r\n  }\r\n  let id = props.id;\r\n  console.log(id);\r\n\r\n  return (\r\n    <div className=\"col s12\">\r\n      {/* {props.driver.drivers &&\r\n        props.driver.drivers.filter(driver => driver.id === id)}\r\n      {<DriverProfileList driver={props.driver} />} */}\r\n      <ul className=\"with-header\">\r\n        {/* {props.driver.drivers &&\r\n          props.driver.drivers.map(driver => {\r\n            return <DriverProfileList driver={driver} key={driver.id} />;\r\n          })} */}\r\n\r\n        {/* })} */}\r\n        {/* {<DriverProfileList driver={props.driver} />} */}\r\n\r\n        {props.driver.drivers &&\r\n          props.driver.drivers.map(driver => {\r\n            return <DriverProfileList driver={driver} key={driver.id} />;\r\n          })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nDriverProfile.propTypes = {\r\n  driver: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  // let id = ownProps.match.params.driver_id;\r\n  // const drivers = state.driver.drivers;\r\n  // const driver = drivers ? drivers[id] : null;\r\n  // console.log(id);\r\n  // console.log(driver);\r\n  return {\r\n    driver: state.driver\r\n  };\r\n};\r\n//.find(driver => driver.id === id)\r\n// .filter(driver => driver.id === id)\r\nexport default withRouter(\r\n  connect(mapStateToProps, { getDrivers })(DriverProfile)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}