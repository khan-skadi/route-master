{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher\\\\src\\\\components\\\\driverProfileLayout\\\\DriverProfile.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getDrivers } from \"../../store/actions/driverActions\";\nimport { withRouter } from \"react-router\";\nimport DriverProfileList from \"./DriverProfileList\";\nimport Preloader from \"../layout/Preloader\";\nimport PropTypes from \"prop-types\"; // { driver: { drivers, loading }, getDrivers }\n// const DriverProfile = props => {\n\nconst DriverProfile = props => {\n  useEffect(() => {\n    getDrivers(); // eslint-disable-next-line\n  }, []);\n\n  if (props.loading || props.drivers === null) {\n    return React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  } // console.log(drivers.filter(s => s.firstName === \"Khan\"));\n\n\n  return React.createElement(\"div\", {\n    className: \"col s12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"with-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.firstName), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"drivers\")));\n};\n\nDriverProfile.propTypes = {\n  driver: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  let id = ownProps.match.params.driver_id; // const drivers = state.driver.drivers;\n  // const driver = drivers ? drivers[id] : null;\n  // console.log(driver);\n\n  console.log(id); // console.log(driver);\n\n  return {\n    driver: state.driver\n  };\n}; //.find(driver => driver.id === id)\n// .filter(driver => driver.id === id)\n\n\nexport default withRouter(connect(null, {\n  getDrivers\n})(DriverProfile));","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher/src/components/driverProfileLayout/DriverProfile.js"],"names":["React","useEffect","connect","getDrivers","withRouter","DriverProfileList","Preloader","PropTypes","DriverProfile","props","loading","drivers","firstName","propTypes","driver","object","isRequired","mapStateToProps","state","ownProps","id","match","params","driver_id","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;AACA;;AACA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC7BR,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,UAAU,GADI,CAGd;AACD,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAIM,KAAK,CAACC,OAAN,IAAiBD,KAAK,CAACE,OAAN,KAAkB,IAAvC,EAA6C;AAC3C,WAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAT4B,CAU7B;;;AACA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,KAAK,CAACG,SAAZ,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,CADF,CADF;AAYD,CAvBD;;AAyBAJ,aAAa,CAACK,SAAd,GAA0B;AACxBC,EAAAA,MAAM,EAAEP,SAAS,CAACQ,MAAV,CAAiBC;AADD,CAA1B;;AAIA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,MAAIC,EAAE,GAAGD,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBC,SAA/B,CAD2C,CAE3C;AACA;AACA;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,EAAZ,EAL2C,CAM3C;;AACA,SAAO;AACLN,IAAAA,MAAM,EAAEI,KAAK,CAACJ;AADT,GAAP;AAGD,CAVD,C,CAWA;AACA;;;AACA,eAAeV,UAAU,CAACF,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA;AAAF,CAAP,CAAP,CAA8BK,aAA9B,CAAD,CAAzB","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDrivers } from \"../../store/actions/driverActions\";\r\nimport { withRouter } from \"react-router\";\r\nimport DriverProfileList from \"./DriverProfileList\";\r\nimport Preloader from \"../layout/Preloader\";\r\nimport PropTypes from \"prop-types\";\r\n// { driver: { drivers, loading }, getDrivers }\r\n// const DriverProfile = props => {\r\nconst DriverProfile = props => {\r\n  useEffect(() => {\r\n    getDrivers();\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (props.loading || props.drivers === null) {\r\n    return <Preloader />;\r\n  }\r\n  // console.log(drivers.filter(s => s.firstName === \"Khan\"));\r\n  return (\r\n    <div className=\"col s12\">\r\n      <ul className=\"with-header\">\r\n        <div>{props.firstName}</div>\r\n        {/* {props.driver &&\r\n          props.driver.map(driver => {\r\n            return <DriverProfileList driver={driver} key={driver.id} />;\r\n          })} */}\r\n        <div>drivers</div>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nDriverProfile.propTypes = {\r\n  driver: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let id = ownProps.match.params.driver_id;\r\n  // const drivers = state.driver.drivers;\r\n  // const driver = drivers ? drivers[id] : null;\r\n  // console.log(driver);\r\n  console.log(id);\r\n  // console.log(driver);\r\n  return {\r\n    driver: state.driver\r\n  };\r\n};\r\n//.find(driver => driver.id === id)\r\n// .filter(driver => driver.id === id)\r\nexport default withRouter(connect(null, { getDrivers })(DriverProfile));\r\n"]},"metadata":{},"sourceType":"module"}