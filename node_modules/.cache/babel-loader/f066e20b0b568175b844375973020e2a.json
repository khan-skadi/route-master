{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher-working_branch2_router\\\\src\\\\components\\\\driverProfileLayout\\\\DriverProfileG.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass DriverProfileG extends Component {\n  render() {\n    console.log(this.props);\n    const driver = this.props.driver ? React.createElement(\"div\", {\n      className: \"driver\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, this.driver.firstName), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Driver 1 NAME\")) : React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Loading post...\");\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, driver); // const { drivers } = this.props;\n    // const driverList = drivers.length ? (\n    //   drivers.map(driver => {\n    //     return (\n    //       <div>\n    //         <div\n    //           className=\"row\"\n    //           style={{ backgroundColor: \"light-blue accent-1\" }}\n    //         >\n    //           <div className=\"col s12 z-depth-1\">\n    //             <span className=\"flow-text\"> DRIVERS > 1234</span>\n    //           </div>\n    //           <br />\n    //           <br />\n    //           <br />\n    //           {/* Main left side */}\n    //           <div className=\"col s4\">\n    //             <div className=\"row\">\n    //               <div className=\"col s10 center\">\n    //                 <span className=\"flow-text center\">12341234</span>\n    //               </div>\n    //               <div className=\"col s2\">\n    //                 <span>\n    //                   <i className=\"fas fa-user-edit small\"></i>\n    //                   <span style={{ fontWeight: \"bold\" }}>EDIT</span>\n    //                 </span>\n    //               </div>\n    //             </div>\n    //           </div>\n    //         </div>\n    //       </div>\n    //     );\n    //   })\n    // ) : (\n    //   <div className=\"center\">No Drivers yet</div>\n    // );\n    // return (\n    //   <div className=\"container\">\n    //     <h4 className=\"center\">Profile</h4>\n    //     {driverList}\n    //   </div>\n    // );\n  }\n\n} // ownProps is the props of this component before we attach the props of the store.\n// Our ownProps are gonna contain information about the route. i.e: \"/driver/1\".\n// Then we use that id to connect to the particular id from the store.\n\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(state);\n  let id = ownProps.match.params.id;\n  return {\n    driver: state.driver\n  };\n}; //.find(driver => driver.id === id)\n\n\nexport default connect(mapStateToProps)(DriverProfileG);","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher-working_branch2_router/src/components/driverProfileLayout/DriverProfileG.js"],"names":["React","Component","connect","DriverProfileG","render","console","log","props","driver","firstName","mapStateToProps","state","ownProps","id","match","params"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AACrCG,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,UAAMC,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAX,GACb;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,KAAKA,MAAL,CAAYC,SAApC,CADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,CADa,GAQb;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBARF;AAWA,WAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BD,MAA5B,CAAP,CAbO,CAcP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAzDoC,C,CA4DvC;AACA;AACA;;;AACA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3CP,EAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACA,MAAIE,EAAE,GAAGD,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBF,EAA/B;AACA,SAAO;AACLL,IAAAA,MAAM,EAAEG,KAAK,CAACH;AADT,GAAP;AAGD,CAND,C,CAOA;;;AACA,eAAeN,OAAO,CAACQ,eAAD,CAAP,CAAyBP,cAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass DriverProfileG extends Component {\r\n  render() {\r\n    console.log(this.props);\r\n    const driver = this.props.driver ? (\r\n      <div className=\"driver\">\r\n        <h4 className=\"center\">{this.driver.firstName}</h4>\r\n        {/* {this.props.driver.firstName} */}\r\n        <p>Driver 1 NAME</p>\r\n        {/* {this.props.driver.lastName} */}\r\n      </div>\r\n    ) : (\r\n      <div className=\"center\">Loading post...</div>\r\n    );\r\n\r\n    return <div className=\"container\">{driver}</div>;\r\n    // const { drivers } = this.props;\r\n    // const driverList = drivers.length ? (\r\n    //   drivers.map(driver => {\r\n    //     return (\r\n    //       <div>\r\n    //         <div\r\n    //           className=\"row\"\r\n    //           style={{ backgroundColor: \"light-blue accent-1\" }}\r\n    //         >\r\n    //           <div className=\"col s12 z-depth-1\">\r\n    //             <span className=\"flow-text\"> DRIVERS > 1234</span>\r\n    //           </div>\r\n    //           <br />\r\n    //           <br />\r\n    //           <br />\r\n    //           {/* Main left side */}\r\n    //           <div className=\"col s4\">\r\n    //             <div className=\"row\">\r\n    //               <div className=\"col s10 center\">\r\n    //                 <span className=\"flow-text center\">12341234</span>\r\n    //               </div>\r\n    //               <div className=\"col s2\">\r\n    //                 <span>\r\n    //                   <i className=\"fas fa-user-edit small\"></i>\r\n    //                   <span style={{ fontWeight: \"bold\" }}>EDIT</span>\r\n    //                 </span>\r\n    //               </div>\r\n    //             </div>\r\n    //           </div>\r\n    //         </div>\r\n    //       </div>\r\n    //     );\r\n    //   })\r\n    // ) : (\r\n    //   <div className=\"center\">No Drivers yet</div>\r\n    // );\r\n    // return (\r\n    //   <div className=\"container\">\r\n    //     <h4 className=\"center\">Profile</h4>\r\n    //     {driverList}\r\n    //   </div>\r\n    // );\r\n  }\r\n}\r\n\r\n// ownProps is the props of this component before we attach the props of the store.\r\n// Our ownProps are gonna contain information about the route. i.e: \"/driver/1\".\r\n// Then we use that id to connect to the particular id from the store.\r\nconst mapStateToProps = (state, ownProps) => {\r\n  console.log(state);\r\n  let id = ownProps.match.params.id;\r\n  return {\r\n    driver: state.driver\r\n  };\r\n};\r\n//.find(driver => driver.id === id)\r\nexport default connect(mapStateToProps)(DriverProfileG);\r\n"]},"metadata":{},"sourceType":"module"}