{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport rootReducer from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\nimport fbConfig from \"../config/fbConfig\";\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, composeWithDevTools(compose(applyMiddleware(...middleware).withExtraArgument({\n  getFirestore,\n  getFirebase\n}), reduxFirestore(fbConfig), reactReduxFirebase(fbConfig))));\nexport default store; // FAILSAFE ---------------------------------------------\n// import { createStore, applyMiddleware } from \"redux\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n// import thunk from \"redux-thunk\";\n// import rootReducer from \"./reducers/index\";\n// const initialState = {};\n// const middleware = [thunk];\n// const store = createStore(\n//   rootReducer,\n//   initialState,\n//   composeWithDevTools(applyMiddleware(...middleware))\n// );\n// export default store;","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher-working_branch2_router/src/store/store.js"],"names":["createStore","applyMiddleware","compose","composeWithDevTools","reduxFirestore","getFirestore","reactReduxFirebase","getFirebase","rootReducer","thunk","fbConfig","initialState","middleware","store","withExtraArgument"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,iBAA7C;AACA,SAASC,kBAAT,EAA6BC,WAA7B,QAAgD,sBAAhD;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACH,KAAD,CAAnB;AAEA,MAAMI,KAAK,GAAGb,WAAW,CACvBQ,WADuB,EAEvBG,YAFuB,EAGvBR,mBAAmB,CACjBD,OAAO,CACLD,eAAe,CAAC,GAAGW,UAAJ,CAAf,CAA+BE,iBAA/B,CAAiD;AAC/CT,EAAAA,YAD+C;AAE/CE,EAAAA;AAF+C,CAAjD,CADK,EAKLH,cAAc,CAACM,QAAD,CALT,EAMLJ,kBAAkB,CAACI,QAAD,CANb,CADU,CAHI,CAAzB;AAeA,eAAeG,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport rootReducer from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\nimport fbConfig from \"../config/fbConfig\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(\n    compose(\n      applyMiddleware(...middleware).withExtraArgument({\n        getFirestore,\n        getFirebase\n      }),\n      reduxFirestore(fbConfig),\n      reactReduxFirebase(fbConfig)\n    )\n  )\n);\n\nexport default store;\n\n// FAILSAFE ---------------------------------------------\n// import { createStore, applyMiddleware } from \"redux\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n// import thunk from \"redux-thunk\";\n// import rootReducer from \"./reducers/index\";\n\n// const initialState = {};\n\n// const middleware = [thunk];\n\n// const store = createStore(\n//   rootReducer,\n//   initialState,\n//   composeWithDevTools(applyMiddleware(...middleware))\n// );\n\n// export default store;\n"]},"metadata":{},"sourceType":"module"}