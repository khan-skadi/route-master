{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher-working_branch2_router\\\\src\\\\components\\\\driverLayout\\\\Drivers.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getDrivers } from \"../../store/actions/driverActions\";\nimport DriverItem from \"./DriverItem\";\nimport PropTypes from \"prop-types\";\nimport Preloader from \"../layout/Preloader\"; // import logo from \"../../img/Logo.png\";\n\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst Drivers = ({\n  getDrivers,\n  driver: {\n    drivers,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getDrivers(); // eslint-disable-next-line\n  }, []);\n\n  if (loading || drivers === null) {\n    return React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col s6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#!\",\n    className: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"#!\",\n    alt: \"profile_picture\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"col s6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"#!\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"action-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#!\",\n    className: \"btn-floating btn-large red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"large material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"mode_edit\")), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#!\",\n    className: \"btn-floating red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"insert_chart\"))), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#!\",\n    className: \"btn-floating yellow darken-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"format_quote\"))), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#!\",\n    className: \"btn-floating green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"publish\"))), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#!\",\n    className: \"btn-floating blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"attach_file\")))))))), React.createElement(\"div\", {\n    className: \"col s8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"collection with-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"collection-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Roy's Routes\")), drivers.map(driver => React.createElement(DriverItem, {\n    driver: driver,\n    key: driver.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })))));\n};\n\nDrivers.propTypes = {\n  driver: PropTypes.object.isRequired,\n  getDrivers: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  driver: state.driver\n});\n\nexport default connect(mapStateToProps, {\n  getDrivers\n})(Drivers);","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher-working_branch2_router/src/components/driverLayout/Drivers.js"],"names":["React","useEffect","connect","getDrivers","DriverItem","PropTypes","Preloader","M","Drivers","driver","drivers","loading","map","id","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDrivers } from \"../../store/actions/driverActions\";\r\nimport DriverItem from \"./DriverItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport Preloader from \"../layout/Preloader\";\r\n// import logo from \"../../img/Logo.png\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nconst Drivers = ({ getDrivers, driver: { drivers, loading } }) => {\r\n  useEffect(() => {\r\n    getDrivers();\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (loading || drivers === null) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col s6\">\r\n          <a href=\"#!\" className=\"left\">\r\n            <img src=\"#!\" alt=\"profile_picture\" />\r\n          </a>\r\n        </div>\r\n        <div className=\"col s6\">\r\n          <ul className=\"right\">\r\n            <li>\r\n              <img src=\"#!\" alt=\"\" />\r\n            </li>\r\n            <div className=\"action-btn\">\r\n              <a href=\"#!\" className=\"btn-floating btn-large red\">\r\n                <i className=\"large material-icons\">mode_edit</i>\r\n              </a>\r\n              <ul>\r\n                <li>\r\n                  <a href=\"#!\" className=\"btn-floating red\">\r\n                    <i className=\"material-icons\">insert_chart</i>\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#!\" className=\"btn-floating yellow darken-1\">\r\n                    <i className=\"material-icons\">format_quote</i>\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#!\" className=\"btn-floating green\">\r\n                    <i className=\"material-icons\">publish</i>\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#!\" className=\"btn-floating blue\">\r\n                    <i className=\"material-icons\">attach_file</i>\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col s8\">\r\n        <ul className=\"collection with-header\">\r\n          <li className=\"collection-header\">\r\n            <h4 className=\"center\">Roy's Routes</h4>\r\n          </li>\r\n\r\n          {drivers.map(driver => (\r\n            <DriverItem driver={driver} key={driver.id} />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDrivers.propTypes = {\r\n  driver: PropTypes.object.isRequired,\r\n  getDrivers: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  driver: state.driver\r\n});\r\n\r\nexport default connect(mapStateToProps, { getDrivers })(Drivers);\r\n"]},"metadata":{},"sourceType":"module"}