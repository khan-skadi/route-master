{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher-working_branch2_router\\\\src\\\\components\\\\logs\\\\Logs.js\";\nimport React from \"react\";\nimport { getLogs } from \"../../store/actions/logActions\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport LogItem from \"./LogItem\";\nimport Preloader from \"../layout/Preloader\";\nimport PropTypes from \"prop-types\";\n\nconst Logs = ({\n  log: {\n    logs,\n    loading\n  },\n  driver,\n  getLogs\n}) => {\n  // useEffect(() => {\n  //   getLogs();\n  //   // eslint-disable-next-line\n  // }, []);\n  if (loading || logs === null) {\n    return React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, !loading && logs.length === 0 ? React.createElement(\"p\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"No logs to show...\") : logs.map(log => React.createElement(LogItem, {\n    log: log,\n    key: log.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(NavLink, {\n    to: \"/archived-routes\",\n    className: \"flow-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"blockquote\", {\n    style: {\n      color: \"green\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Archived Routes\")));\n};\n\nLogs.propTypes = {\n  log: PropTypes.object.isRequired,\n  driver: PropTypes.object.isRequired,\n  getLogs: PropTypes.func.isRequired\n}; // const mapStateToProps = state => ({\n//   log: state.log,\n//   driver: state.driver\n// });\n\nexport default connect(null, {\n  getLogs\n})(Logs);","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher-working_branch2_router/src/components/logs/Logs.js"],"names":["React","getLogs","connect","NavLink","LogItem","Preloader","PropTypes","Logs","log","logs","loading","driver","length","map","id","color","propTypes","object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,GAAG,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAP;AAA0BC,EAAAA,MAA1B;AAAkCV,EAAAA;AAAlC,CAAD,KAAiD;AAC5D;AACA;AACA;AACA;AAEA,MAAIS,OAAO,IAAID,IAAI,KAAK,IAAxB,EAA8B;AAC5B,WAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOG,CAACC,OAAD,IAAYD,IAAI,CAACG,MAAL,KAAgB,CAA5B,GACC;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD,GAGCH,IAAI,CAACI,GAAL,CAASL,GAAG,IAAI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,GAAd;AAAmB,IAAA,GAAG,EAAEA,GAAG,CAACM,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,CAVJ,EAYE,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,kBAAZ;AAA+B,IAAA,SAAS,EAAC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAY,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAZF,CADF;AA4BD,CAtCD;;AAwCAR,IAAI,CAACS,SAAL,GAAiB;AACfR,EAAAA,GAAG,EAAEF,SAAS,CAACW,MAAV,CAAiBC,UADP;AAEfP,EAAAA,MAAM,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UAFV;AAGfjB,EAAAA,OAAO,EAAEK,SAAS,CAACa,IAAV,CAAeD;AAHT,CAAjB,C,CAMA;AACA;AACA;AACA;;AAEA,eAAehB,OAAO,CAAC,IAAD,EAAO;AAAED,EAAAA;AAAF,CAAP,CAAP,CAA2BM,IAA3B,CAAf","sourcesContent":["import React from \"react\";\nimport { getLogs } from \"../../store/actions/logActions\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport LogItem from \"./LogItem\";\nimport Preloader from \"../layout/Preloader\";\nimport PropTypes from \"prop-types\";\n\nconst Logs = ({ log: { logs, loading }, driver, getLogs }) => {\n  // useEffect(() => {\n  //   getLogs();\n  //   // eslint-disable-next-line\n  // }, []);\n\n  if (loading || logs === null) {\n    return <Preloader />;\n  }\n\n  return (\n    <div>\n      {/* <div className=\"row\">\n        <div className=\"col s8\">\n          <ul className=\"collection with-header\">\n            <li className=\"collection-header\">\n              <h4 className=\"center\">All Routes</h4>\n            </li> */}\n      {!loading && logs.length === 0 ? (\n        <p className=\"center\">No logs to show...</p>\n      ) : (\n        logs.map(log => <LogItem log={log} key={log.id} />)\n      )}\n      <NavLink to=\"/archived-routes\" className=\"flow-text\">\n        <blockquote style={{ color: \"green\" }}>Archived Routes</blockquote>\n      </NavLink>\n      {/* </ul> */}\n      {/* <div>\n            <OurStaff />\n          </div>\n        </div>\n\n        <div className=\"col s4\">\n          <AdminPanel driver={driver} />\n        </div>\n      </div> */}\n    </div>\n  );\n};\n\nLogs.propTypes = {\n  log: PropTypes.object.isRequired,\n  driver: PropTypes.object.isRequired,\n  getLogs: PropTypes.func.isRequired\n};\n\n// const mapStateToProps = state => ({\n//   log: state.log,\n//   driver: state.driver\n// });\n\nexport default connect(null, { getLogs })(Logs);\n"]},"metadata":{},"sourceType":"module"}