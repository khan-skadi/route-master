{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher\\\\src\\\\components\\\\driverProfileLayout\\\\DriverProfile.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getDrivers } from \"../../store/actions/driverActions\";\nimport { withRouter } from \"react-router\";\nimport { useSelector } from \"react-redux\";\nimport DriverProfileList from \"./DriverProfileList\";\nimport Preloader from \"../layout/Preloader\";\nimport PropTypes from \"prop-types\"; // { driver: { drivers, loading }, getDrivers }\n// const DriverProfile = props => {\n\nconst DriverProfile = props => {\n  const driver = useSelector(state => state.driver.drivers);\n  useEffect(() => {\n    getDrivers(); // eslint-disable-next-line\n  }, []);\n\n  if (props.loading || props.drivers === null) {\n    return React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"col s12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"with-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.firstName), driver && driver.map(driver => {\n    return React.createElement(DriverProfileList, {\n      driver: driver,\n      key: driver.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"drivers\")));\n};\n\nDriverProfile.propTypes = {\n  driver: PropTypes.object.isRequired\n}; // const mapStateToProps = (state, ownProps) => {\n//   console.log(state);\n//   let id = ownProps.match.params.driver_id;\n//   console.log(id);\n//   return {\n//     driver: state.driver.drivers\n//   };\n// };\n//.find(driver => driver.id === id)\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getDrivers: () => dispatch(getDrivers(dispatch))\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(DriverProfile));","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher/src/components/driverProfileLayout/DriverProfile.js"],"names":["React","useEffect","connect","getDrivers","withRouter","useSelector","DriverProfileList","Preloader","PropTypes","DriverProfile","props","driver","state","drivers","loading","firstName","map","id","propTypes","object","isRequired","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;AACA;;AACA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC7B,QAAMC,MAAM,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,MAAN,CAAaE,OAAvB,CAA1B;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,UAAU,GADI,CAGd;AACD,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAIO,KAAK,CAACI,OAAN,IAAiBJ,KAAK,CAACG,OAAN,KAAkB,IAAvC,EAA6C;AAC3C,WAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,KAAK,CAACK,SAAZ,CADF,EAMGJ,MAAM,IACLA,MAAM,CAACK,GAAP,CAAWL,MAAM,IAAI;AACnB,WAAO,oBAAC,iBAAD;AAAmB,MAAA,MAAM,EAAEA,MAA3B;AAAmC,MAAA,GAAG,EAAEA,MAAM,CAACM,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,CAPJ,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVF,CADF,CADF;AAgBD,CA7BD;;AA+BAR,aAAa,CAACS,SAAd,GAA0B;AACxBP,EAAAA,MAAM,EAAEH,SAAS,CAACW,MAAV,CAAiBC;AADD,CAA1B,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLnB,IAAAA,UAAU,EAAE,MAAMmB,QAAQ,CAACnB,UAAU,CAACmB,QAAD,CAAX;AADrB,GAAP;AAGD,CAJD;;AAMA,eAAelB,UAAU,CAACF,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkCZ,aAAlC,CAAD,CAAzB","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDrivers } from \"../../store/actions/driverActions\";\r\nimport { withRouter } from \"react-router\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DriverProfileList from \"./DriverProfileList\";\r\nimport Preloader from \"../layout/Preloader\";\r\nimport PropTypes from \"prop-types\";\r\n// { driver: { drivers, loading }, getDrivers }\r\n// const DriverProfile = props => {\r\nconst DriverProfile = props => {\r\n  const driver = useSelector(state => state.driver.drivers);\r\n\r\n  useEffect(() => {\r\n    getDrivers();\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (props.loading || props.drivers === null) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"col s12\">\r\n      <ul className=\"with-header\">\r\n        <div>{props.firstName}</div>\r\n        {/* {props.driver.drivers &&\r\n          props.driver.drivers.map(driver => {\r\n            return <DriverProfileList driver={driver} key={driver.id} />;\r\n          })} */}\r\n        {driver &&\r\n          driver.map(driver => {\r\n            return <DriverProfileList driver={driver} key={driver.id} />;\r\n          })}\r\n        <div>drivers</div>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nDriverProfile.propTypes = {\r\n  driver: PropTypes.object.isRequired\r\n};\r\n\r\n// const mapStateToProps = (state, ownProps) => {\r\n//   console.log(state);\r\n//   let id = ownProps.match.params.driver_id;\r\n//   console.log(id);\r\n//   return {\r\n//     driver: state.driver.drivers\r\n//   };\r\n// };\r\n//.find(driver => driver.id === id)\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getDrivers: () => dispatch(getDrivers(dispatch))\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(DriverProfile));\r\n"]},"metadata":{},"sourceType":"module"}