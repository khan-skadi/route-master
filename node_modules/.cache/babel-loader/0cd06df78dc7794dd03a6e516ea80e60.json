{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher\\\\src\\\\components\\\\layout\\\\FindRoutesModal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateLog } from \"../../store/actions/logActions\";\nimport PropTypes from \"prop-types\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst FindRoutesModal = ({\n  currentRoute\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        message = _useState2[0],\n        setMessage = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        tech = _useState4[0],\n        setTech = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        attention = _useState6[0],\n        setAttention = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        progress = _useState8[0],\n        setProgress = _useState8[1];\n\n  useEffect(() => {\n    if (currentRoute) {\n      setMessage(currentRoute.message);\n      setAttention(currentRoute.attention);\n      setTech(currentRoute.tech);\n      setProgress(currentRoute.progress);\n    }\n  }, [currentRoute]); //   const onSubmit = () => {\n  //     if (message === \"\" || tech === \"\") {\n  //       M.toast({ html: \"Please submit a message and a driver\" });\n  //     } else {\n  //       const updLog = {\n  //         id: currentRoute.id,\n  //         message,\n  //         attention,\n  //         progress,\n  //         tech,\n  //         date: new Date()\n  //       };\n  //       updateLog(updLog);\n  //       M.toast({ html: `Route updated by ${tech}` });\n  //       // Clear Fields\n  //       setMessage(\"\");\n  //       setTech(\"\");\n  //       setAttention(false);\n  //       setProgress(false);\n  //     }\n  //   };\n\n  return React.createElement(\"div\", {\n    id: \"find-routes-modal\",\n    className: \"modal\",\n    style: modalStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Route Info\")));\n};\n\nconst modalStyle = {\n  width: \"75%\",\n  height: \"75%\"\n};\nFindRoutesModal.propTypes = {\n  current: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  currentRoute: state.route.current\n});\n\nexport default connect(mapStateToProps, {\n  updateLog\n})(FindRoutesModal);","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher/src/components/layout/FindRoutesModal.js"],"names":["React","useState","useEffect","connect","updateLog","PropTypes","M","FindRoutesModal","currentRoute","message","setMessage","tech","setTech","attention","setAttention","progress","setProgress","modalStyle","width","height","propTypes","current","object","mapStateToProps","state","route"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,CAAP,MAAc,4CAAd;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAAA,oBACdP,QAAQ,CAAC,EAAD,CADM;AAAA;AAAA,QACrCQ,OADqC;AAAA,QAC5BC,UAD4B;;AAAA,qBAEpBT,QAAQ,CAAC,EAAD,CAFY;AAAA;AAAA,QAErCU,IAFqC;AAAA,QAE/BC,OAF+B;;AAAA,qBAGVX,QAAQ,CAAC,KAAD,CAHE;AAAA;AAAA,QAGrCY,SAHqC;AAAA,QAG1BC,YAH0B;;AAAA,qBAIZb,QAAQ,CAAC,KAAD,CAJI;AAAA;AAAA,QAIrCc,QAJqC;AAAA,QAI3BC,WAJ2B;;AAM5Cd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,YAAJ,EAAkB;AAChBE,MAAAA,UAAU,CAACF,YAAY,CAACC,OAAd,CAAV;AACAK,MAAAA,YAAY,CAACN,YAAY,CAACK,SAAd,CAAZ;AACAD,MAAAA,OAAO,CAACJ,YAAY,CAACG,IAAd,CAAP;AACAK,MAAAA,WAAW,CAACR,YAAY,CAACO,QAAd,CAAX;AACD;AACF,GAPQ,EAON,CAACP,YAAD,CAPM,CAAT,CAN4C,CAe5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACE;AAAK,IAAA,EAAE,EAAC,mBAAR;AAA4B,IAAA,SAAS,EAAC,OAAtC;AAA8C,IAAA,KAAK,EAAES,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,CADF;AAyED,CAhHD;;AAkHA,MAAMA,UAAU,GAAG;AACjBC,EAAAA,KAAK,EAAE,KADU;AAEjBC,EAAAA,MAAM,EAAE;AAFS,CAAnB;AAKAZ,eAAe,CAACa,SAAhB,GAA4B;AAC1BC,EAAAA,OAAO,EAAEhB,SAAS,CAACiB;AADO,CAA5B;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChChB,EAAAA,YAAY,EAAEgB,KAAK,CAACC,KAAN,CAAYJ;AADM,CAAL,CAA7B;;AAIA,eAAelB,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CAAwCG,eAAxC,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateLog } from \"../../store/actions/logActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nconst FindRoutesModal = ({ currentRoute }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [tech, setTech] = useState(\"\");\r\n  const [attention, setAttention] = useState(false);\r\n  const [progress, setProgress] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (currentRoute) {\r\n      setMessage(currentRoute.message);\r\n      setAttention(currentRoute.attention);\r\n      setTech(currentRoute.tech);\r\n      setProgress(currentRoute.progress);\r\n    }\r\n  }, [currentRoute]);\r\n\r\n  //   const onSubmit = () => {\r\n  //     if (message === \"\" || tech === \"\") {\r\n  //       M.toast({ html: \"Please submit a message and a driver\" });\r\n  //     } else {\r\n  //       const updLog = {\r\n  //         id: currentRoute.id,\r\n  //         message,\r\n  //         attention,\r\n  //         progress,\r\n  //         tech,\r\n  //         date: new Date()\r\n  //       };\r\n\r\n  //       updateLog(updLog);\r\n  //       M.toast({ html: `Route updated by ${tech}` });\r\n\r\n  //       // Clear Fields\r\n  //       setMessage(\"\");\r\n  //       setTech(\"\");\r\n  //       setAttention(false);\r\n  //       setProgress(false);\r\n  //     }\r\n  //   };\r\n\r\n  return (\r\n    <div id=\"find-routes-modal\" className=\"modal\" style={modalStyle}>\r\n      <div className=\"modal-content\">\r\n        <h4>Route Info</h4>\r\n        {/* <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"message\"\r\n              value={message}\r\n              onChange={e => setMessage(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <select\r\n              name=\"tech\"\r\n              value={tech}\r\n              className=\"browser-default\"\r\n              onChange={e => setTech(e.target.value)}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Driver\r\n              </option>\r\n              <DriverSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"filled-in\"\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={e => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"filled-in\"\r\n                  checked={progress}\r\n                  value={progress}\r\n                  onChange={e => setProgress(!progress)}\r\n                />\r\n                <span>In Progress</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect blue btn\"\r\n        >\r\n          Submit\r\n        </a>\r\n      </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: \"75%\",\r\n  height: \"75%\"\r\n};\r\n\r\nFindRoutesModal.propTypes = {\r\n  current: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentRoute: state.route.current\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateLog })(FindRoutesModal);\r\n"]},"metadata":{},"sourceType":"module"}