{"ast":null,"code":"// import {\n//   GET_TECHS,\n//   ADD_TECH,\n//   DELETE_TECH,\n//   SET_LOADING,\n//   TECHS_ERROR\n// } from \"../actions/types\";\n// const initialState = {\n//   techs: null,\n//   loading: false,\n//   error: null\n// };\n// export default (state = initialState, action) => {\n//   switch (action.type) {\n//     case GET_TECHS:\n//       return {\n//         ...state,\n//         techs: action.payload,\n//         loading: false\n//       };\n//     case ADD_TECH:\n//       return {\n//         ...state,\n//         techs: [...state.techs, action.payload],\n//         loading: false\n//       };\n//     case DELETE_TECH:\n//       return {\n//         ...state,\n//         techs: state.techs.filter(tech => tech.id !== action.payload),\n//         loading: false\n//       };\n//     case SET_LOADING:\n//       return {\n//         ...state,\n//         loading: true\n//       };\n//     case TECHS_ERROR:\n//       console.error(action.payload);\n//       return {\n//         ...state,\n//         error: action.payload,\n//         loading: false\n//       };\n//     default:\n//       return state;\n//   }\n// };","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher/src/store/reducers/techReducer.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import {\n//   GET_TECHS,\n//   ADD_TECH,\n//   DELETE_TECH,\n//   SET_LOADING,\n//   TECHS_ERROR\n// } from \"../actions/types\";\n\n// const initialState = {\n//   techs: null,\n//   loading: false,\n//   error: null\n// };\n\n// export default (state = initialState, action) => {\n//   switch (action.type) {\n//     case GET_TECHS:\n//       return {\n//         ...state,\n//         techs: action.payload,\n//         loading: false\n//       };\n//     case ADD_TECH:\n//       return {\n//         ...state,\n//         techs: [...state.techs, action.payload],\n//         loading: false\n//       };\n//     case DELETE_TECH:\n//       return {\n//         ...state,\n//         techs: state.techs.filter(tech => tech.id !== action.payload),\n//         loading: false\n//       };\n//     case SET_LOADING:\n//       return {\n//         ...state,\n//         loading: true\n//       };\n//     case TECHS_ERROR:\n//       console.error(action.payload);\n//       return {\n//         ...state,\n//         error: action.payload,\n//         loading: false\n//       };\n//     default:\n//       return state;\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}