{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher-working_branch2_router\\\\src\\\\components\\\\driverProfileLayout\\\\DriverProfile.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getDrivers } from \"../../store/actions/driverActions\"; // import DriverProfileButton from \"./DriverProfileButton\";\n\nimport DriverProfileList from \"./DriverProfileList\";\nimport PropTypes from \"prop-types\"; // const DriverProfile = ({ driver: { drivers }, getDrivers }) => {\n\nconst DriverProfile = ({\n  routeProps,\n  driver,\n  getDrivers\n}) => {\n  let id = routeProps.match.params.driver_id;\n  useEffect(() => {\n    getDrivers(); // eslint-disable-next-line\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"col s12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"with-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, driver.drivers && driver.drivers.map(driver => React.createElement(DriverProfileList, {\n    driver: driver,\n    key: driver.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }))));\n};\n\nDriverProfile.propTypes = {\n  driver: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  let id = ownProps.match.params.driver_id;\n  console.log(ownProps);\n  return {\n    driver: state.driver\n  };\n}; // const mapStateToProps = state => {\n//   return {\n//     driver: state.driver\n//   };\n// };\n//.find(driver => driver.id === id)\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     getDrivers: driver => dispatch(getDrivers(driver))\n//   };\n// };\n\n\nexport default connect(mapStateToProps, {\n  getDrivers\n})(DriverProfile);","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher-working_branch2_router/src/components/driverProfileLayout/DriverProfile.js"],"names":["React","useState","useEffect","connect","getDrivers","DriverProfileList","PropTypes","DriverProfile","routeProps","driver","id","match","params","driver_id","drivers","map","propTypes","object","isRequired","mapStateToProps","state","ownProps","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,mCAA3B,C,CACA;;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,MAAd;AAAsBL,EAAAA;AAAtB,CAAD,KAAwC;AAC5D,MAAIM,EAAE,GAAGF,UAAU,CAACG,KAAX,CAAiBC,MAAjB,CAAwBC,SAAjC;AACAX,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,UAAU,GADI,CAGd;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,MAAM,CAACK,OAAP,IACCL,MAAM,CAACK,OAAP,CAAeC,GAAf,CAAmBN,MAAM,IACvB,oBAAC,iBAAD;AAAmB,IAAA,MAAM,EAAEA,MAA3B;AAAmC,IAAA,GAAG,EAAEA,MAAM,CAACC,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CADF,CADF;AAcD,CAtBD;;AAwBAH,aAAa,CAACS,SAAd,GAA0B;AACxBP,EAAAA,MAAM,EAAEH,SAAS,CAACW,MAAV,CAAiBC;AADD,CAA1B;;AAIA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,MAAIX,EAAE,GAAGW,QAAQ,CAACV,KAAT,CAAeC,MAAf,CAAsBC,SAA/B;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,SAAO;AACLZ,IAAAA,MAAM,EAAEW,KAAK,CAACX;AADT,GAAP;AAGD,CAND,C,CAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,eAAeN,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAAyCG,aAAzC,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDrivers } from \"../../store/actions/driverActions\";\r\n// import DriverProfileButton from \"./DriverProfileButton\";\r\nimport DriverProfileList from \"./DriverProfileList\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// const DriverProfile = ({ driver: { drivers }, getDrivers }) => {\r\nconst DriverProfile = ({ routeProps, driver, getDrivers }) => {\r\n  let id = routeProps.match.params.driver_id;\r\n  useEffect(() => {\r\n    getDrivers();\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"col s12\">\r\n      <ul className=\"with-header\">\r\n        {driver.drivers &&\r\n          driver.drivers.map(driver => (\r\n            <DriverProfileList driver={driver} key={driver.id} />\r\n          ))}\r\n        {/* {driver.drivers &&\r\n          driver.drivers.map(driver => {\r\n            return <DriverProfileList driver={driver} key={driver.id} />;\r\n          })} */}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nDriverProfile.propTypes = {\r\n  driver: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let id = ownProps.match.params.driver_id;\r\n  console.log(ownProps);\r\n  return {\r\n    driver: state.driver\r\n  };\r\n};\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     driver: state.driver\r\n//   };\r\n// };\r\n//.find(driver => driver.id === id)\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     getDrivers: driver => dispatch(getDrivers(driver))\r\n//   };\r\n// };\r\n\r\nexport default connect(mapStateToProps, { getDrivers })(DriverProfile);\r\n"]},"metadata":{},"sourceType":"module"}