{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher\\\\src\\\\components\\\\layout\\\\FindRoutesModal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateLog } from \"../../store/actions/logActions\";\nimport DriverSelectOptions from \"../drivers/DriverSelectOptions\";\nimport PropTypes from \"prop-types\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst FindRoutesModal = ({\n  currentRoute\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        message = _useState2[0],\n        setMessage = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        tech = _useState4[0],\n        setTech = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        attention = _useState6[0],\n        setAttention = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        progress = _useState8[0],\n        setProgress = _useState8[1];\n\n  useEffect(() => {\n    if (currentRoute) {\n      setMessage(currentRoute.message);\n      setAttention(currentRoute.attention);\n      setTech(currentRoute.tech);\n      setProgress(currentRoute.progress);\n    }\n  }, [currentRoute]);\n\n  const onSubmit = () => {\n    if (message === \"\" || tech === \"\") {\n      M.toast({\n        html: \"Please submit a message and a driver\"\n      });\n    } else {\n      const updLog = {\n        id: currentRoute.id,\n        message,\n        attention,\n        progress,\n        tech,\n        date: new Date()\n      };\n      updateLog(updLog);\n      M.toast({\n        html: `Route updated by ${tech}`\n      }); // Clear Fields\n\n      setMessage(\"\");\n      setTech(\"\");\n      setAttention(false);\n      setProgress(false);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    id: \"find-routes-modal\",\n    className: \"modal\",\n    style: modalStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"View Route\")));\n};\n\nconst modalStyle = {\n  width: \"75%\",\n  height: \"75%\"\n};\nFindRoutesModal.propTypes = {\n  currentRoute: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  currentRoute: state.route.currentRoute\n});\n\nexport default connect(mapStateToProps, {\n  updateLog\n})(FindRoutesModal);","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher/src/components/layout/FindRoutesModal.js"],"names":["React","useState","useEffect","connect","updateLog","DriverSelectOptions","PropTypes","M","FindRoutesModal","currentRoute","message","setMessage","tech","setTech","attention","setAttention","progress","setProgress","onSubmit","toast","html","updLog","id","date","Date","modalStyle","width","height","propTypes","object","mapStateToProps","state","route"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateLog } from \"../../store/actions/logActions\";\r\nimport DriverSelectOptions from \"../drivers/DriverSelectOptions\";\r\nimport PropTypes from \"prop-types\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nconst FindRoutesModal = ({ currentRoute }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [tech, setTech] = useState(\"\");\r\n  const [attention, setAttention] = useState(false);\r\n  const [progress, setProgress] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (currentRoute) {\r\n      setMessage(currentRoute.message);\r\n      setAttention(currentRoute.attention);\r\n      setTech(currentRoute.tech);\r\n      setProgress(currentRoute.progress);\r\n    }\r\n  }, [currentRoute]);\r\n\r\n  const onSubmit = () => {\r\n    if (message === \"\" || tech === \"\") {\r\n      M.toast({ html: \"Please submit a message and a driver\" });\r\n    } else {\r\n      const updLog = {\r\n        id: currentRoute.id,\r\n        message,\r\n        attention,\r\n        progress,\r\n        tech,\r\n        date: new Date()\r\n      };\r\n\r\n      updateLog(updLog);\r\n      M.toast({ html: `Route updated by ${tech}` });\r\n\r\n      // Clear Fields\r\n      setMessage(\"\");\r\n      setTech(\"\");\r\n      setAttention(false);\r\n      setProgress(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"find-routes-modal\" className=\"modal\" style={modalStyle}>\r\n      <div className=\"modal-content\">\r\n        <h4>View Route</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: \"75%\",\r\n  height: \"75%\"\r\n};\r\n\r\nFindRoutesModal.propTypes = {\r\n  currentRoute: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentRoute: state.route.currentRoute\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateLog })(FindRoutesModal);\r\n"]},"metadata":{},"sourceType":"module"}