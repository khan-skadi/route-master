{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { GET_ROUTES, ADD_ROUTE, DELETE_ROUTE, UPDATE_ROUTE, ROUTES_ERROR, SET_CURRENT_ROUTE, CLEAR_CURRENT_ROUTE, SET_LOADING } from \"../actions/types\";\nconst initialState = {\n  routes: null,\n  currentRoute: null,\n  loading: false,\n  error: null\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_ROUTES:\n      return _objectSpread({}, state, {\n        routes: action.payload,\n        loading: false\n      });\n\n    case ADD_ROUTE:\n      return _objectSpread({}, state, {\n        routes: [...state.routes, action.payload],\n        loading: false\n      });\n\n    case DELETE_ROUTE:\n      return _objectSpread({}, state, {\n        routes: state.routes.filter(route => route.id !== action.payload),\n        loading: false\n      });\n\n    case UPDATE_ROUTE:\n      return _objectSpread({}, state, {\n        routes: state.routes.map(route => route.id === action.payload.id ? action.payload : route)\n      });\n\n    case SET_CURRENT_ROUTE:\n      return _objectSpread({}, state, {\n        currentRoute: action.payload\n      });\n\n    case CLEAR_CURRENT_ROUTE:\n      return _objectSpread({}, state, {\n        currentRoute: null\n      });\n\n    case SET_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case ROUTES_ERROR:\n      console.error(action.payload);\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher/src/store/reducers/routeReducer.js"],"names":["GET_ROUTES","ADD_ROUTE","DELETE_ROUTE","UPDATE_ROUTE","ROUTES_ERROR","SET_CURRENT_ROUTE","CLEAR_CURRENT_ROUTE","SET_LOADING","initialState","routes","currentRoute","loading","error","state","action","type","payload","filter","route","id","map","console"],"mappings":";AAAA,SACEA,UADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,YAJF,EAKEC,YALF,EAMEC,iBANF,EAOEC,mBAPF,EAQEC,WARF,QASO,kBATP;AAWA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,IADW;AAEnBC,EAAAA,YAAY,EAAE,IAFK;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,gBAAe,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,UAAL;AACE,+BACKa,KADL;AAEEJ,QAAAA,MAAM,EAAEK,MAAM,CAACE,OAFjB;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKV,SAAL;AACE,+BACKY,KADL;AAEEJ,QAAAA,MAAM,EAAE,CAAC,GAAGI,KAAK,CAACJ,MAAV,EAAkBK,MAAM,CAACE,OAAzB,CAFV;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKT,YAAL;AACE,+BACKW,KADL;AAEEJ,QAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAaQ,MAAb,CAAoBC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaL,MAAM,CAACE,OAAjD,CAFV;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKR,YAAL;AACE,+BACKU,KADL;AAEEJ,QAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAaW,GAAb,CAAiBF,KAAK,IAC5BA,KAAK,CAACC,EAAN,KAAaL,MAAM,CAACE,OAAP,CAAeG,EAA5B,GAAiCL,MAAM,CAACE,OAAxC,GAAkDE,KAD5C;AAFV;;AAMF,SAAKb,iBAAL;AACE,+BACKQ,KADL;AAEEH,QAAAA,YAAY,EAAEI,MAAM,CAACE;AAFvB;;AAIF,SAAKV,mBAAL;AACE,+BACKO,KADL;AAEEH,QAAAA,YAAY,EAAE;AAFhB;;AAIF,SAAKH,WAAL;AACE,+BACKM,KADL;AAEEF,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKP,YAAL;AACEiB,MAAAA,OAAO,CAACT,KAAR,CAAcE,MAAM,CAACE,OAArB;AACA,+BACKH,KADL;AAEED,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAFhB;;AAKF;AACE,aAAOH,KAAP;AAjDJ;AAmDD,CApDD","sourcesContent":["import {\r\n  GET_ROUTES,\r\n  ADD_ROUTE,\r\n  DELETE_ROUTE,\r\n  UPDATE_ROUTE,\r\n  ROUTES_ERROR,\r\n  SET_CURRENT_ROUTE,\r\n  CLEAR_CURRENT_ROUTE,\r\n  SET_LOADING\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  routes: null,\r\n  currentRoute: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ROUTES:\r\n      return {\r\n        ...state,\r\n        routes: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_ROUTE:\r\n      return {\r\n        ...state,\r\n        routes: [...state.routes, action.payload],\r\n        loading: false\r\n      };\r\n    case DELETE_ROUTE:\r\n      return {\r\n        ...state,\r\n        routes: state.routes.filter(route => route.id !== action.payload),\r\n        loading: false\r\n      };\r\n    case UPDATE_ROUTE:\r\n      return {\r\n        ...state,\r\n        routes: state.routes.map(route =>\r\n          route.id === action.payload.id ? action.payload : route\r\n        )\r\n      };\r\n    case SET_CURRENT_ROUTE:\r\n      return {\r\n        ...state,\r\n        currentRoute: action.payload\r\n      };\r\n    case CLEAR_CURRENT_ROUTE:\r\n      return {\r\n        ...state,\r\n        currentRoute: null\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case ROUTES_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}