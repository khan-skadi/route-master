{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport reducer from \"./store/reducers/index\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxForebase, getFirebase } from \"react-redux-firebase\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nconst initialState = {}; // const fbConfig = {\n//   apiKey: \"AIzaSyA4y8VjlODcq48s79crUx1eypGJ0o0L7pI\",\n//   authDomain: \"truck-dispatcher-6050d.firebaseapp.com\",\n//   databaseURL: \"https://truck-dispatcher-6050d.firebaseio.com\",\n//   projectId: \"truck-dispatcher-6050d\",\n//   storageBucket: \"truck-dispatcher-6050d.appspot.com\",\n//   messagingSenderId: \"399693021654\",\n//   appId: \"1:399693021654:web:1d74ce0279116e79e0a477\",\n//   measurementId: \"G-D21MTX0DNK\"\n// }; // object containing Firebase config\n// const rrfConfig = { userProfile: \"users\" };\n\nexport default (() => {\n  return createStore(reducer, initialState, compose(reactReduxFirebase(firebase), applyMiddleware(thunk.withExtraArgument({\n    getFirestore,\n    getFirebase\n  }))));\n}); // import { createStore, applyMiddleware, compose } from \"redux\";\n// import rootReducer from \"./store/reducers/index\";\n// import thunk from \"redux-thunk\";\n// import { getFirestore } from \"redux-firestore\";\n// import { getFirebase } from \"react-redux-firebase\";\n// import { reactReduxFirebase } from \"react-redux-firebase\";\n// import { reduxFirestore } from \"redux-firestore\"; // <- needed if using firestore\n// import firebase from \"firebase/app\";\n// const initialState = {};\n// const fbConfig = {}; // object containing Firebase config\n// const rrfConfig = { userProfile: \"users\" }; // react-redux-firebase config\n// // Initialize firebase instance\n// firebase.initializeApp(fbConfig);\n// export default () => {\n//   return createStore(\n//     rootReducer,\n//     initialState,\n//     compose(\n//       reactReduxFirebase(firebase, rrfConfig), // pass in firebase instance instead of config\n//       reduxFirestore(firebase), // <- needed if using firestore\n//       applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })) // to add other middleware\n//     )\n//   );\n// };","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher-working_branch2_router/src/createReduxStore.js"],"names":["createStore","applyMiddleware","compose","reducer","thunk","reduxFirestore","getFirestore","reactReduxForebase","getFirebase","firebase","initialState","reactReduxFirebase","withExtraArgument"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,iBAA7C;AACA,SAASC,kBAAT,EAA6BC,WAA7B,QAAgD,sBAAhD;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,MAAMC,YAAY,GAAG,EAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,gBAAe,MAAM;AACnB,SAAOV,WAAW,CAChBG,OADgB,EAEhBO,YAFgB,EAGhBR,OAAO,CACLS,kBAAkB,CAACF,QAAD,CADb,EAELR,eAAe,CAACG,KAAK,CAACQ,iBAAN,CAAwB;AAAEN,IAAAA,YAAF;AAAgBE,IAAAA;AAAhB,GAAxB,CAAD,CAFV,CAHS,CAAlB;AAQD,CATD,E,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducer from \"./store/reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\r\nimport { reactReduxForebase, getFirebase } from \"react-redux-firebase\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst initialState = {};\r\n\r\n// const fbConfig = {\r\n//   apiKey: \"AIzaSyA4y8VjlODcq48s79crUx1eypGJ0o0L7pI\",\r\n//   authDomain: \"truck-dispatcher-6050d.firebaseapp.com\",\r\n//   databaseURL: \"https://truck-dispatcher-6050d.firebaseio.com\",\r\n//   projectId: \"truck-dispatcher-6050d\",\r\n//   storageBucket: \"truck-dispatcher-6050d.appspot.com\",\r\n//   messagingSenderId: \"399693021654\",\r\n//   appId: \"1:399693021654:web:1d74ce0279116e79e0a477\",\r\n//   measurementId: \"G-D21MTX0DNK\"\r\n// }; // object containing Firebase config\r\n\r\n// const rrfConfig = { userProfile: \"users\" };\r\n\r\nexport default () => {\r\n  return createStore(\r\n    reducer,\r\n    initialState,\r\n    compose(\r\n      reactReduxFirebase(firebase),\r\n      applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase }))\r\n    )\r\n  );\r\n};\r\n\r\n// import { createStore, applyMiddleware, compose } from \"redux\";\r\n// import rootReducer from \"./store/reducers/index\";\r\n// import thunk from \"redux-thunk\";\r\n// import { getFirestore } from \"redux-firestore\";\r\n// import { getFirebase } from \"react-redux-firebase\";\r\n// import { reactReduxFirebase } from \"react-redux-firebase\";\r\n// import { reduxFirestore } from \"redux-firestore\"; // <- needed if using firestore\r\n// import firebase from \"firebase/app\";\r\n\r\n// const initialState = {};\r\n\r\n// const fbConfig = {}; // object containing Firebase config\r\n// const rrfConfig = { userProfile: \"users\" }; // react-redux-firebase config\r\n\r\n// // Initialize firebase instance\r\n// firebase.initializeApp(fbConfig);\r\n\r\n// export default () => {\r\n//   return createStore(\r\n//     rootReducer,\r\n//     initialState,\r\n//     compose(\r\n//       reactReduxFirebase(firebase, rrfConfig), // pass in firebase instance instead of config\r\n//       reduxFirestore(firebase), // <- needed if using firestore\r\n//       applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })) // to add other middleware\r\n//     )\r\n//   );\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}