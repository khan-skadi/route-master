{"ast":null,"code":"import { GET_ROUTES, ADD_ROUTE, DELETE_ROUTE, UPDATE_ROUTE, ROUTES_ERROR, SET_CURRENT_ROUTE, CLEAR_CURRENT_ROUTE, SET_LOADING } from \"./types\";\nexport const getRoutes = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(\"/routes\");\n    const data = await res.json();\n    dispatch({\n      type: GET_ROUTES,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: ROUTES_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\nexport const addRoute = route => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(\"/routes\", {\n      method: \"POST\",\n      body: JSON.stringify(route),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: ADD_ROUTE,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: ROUTES_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\nexport const deleteRoute = id => async dispatch => {\n  try {\n    setLoading();\n    await fetch(`/routes/${id}`, {\n      method: \"DELETE\"\n    });\n    dispatch({\n      type: DELETE_ROUTE,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: ROUTES_ERROR,\n      payload: err.response.data\n    });\n  }\n};\nexport const updateRoute = route => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(`/routes/${route.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(route),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: UPDATE_ROUTE,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: ROUTES_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};\nexport const setCurrentRoute = route => {\n  return {\n    type: SET_CURRENT_ROUTE,\n    payload: route\n  };\n};\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_CURRENT_ROUTE\n  };\n};","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher/src/store/actions/routeActions.js"],"names":["GET_ROUTES","ADD_ROUTE","DELETE_ROUTE","UPDATE_ROUTE","ROUTES_ERROR","SET_CURRENT_ROUTE","CLEAR_CURRENT_ROUTE","SET_LOADING","getRoutes","dispatch","setLoading","res","fetch","data","json","type","payload","err","response","statusText","addRoute","route","method","body","JSON","stringify","headers","deleteRoute","id","updateRoute","setCurrentRoute","clearCurrent"],"mappings":"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","sourcesContent":["import {\r\n  GET_ROUTES,\r\n  ADD_ROUTE,\r\n  DELETE_ROUTE,\r\n  UPDATE_ROUTE,\r\n  ROUTES_ERROR,\r\n  SET_CURRENT_ROUTE,\r\n  CLEAR_CURRENT_ROUTE,\r\n  SET_LOADING\r\n} from \"./types\";\r\n\r\nexport const getRoutes = () => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(\"/routes\");\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_ROUTES,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ROUTES_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\nexport const addRoute = route => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(\"/routes\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(route),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: ADD_ROUTE,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ROUTES_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteRoute = id => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    await fetch(`/routes/${id}`, {\r\n      method: \"DELETE\"\r\n    });\r\n\r\n    dispatch({\r\n      type: DELETE_ROUTE,\r\n      payload: id\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ROUTES_ERROR,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateRoute = route => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`/routes/${route.id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(route),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: UPDATE_ROUTE,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ROUTES_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING\r\n  };\r\n};\r\n\r\nexport const setCurrentRoute = route => {\r\n  return {\r\n    type: SET_CURRENT_ROUTE,\r\n    payload: route\r\n  };\r\n};\r\n\r\nexport const clearCurrent = () => {\r\n  return {\r\n    type: CLEAR_CURRENT_ROUTE\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}