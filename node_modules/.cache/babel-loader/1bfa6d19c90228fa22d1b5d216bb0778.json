{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher-working_branch2_router\\\\src\\\\components\\\\driverProfileLayout\\\\DriverProfile.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getDrivers } from \"../../store/actions/driverActions\"; // import DriverProfileButton from \"./DriverProfileButton\";\n\nimport DriverProfileList from \"./DriverProfileList\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router\"; // const DriverProfile = ({ driver: { drivers }, getDrivers }) => {\n\nconst DriverProfile = ({\n  driver,\n  getDrivers\n}, props) => {\n  useEffect(() => {\n    getDrivers(); // eslint-disable-next-line\n  }, []);\n  const match = props.match,\n        location = props.location,\n        history = props.history;\n  console.log(props);\n  let routeId = match.params.driver_id;\n  console.log(routeId);\n  return React.createElement(\"div\", {\n    className: \"col s12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"with-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, driver.drivers && driver.drivers.map(driver => React.createElement(DriverProfileList, {\n    driver: driver,\n    key: driver.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))));\n};\n\nDriverProfile.propTypes = {\n  driver: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  let id = ownProps.match.params.driver_id;\n  console.log(ownProps);\n  return {\n    driver: state.driver\n  };\n}; // const mapStateToProps = state => {\n//   return {\n//     driver: state.driver\n//   };\n// };\n//.find(driver => driver.id === id)\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     getDrivers: driver => dispatch(getDrivers(driver))\n//   };\n// };\n\n\nexport default withRouter(connect(mapStateToProps, {\n  getDrivers\n})(DriverProfile));","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher-working_branch2_router/src/components/driverProfileLayout/DriverProfile.js"],"names":["React","useEffect","connect","getDrivers","DriverProfileList","PropTypes","withRouter","DriverProfile","driver","props","match","location","history","console","log","routeId","params","driver_id","drivers","map","id","propTypes","object","isRequired","mapStateToProps","state","ownProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,mCAA3B,C,CACA;;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,cAA3B,C,CAEA;;AACA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUL,EAAAA;AAAV,CAAD,EAAyBM,KAAzB,KAAmC;AACvDR,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,UAAU,GADI,CAGd;AACD,GAJQ,EAIN,EAJM,CAAT;AADuD,QAO/CO,KAP+C,GAOlBD,KAPkB,CAO/CC,KAP+C;AAAA,QAOxCC,QAPwC,GAOlBF,KAPkB,CAOxCE,QAPwC;AAAA,QAO9BC,OAP8B,GAOlBH,KAPkB,CAO9BG,OAP8B;AAQvDC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,MAAIM,OAAO,GAAGL,KAAK,CAACM,MAAN,CAAaC,SAA3B;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,MAAM,CAACU,OAAP,IACCV,MAAM,CAACU,OAAP,CAAeC,GAAf,CAAmBX,MAAM,IACvB,oBAAC,iBAAD;AAAmB,IAAA,MAAM,EAAEA,MAA3B;AAAmC,IAAA,GAAG,EAAEA,MAAM,CAACY,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CADF,CADF;AAcD,CAzBD;;AA2BAb,aAAa,CAACc,SAAd,GAA0B;AACxBb,EAAAA,MAAM,EAAEH,SAAS,CAACiB,MAAV,CAAiBC;AADD,CAA1B;;AAIA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,MAAIN,EAAE,GAAGM,QAAQ,CAAChB,KAAT,CAAeM,MAAf,CAAsBC,SAA/B;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYY,QAAZ;AACA,SAAO;AACLlB,IAAAA,MAAM,EAAEiB,KAAK,CAACjB;AADT,GAAP;AAGD,CAND,C,CAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,eAAeF,UAAU,CACvBJ,OAAO,CAACsB,eAAD,EAAkB;AAAErB,EAAAA;AAAF,CAAlB,CAAP,CAAyCI,aAAzC,CADuB,CAAzB","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDrivers } from \"../../store/actions/driverActions\";\r\n// import DriverProfileButton from \"./DriverProfileButton\";\r\nimport DriverProfileList from \"./DriverProfileList\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router\";\r\n\r\n// const DriverProfile = ({ driver: { drivers }, getDrivers }) => {\r\nconst DriverProfile = ({ driver, getDrivers }, props) => {\r\n  useEffect(() => {\r\n    getDrivers();\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const { match, location, history } = props;\r\n  console.log(props);\r\n  let routeId = match.params.driver_id;\r\n  console.log(routeId);\r\n  return (\r\n    <div className=\"col s12\">\r\n      <ul className=\"with-header\">\r\n        {driver.drivers &&\r\n          driver.drivers.map(driver => (\r\n            <DriverProfileList driver={driver} key={driver.id} />\r\n          ))}\r\n        {/* {driver.drivers &&\r\n          driver.drivers.map(driver => {\r\n            return <DriverProfileList driver={driver} key={driver.id} />;\r\n          })} */}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nDriverProfile.propTypes = {\r\n  driver: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let id = ownProps.match.params.driver_id;\r\n  console.log(ownProps);\r\n  return {\r\n    driver: state.driver\r\n  };\r\n};\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     driver: state.driver\r\n//   };\r\n// };\r\n//.find(driver => driver.id === id)\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     getDrivers: driver => dispatch(getDrivers(driver))\r\n//   };\r\n// };\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { getDrivers })(DriverProfile)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}