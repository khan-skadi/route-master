{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher-working_branch2_router\\\\src\\\\components\\\\driverProfileLayout\\\\DriverProfile.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getDrivers } from \"../../store/actions/driverActions\"; // import DriverProfileButton from \"./DriverProfileButton\";\n\nimport DriverProfileList from \"./DriverProfileList\";\nimport PropTypes from \"prop-types\";\n\nconst DriverProfile = ({\n  driver,\n  getDrivers\n}) => {\n  useEffect(() => {\n    getDrivers(); // eslint-disable-next-line\n  }, []);\n  return (// <div className=\"row\" style={{ backgroundColor: \"light-blue accent-1\" }}>\n    //   <div className=\"col s12 z-depth-1\">\n    //     <span className=\"flow-text\"> DRIVERS > 1234</span>\n    //   </div>\n    //   <br />\n    //   <br />\n    //   <br />\n    //   {/* Main left side */}\n    //   <div className=\"col s4\">\n    //     <div className=\"row\">\n    //       <div className=\"col s10 center\">\n    //         {/* <img\n    //             style={{ marginLeft: \"80px\" }}\n    //             className=\"responsive-img materialboxed circle\"\n    //             width=\"120px\"\n    //             src={driver.image}\n    //             alt=\"profile_picture\"\n    //           /> */}\n    //         <span className=\"flow-text center\">{driver.firstName}12341234</span>\n    //       </div>\n    //       <div className=\"col s2\">\n    //         <span>\n    //           <i className=\"fas fa-user-edit small\"></i>\n    //           <span style={{ fontWeight: \"bold\" }}>EDIT</span>\n    //         </span>\n    //       </div>\n    //     </div>\n    //     <div className=\"row\">\n    //       <span>\n    //         <span className=\"grey-text\">LICENSE NUMBER</span>\n    //         <br />\n    //         <span className=\"flow-text\">1234124</span>\n    //       </span>\n    //     </div>\n    //     <br />\n    //     <div className=\"row\">\n    //       <span>\n    //         <span className=\"grey-text\">EMAIL/USERNAME</span>\n    //         <br />\n    //         <span className=\"flow-text\">\n    //           <a href=\"#!\">sarawilson@gmail.com</a>\n    //         </span>\n    //       </span>\n    //     </div>\n    //     <br />\n    //     <div className=\"row\">\n    //       <span>\n    //         <span className=\"grey-text\">PHONE NUMBER</span>\n    //         <br />\n    //         <span className=\"flow-text\">\n    //           <a href=\"#!\">+1-555-424-3535</a>\n    //         </span>\n    //       </span>\n    //     </div>\n    //   </div>\n    //   {/* Main right side */}\n    //   <div className=\"col s8\">\n    //     <ul className=\"right\">\n    //       <li>\n    //         <img src=\"#!\" alt=\"\" />\n    //       </li>\n    //       {/* <DriverProfileButton /> */}\n    //     </ul>\n    React.createElement(\"div\", {\n      className: \"col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"with-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"collection-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.driver.firstName, \"'s Logs\")), driver.drivers && driver.drivers.map(driver => {\n      return React.createElement(DriverProfileList, {\n        driver: driver,\n        key: driver.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      });\n    }))) // </div>\n    // </div>\n\n  );\n};\n\nDriverProfile.propTypes = {\n  driver: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  let id = ownProps.match.params.driver_id;\n  console.log(id);\n  return {\n    driver: state.driver\n  };\n}; //.find(driver => driver.id === id)\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     getDrivers: driver => dispatch(getDrivers(driver))\n//   };\n// };\n\n\nexport default connect(mapStateToProps, {\n  getDrivers\n})(DriverProfile);","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher-working_branch2_router/src/components/driverProfileLayout/DriverProfile.js"],"names":["React","useEffect","connect","getDrivers","DriverProfileList","PropTypes","DriverProfile","driver","firstName","drivers","map","id","propTypes","object","isRequired","mapStateToProps","state","ownProps","match","params","driver_id","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,mCAA3B,C,CACA;;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUJ,EAAAA;AAAV,CAAD,KAA4B;AAChDF,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,UAAU,GADI,CAGd;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,SACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,KAAKI,MAAL,CAAYC,SAApC,YADF,CADF,EAKGD,MAAM,CAACE,OAAP,IACCF,MAAM,CAACE,OAAP,CAAeC,GAAf,CAAmBH,MAAM,IAAI;AAC3B,aAAO,oBAAC,iBAAD;AAAmB,QAAA,MAAM,EAAEA,MAA3B;AAAmC,QAAA,GAAG,EAAEA,MAAM,CAACI,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,CANJ,CADF,CAlEF,CA8EE;AACA;;AA/EF;AAiFD,CAxFD;;AA0FAL,aAAa,CAACM,SAAd,GAA0B;AACxBL,EAAAA,MAAM,EAAEF,SAAS,CAACQ,MAAV,CAAiBC;AADD,CAA1B;;AAIA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,MAAIN,EAAE,GAAGM,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,SAA/B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,EAAZ;AACA,SAAO;AACLJ,IAAAA,MAAM,EAAES,KAAK,CAACT;AADT,GAAP;AAGD,CAND,C,CAOA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,eAAeL,OAAO,CAACa,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAAyCG,aAAzC,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDrivers } from \"../../store/actions/driverActions\";\r\n// import DriverProfileButton from \"./DriverProfileButton\";\r\nimport DriverProfileList from \"./DriverProfileList\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst DriverProfile = ({ driver, getDrivers }) => {\r\n  useEffect(() => {\r\n    getDrivers();\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    // <div className=\"row\" style={{ backgroundColor: \"light-blue accent-1\" }}>\r\n    //   <div className=\"col s12 z-depth-1\">\r\n    //     <span className=\"flow-text\"> DRIVERS > 1234</span>\r\n    //   </div>\r\n    //   <br />\r\n    //   <br />\r\n    //   <br />\r\n    //   {/* Main left side */}\r\n    //   <div className=\"col s4\">\r\n    //     <div className=\"row\">\r\n    //       <div className=\"col s10 center\">\r\n    //         {/* <img\r\n    //             style={{ marginLeft: \"80px\" }}\r\n    //             className=\"responsive-img materialboxed circle\"\r\n    //             width=\"120px\"\r\n    //             src={driver.image}\r\n    //             alt=\"profile_picture\"\r\n    //           /> */}\r\n    //         <span className=\"flow-text center\">{driver.firstName}12341234</span>\r\n    //       </div>\r\n    //       <div className=\"col s2\">\r\n    //         <span>\r\n    //           <i className=\"fas fa-user-edit small\"></i>\r\n    //           <span style={{ fontWeight: \"bold\" }}>EDIT</span>\r\n    //         </span>\r\n    //       </div>\r\n    //     </div>\r\n\r\n    //     <div className=\"row\">\r\n    //       <span>\r\n    //         <span className=\"grey-text\">LICENSE NUMBER</span>\r\n    //         <br />\r\n    //         <span className=\"flow-text\">1234124</span>\r\n    //       </span>\r\n    //     </div>\r\n    //     <br />\r\n    //     <div className=\"row\">\r\n    //       <span>\r\n    //         <span className=\"grey-text\">EMAIL/USERNAME</span>\r\n    //         <br />\r\n    //         <span className=\"flow-text\">\r\n    //           <a href=\"#!\">sarawilson@gmail.com</a>\r\n    //         </span>\r\n    //       </span>\r\n    //     </div>\r\n    //     <br />\r\n    //     <div className=\"row\">\r\n    //       <span>\r\n    //         <span className=\"grey-text\">PHONE NUMBER</span>\r\n    //         <br />\r\n    //         <span className=\"flow-text\">\r\n    //           <a href=\"#!\">+1-555-424-3535</a>\r\n    //         </span>\r\n    //       </span>\r\n    //     </div>\r\n    //   </div>\r\n    //   {/* Main right side */}\r\n    //   <div className=\"col s8\">\r\n    //     <ul className=\"right\">\r\n    //       <li>\r\n    //         <img src=\"#!\" alt=\"\" />\r\n    //       </li>\r\n    //       {/* <DriverProfileButton /> */}\r\n    //     </ul>\r\n\r\n    <div className=\"col s12\">\r\n      <ul className=\"with-header\">\r\n        <li className=\"collection-header\">\r\n          <h4 className=\"center\">{this.driver.firstName}'s Logs</h4>\r\n        </li>\r\n\r\n        {driver.drivers &&\r\n          driver.drivers.map(driver => {\r\n            return <DriverProfileList driver={driver} key={driver.id} />;\r\n          })}\r\n      </ul>\r\n    </div>\r\n    // </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nDriverProfile.propTypes = {\r\n  driver: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let id = ownProps.match.params.driver_id;\r\n  console.log(id);\r\n  return {\r\n    driver: state.driver\r\n  };\r\n};\r\n//.find(driver => driver.id === id)\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     getDrivers: driver => dispatch(getDrivers(driver))\r\n//   };\r\n// };\r\n\r\nexport default connect(mapStateToProps, { getDrivers })(DriverProfile);\r\n"]},"metadata":{},"sourceType":"module"}