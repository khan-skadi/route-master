{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport rootReducer from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\nimport fbConfig from \"../config/fbConfig\";\nconst initialState = {}; // const middleware = [thunk];\n\nconst rrfConfig = {\n  userProfile: \"users\"\n};\nconst store = createStore(rootReducer, initialState, compose(composeWithDevTools(reactReduxFirebase(firebase, rrfConfig), reduxFirestore(fbConfig), applyMiddleware(thunk.withExtraArgument({\n  getFirestore,\n  getFirebase\n}))))); // export default () => {\n//   return createStore(\n//     reducer,\n//     intialState,\n//   )\n// }\n\nexport default store; // FAILSAFE ---------------------------------------------\n// import { createStore, applyMiddleware } from \"redux\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n// import thunk from \"redux-thunk\";\n// import rootReducer from \"./reducers/index\";\n// const initialState = {};\n// const middleware = [thunk];\n// const store = createStore(\n//   rootReducer,\n//   initialState,\n//   composeWithDevTools(applyMiddleware(...middleware))\n// );\n// export default store;","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher-working_branch2_router/src/store/store.js"],"names":["createStore","applyMiddleware","compose","composeWithDevTools","reduxFirestore","getFirestore","reactReduxFirebase","getFirebase","rootReducer","thunk","fbConfig","initialState","rrfConfig","userProfile","store","firebase","withExtraArgument"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,iBAA7C;AACA,SAASC,kBAAT,EAA6BC,WAA7B,QAAgD,sBAAhD;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,MAAMC,YAAY,GAAG,EAArB,C,CAEA;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE;AADG,CAAlB;AAIA,MAAMC,KAAK,GAAGd,WAAW,CACvBQ,WADuB,EAEvBG,YAFuB,EAGvBT,OAAO,CACLC,mBAAmB,CACjBG,kBAAkB,CAACS,QAAD,EAAWH,SAAX,CADD,EAEjBR,cAAc,CAACM,QAAD,CAFG,EAGjBT,eAAe,CAACQ,KAAK,CAACO,iBAAN,CAAwB;AAAEX,EAAAA,YAAF;AAAgBE,EAAAA;AAAhB,CAAxB,CAAD,CAHE,CADd,CAHgB,CAAzB,C,CAYA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeO,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport rootReducer from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\nimport fbConfig from \"../config/fbConfig\";\n\nconst initialState = {};\n\n// const middleware = [thunk];\n\nconst rrfConfig = {\n  userProfile: \"users\"\n};\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    composeWithDevTools(\n      reactReduxFirebase(firebase, rrfConfig),\n      reduxFirestore(fbConfig),\n      applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase }))\n    )\n  )\n);\n\n// export default () => {\n//   return createStore(\n//     reducer,\n//     intialState,\n//   )\n// }\n\nexport default store;\n\n// FAILSAFE ---------------------------------------------\n// import { createStore, applyMiddleware } from \"redux\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n// import thunk from \"redux-thunk\";\n// import rootReducer from \"./reducers/index\";\n\n// const initialState = {};\n\n// const middleware = [thunk];\n\n// const store = createStore(\n//   rootReducer,\n//   initialState,\n//   composeWithDevTools(applyMiddleware(...middleware))\n// );\n\n// export default store;\n"]},"metadata":{},"sourceType":"module"}