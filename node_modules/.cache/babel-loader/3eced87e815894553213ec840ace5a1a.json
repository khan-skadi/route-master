{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher-working_branch2_router\\\\src\\\\components\\\\driverProfileLayout\\\\DriverProfileG.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getDrivers } from \"../../store/actions/driverActions\";\n\nclass DriverProfileG extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: null\n    };\n  }\n\n  getDrivers() {\n    this.setState({\n      drivers: this.state.drivers\n    });\n  }\n\n  componentDidMount() {\n    this.getDrivers();\n    let id = this.props.match.params.driver_id;\n    this.setState({\n      id: id\n    });\n  }\n\n  render() {\n    // const { driver } = this.props;\n    console.log(this.props); // const driver = this.props.driver ? (\n    //   <div>\n    //     <h4 className=\"center\">{this.props.driver.firstName}</h4>\n    //     {/* {this.props.driver.firstName} */}\n    //     <p>Driver 1 NAME</p>\n    //     {/* {this.props.driver.lastName} */}\n    //   </div>\n    // ) : (\n    //   <div className=\"center\">Loading post...</div>\n    // );\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.state.id, this.state.firstName)); // const { drivers } = this.props;\n    // const driverList = drivers.length ? (\n    //   drivers.map(driver => {\n    //     return (\n    //       <div>\n    //         <div\n    //           className=\"row\"\n    //           style={{ backgroundColor: \"light-blue accent-1\" }}\n    //         >\n    //           <div className=\"col s12 z-depth-1\">\n    //             <span className=\"flow-text\"> DRIVERS > 1234</span>\n    //           </div>\n    //           <br />\n    //           <br />\n    //           <br />\n    //           {/* Main left side */}\n    //           <div className=\"col s4\">\n    //             <div className=\"row\">\n    //               <div className=\"col s10 center\">\n    //                 <span className=\"flow-text center\">12341234</span>\n    //               </div>\n    //               <div className=\"col s2\">\n    //                 <span>\n    //                   <i className=\"fas fa-user-edit small\"></i>\n    //                   <span style={{ fontWeight: \"bold\" }}>EDIT</span>\n    //                 </span>\n    //               </div>\n    //             </div>\n    //           </div>\n    //         </div>\n    //       </div>\n    //     );\n    //   })\n    // ) : (\n    //   <div className=\"center\">No Drivers yet</div>\n    // );\n    // return (\n    //   <div className=\"container\">\n    //     <h4 className=\"center\">Profile</h4>\n    //     {driverList}\n    //   </div>\n    // );\n  }\n\n} // ownProps is the props of this component before we attach the props of the store.\n// Our ownProps are gonna contain information about the route. i.e: \"/driver/1\".\n// Then we use that id to connect to the particular id from the store.\n// const mapStateToProps = (state, ownProps) => {\n//   console.log(state);\n//   let id = ownProps.match.params.id;\n//   return {\n//     driver: state.driver\n//   };\n// };\n\n\nconst mapStateToProps = state => {\n  return {\n    driver: state.driver\n  };\n}; // const mapDispatchToProps = dispatch => {\n//   return {\n//     getDrivers: driver => dispatch(getDrivers(driver))\n//   };\n// };\n//.find(driver => driver.id === id)\n\n\nexport default connect(mapStateToProps, {\n  getDrivers\n})(DriverProfileG);","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher-working_branch2_router/src/components/driverProfileLayout/DriverProfileG.js"],"names":["React","Component","connect","getDrivers","DriverProfileG","state","id","setState","drivers","componentDidMount","props","match","params","driver_id","render","console","log","firstName","mapStateToProps","driver"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,mCAA3B;;AAEA,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCI,KADqC,GAC7B;AACNC,MAAAA,EAAE,EAAE;AADE,KAD6B;AAAA;;AAKrCH,EAAAA,UAAU,GAAG;AACX,SAAKI,QAAL,CAAc;AACZC,MAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG;AADR,KAAd;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,UAAL;AACA,QAAIG,EAAE,GAAG,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,SAAjC;AACA,SAAKN,QAAL,CAAc;AACZD,MAAAA,EAAE,EAAEA;AADQ,KAAd;AAGD;;AAEDQ,EAAAA,MAAM,GAAG;AACP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB,EAFO,CAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,KAAL,CAAWC,EADd,EAEG,KAAKD,KAAL,CAAWY,SAFd,CADF,CADF,CAdO,CAuBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AApFoC,C,CAuFvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,eAAe,GAAGb,KAAK,IAAI;AAC/B,SAAO;AACLc,IAAAA,MAAM,EAAEd,KAAK,CAACc;AADT,GAAP;AAGD,CAJD,C,CAMA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAejB,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAAyCC,cAAzC,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDrivers } from \"../../store/actions/driverActions\";\r\n\r\nclass DriverProfileG extends Component {\r\n  state = {\r\n    id: null\r\n  };\r\n\r\n  getDrivers() {\r\n    this.setState({\r\n      drivers: this.state.drivers\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDrivers();\r\n    let id = this.props.match.params.driver_id;\r\n    this.setState({\r\n      id: id\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // const { driver } = this.props;\r\n    console.log(this.props);\r\n    // const driver = this.props.driver ? (\r\n    //   <div>\r\n    //     <h4 className=\"center\">{this.props.driver.firstName}</h4>\r\n    //     {/* {this.props.driver.firstName} */}\r\n    //     <p>Driver 1 NAME</p>\r\n    //     {/* {this.props.driver.lastName} */}\r\n    //   </div>\r\n    // ) : (\r\n    //   <div className=\"center\">Loading post...</div>\r\n    // );\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <h4>\r\n          {this.state.id}\r\n          {this.state.firstName}\r\n        </h4>\r\n        {/* {driver} */}\r\n      </div>\r\n    );\r\n    // const { drivers } = this.props;\r\n    // const driverList = drivers.length ? (\r\n    //   drivers.map(driver => {\r\n    //     return (\r\n    //       <div>\r\n    //         <div\r\n    //           className=\"row\"\r\n    //           style={{ backgroundColor: \"light-blue accent-1\" }}\r\n    //         >\r\n    //           <div className=\"col s12 z-depth-1\">\r\n    //             <span className=\"flow-text\"> DRIVERS > 1234</span>\r\n    //           </div>\r\n    //           <br />\r\n    //           <br />\r\n    //           <br />\r\n    //           {/* Main left side */}\r\n    //           <div className=\"col s4\">\r\n    //             <div className=\"row\">\r\n    //               <div className=\"col s10 center\">\r\n    //                 <span className=\"flow-text center\">12341234</span>\r\n    //               </div>\r\n    //               <div className=\"col s2\">\r\n    //                 <span>\r\n    //                   <i className=\"fas fa-user-edit small\"></i>\r\n    //                   <span style={{ fontWeight: \"bold\" }}>EDIT</span>\r\n    //                 </span>\r\n    //               </div>\r\n    //             </div>\r\n    //           </div>\r\n    //         </div>\r\n    //       </div>\r\n    //     );\r\n    //   })\r\n    // ) : (\r\n    //   <div className=\"center\">No Drivers yet</div>\r\n    // );\r\n    // return (\r\n    //   <div className=\"container\">\r\n    //     <h4 className=\"center\">Profile</h4>\r\n    //     {driverList}\r\n    //   </div>\r\n    // );\r\n  }\r\n}\r\n\r\n// ownProps is the props of this component before we attach the props of the store.\r\n// Our ownProps are gonna contain information about the route. i.e: \"/driver/1\".\r\n// Then we use that id to connect to the particular id from the store.\r\n// const mapStateToProps = (state, ownProps) => {\r\n//   console.log(state);\r\n//   let id = ownProps.match.params.id;\r\n//   return {\r\n//     driver: state.driver\r\n//   };\r\n// };\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    driver: state.driver\r\n  };\r\n};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     getDrivers: driver => dispatch(getDrivers(driver))\r\n//   };\r\n// };\r\n//.find(driver => driver.id === id)\r\nexport default connect(mapStateToProps, { getDrivers })(DriverProfileG);\r\n"]},"metadata":{},"sourceType":"module"}