{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher\\\\src\\\\components\\\\layout\\\\SearchBar.js\";\nimport React, { useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { searchLogs } from \"../../store/actions/logActions\";\nimport { Link } from \"react-router-dom\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport PropTypes from \"prop-types\";\nimport logo from \"../../img/Logo.png\";\nexport const SearchBar = (props, {\n  searchLogs\n}) => {\n  const auth = props.auth,\n        profile = props.profile; // console.log(auth);\n  // This is the logic for rendering the right side of the Navbar based on whether a user is logged in or not.\n\n  const links = auth.uid ? React.createElement(SignedInLinks, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }) : React.createElement(SignedOutLinks, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  });\n  const text = useRef(\"\");\n\n  const onChange = e => {\n    searchLogs(text.current.value);\n  };\n\n  return React.createElement(\"nav\", {\n    style: {\n      marginBottom: \"30px\"\n    },\n    className: \"green accent-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"nav-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"left hide-on-med-and-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"search\",\n    type: \"search\",\n    placeholder: \"Search Routes..\",\n    ref: text,\n    onChange: onChange,\n    style: {\n      width: \"600px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label-icon\",\n    htmlFor: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"search\")), React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"close\"))), React.createElement(Link, {\n    to: \"/\",\n    className: \"brand-logo center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    alt: \"logo\",\n    width: \"108\",\n    height: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), links));\n};\nSearchBar.propTypes = {\n  searchLogs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\n\nexport default connect(mapStateToProps, {\n  searchLogs\n})(SearchBar);","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher/src/components/layout/SearchBar.js"],"names":["React","useRef","connect","searchLogs","Link","SignedInLinks","SignedOutLinks","PropTypes","logo","SearchBar","props","auth","profile","links","uid","text","onChange","e","current","value","marginBottom","width","propTypes","func","isRequired","mapStateToProps","state","console","log","firebase"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { searchLogs } from \"../../store/actions/logActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport PropTypes from \"prop-types\";\r\nimport logo from \"../../img/Logo.png\";\r\n\r\nexport const SearchBar = (props, { searchLogs }) => {\r\n  const { auth, profile } = props;\r\n  // console.log(auth);\r\n  // This is the logic for rendering the right side of the Navbar based on whether a user is logged in or not.\r\n  const links = auth.uid ? (\r\n    <SignedInLinks profile={profile} />\r\n  ) : (\r\n    <SignedOutLinks />\r\n  );\r\n\r\n  const text = useRef(\"\");\r\n\r\n  const onChange = e => {\r\n    searchLogs(text.current.value);\r\n  };\r\n\r\n  return (\r\n    <nav style={{ marginBottom: \"30px\" }} className=\"green accent-4\">\r\n      <div className=\"nav-wrapper\">\r\n        {\r\n          // Left section - Search Bar\r\n        }\r\n        <form className=\"left hide-on-med-and-down\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              id=\"search\"\r\n              type=\"search\"\r\n              placeholder=\"Search Routes..\"\r\n              ref={text}\r\n              onChange={onChange}\r\n              style={{ width: \"600px\" }}\r\n            />\r\n            <label className=\"label-icon\" htmlFor=\"search\">\r\n              <i className=\"material-icons\">search</i>\r\n            </label>\r\n            <i className=\"material-icons\">close</i>\r\n          </div>\r\n        </form>\r\n        {\r\n          // Middle section - Logo\r\n        }\r\n        <Link to=\"/\" className=\"brand-logo center\">\r\n          <img src={logo} alt=\"logo\" width=\"108\" height=\"auto\" />\r\n        </Link>\r\n        {\r\n          // Right section - Social (follow) links\r\n        }\r\n        {links}\r\n        {/* <ul className=\"right\">\r\n          <li>\r\n            <span>\r\n              <NavLink to=\"/find-routes\" className=\"flow-text\">\r\n                Find Routes\r\n              </NavLink>\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <span>\r\n              <NavLink to=\"/signup\" className=\"flow-text\">\r\n                Sign Up\r\n              </NavLink>\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <span>\r\n              <NavLink to=\"/signin\" className=\"flow-text\">\r\n                Sign In\r\n              </NavLink>\r\n            </span>\r\n          </li>\r\n        </ul> */}\r\n        {/* -------------------- FAIL SAFE------------------------ */}\r\n        {/* <ul className=\"right hide-on-med-and-down\">\r\n          <span className=\"left\">\r\n            <NavLink to=\"/archived-routes\" className=\"flow-text\">\r\n              Archived Routes&nbsp;&nbsp;&nbsp;\r\n            </NavLink>\r\n          </span>\r\n          <span className=\"left\">\r\n            <NavLink to=\"find-routes\" className=\"flow-text\">\r\n              Find Routes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            </NavLink>\r\n          </span> */}\r\n        {/* -------------------- FAIL SAFE------------------------ */}\r\n\r\n        {/* <span className=\"left\">\r\n            <a href=\"#!\">follow us</a>\r\n          </span>\r\n          <li>\r\n            <a href=\"#!\">\r\n              <i className=\"fab fa-facebook\"></i>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#!\">\r\n              <i className=\"fab fa-instagram\"></i>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#!\">\r\n              <i className=\"fab fa-twitter\"></i>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#!\">\r\n              <i className=\"fab fa-youtube\"></i>\r\n            </a>\r\n          </li> */}\r\n        {/* </ul> */}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  searchLogs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { searchLogs })(SearchBar);\r\n"]},"metadata":{},"sourceType":"module"}