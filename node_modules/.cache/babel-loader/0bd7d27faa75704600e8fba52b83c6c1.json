{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher-working_branch2_router\\\\src\\\\components\\\\techs\\\\TechListModal.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport TechItem from \"./TechItem\";\nimport { getTechs } from \"../../store/actions/techActions\";\n\nconst TechListModal = ({\n  getTechs,\n  tech: {\n    techs,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getTechs(); // eslint-disable-next-line\n  }, []); // We no longer need this because we are getting the techs through Redux. We will use techs as APP-level state and pass them as props\n  // const getTechs = async () => {\n  //   setLoading(true);\n  //   const res = await fetch(\"/techs\");\n  //   const data = await res.json();\n  //   setTechs(data);\n  //   setLoading(false);\n  // };\n\n  return React.createElement(\"div\", {\n    id: \"tech-list-modal\",\n    className: \"modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Driver List\"), React.createElement(\"ul\", {\n    className: \"collection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, !loading && techs !== null && techs.map(tech => React.createElement(TechItem, {\n    tech: tech,\n    key: tech.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })))));\n};\n\nTechListModal.propTypes = {\n  tech: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tech: state.tech\n});\n\nexport default connect(mapStateToProps, {\n  getTechs\n})(TechListModal);","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher-working_branch2_router/src/components/techs/TechListModal.js"],"names":["React","useEffect","connect","PropTypes","TechItem","getTechs","TechListModal","tech","techs","loading","map","id","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,QAAyB,iCAAzB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAED,EAAAA,QAAF;AAAYE,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAlB,CAAD,KAA4C;AAChER,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,QAAQ,GADM,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT,CADgE,CAMhE;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,SACE;AAAK,IAAA,EAAE,EAAC,iBAAR;AAA0B,IAAA,SAAS,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACI,OAAD,IACCD,KAAK,KAAK,IADX,IAECA,KAAK,CAACE,GAAN,CAAUH,IAAI,IAAI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,GAAG,EAAEA,IAAI,CAACI,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CAHJ,CAFF,CADF,CADF;AAYD,CA5BD;;AA8BAL,aAAa,CAACM,SAAd,GAA0B;AACxBL,EAAAA,IAAI,EAAEJ,SAAS,CAACU,MAAV,CAAiBC,UADC;AAExBT,EAAAA,QAAQ,EAAEF,SAAS,CAACY,IAAV,CAAeD;AAFD,CAA1B;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,IAAI,EAAEU,KAAK,CAACV;AADoB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACc,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CAAuCC,aAAvC,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport TechItem from \"./TechItem\";\nimport { getTechs } from \"../../store/actions/techActions\";\n\nconst TechListModal = ({ getTechs, tech: { techs, loading } }) => {\n  useEffect(() => {\n    getTechs();\n    // eslint-disable-next-line\n  }, []);\n\n  // We no longer need this because we are getting the techs through Redux. We will use techs as APP-level state and pass them as props\n  // const getTechs = async () => {\n  //   setLoading(true);\n  //   const res = await fetch(\"/techs\");\n  //   const data = await res.json();\n\n  //   setTechs(data);\n  //   setLoading(false);\n  // };\n\n  return (\n    <div id=\"tech-list-modal\" className=\"modal\">\n      <div className=\"modal-content\">\n        <h4>Driver List</h4>\n        <ul className=\"collection\">\n          {!loading &&\n            techs !== null &&\n            techs.map(tech => <TechItem tech={tech} key={tech.id} />)}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nTechListModal.propTypes = {\n  tech: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tech: state.tech\n});\n\nexport default connect(mapStateToProps, { getTechs })(TechListModal);\n"]},"metadata":{},"sourceType":"module"}