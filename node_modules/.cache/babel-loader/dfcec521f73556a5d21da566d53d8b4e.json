{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { getFirebase } from \"react-redux-firebase\"; // import firebase from \"firebase/app\";\n\nimport reducer from \"./store/reducers/index\";\nimport thunk from \"redux-thunk\"; // import \"firebase/firestore\";\n// import \"firebase/auth\";\n\nconst initialState = {};\nexport default (() => {\n  return createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunk.withExtraArgument({\n    getFirestore,\n    getFirebase\n  })), reduxFirestore(firebase)));\n});","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher-working_branch2_router/src/createReduxStore.js"],"names":["createStore","applyMiddleware","reduxFirestore","getFirestore","composeWithDevTools","getFirebase","reducer","thunk","initialState","withExtraArgument","firebase"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,iBAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,WAAT,QAA4B,sBAA5B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;AACA;;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,gBAAe,MAAM;AACnB,SAAOR,WAAW,CAChBM,OADgB,EAEhBE,YAFgB,EAGhBJ,mBAAmB,CACjBH,eAAe,CAACM,KAAK,CAACE,iBAAN,CAAwB;AAAEN,IAAAA,YAAF;AAAgBE,IAAAA;AAAhB,GAAxB,CAAD,CADE,EAEjBH,cAAc,CAACQ,QAAD,CAFG,CAHH,CAAlB;AAQD,CATD","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { getFirebase } from \"react-redux-firebase\";\r\n// import firebase from \"firebase/app\";\r\nimport reducer from \"./store/reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\n// import \"firebase/firestore\";\r\n// import \"firebase/auth\";\r\n\r\nconst initialState = {};\r\n\r\nexport default () => {\r\n  return createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(\r\n      applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\r\n      reduxFirestore(firebase)\r\n    )\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}