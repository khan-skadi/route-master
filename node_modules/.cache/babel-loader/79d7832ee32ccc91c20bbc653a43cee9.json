{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher-working_branch2_router\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { SET_LOADING, DRIVERS_ERROR, GET_DRIVERS } from \"../actions/types\";\nconst initialState = {\n  drivers: null,\n  error: null,\n  loading: false\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_DRIVERS:\n      return _objectSpread({}, state, {\n        loading: false\n      });\n\n    case ADD_DRIVER:\n      return _objectSpread({}, state, {\n        drivers: [...state.drivers, action.payload],\n        loading: false\n      });\n\n    case DRIVERS_ERROR:\n      console.log(action.payload);\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    case SET_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher-working_branch2_router/src/store/reducers/driverReducer.js"],"names":["SET_LOADING","DRIVERS_ERROR","GET_DRIVERS","initialState","drivers","error","loading","state","action","type","ADD_DRIVER","payload","console","log"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,aAAtB,EAAqCC,WAArC,QAAwD,kBAAxD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,IADU;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;AAMA,gBAAe,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,WAAL;AACE,+BACKK,KADL;AAEED,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKI,UAAL;AACE,+BACKH,KADL;AAEEH,QAAAA,OAAO,EAAE,CAAC,GAAGG,KAAK,CAACH,OAAV,EAAmBI,MAAM,CAACG,OAA1B,CAFX;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKL,aAAL;AACEW,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACG,OAAnB;AACA,+BACKJ,KADL;AAEEF,QAAAA,KAAK,EAAEG,MAAM,CAACG;AAFhB;;AAIF,SAAKX,WAAL;AACE,+BACKO,KADL;AAEED,QAAAA,OAAO,EAAE;AAFX;;AAIF;AACE,aAAOC,KAAP;AAxBJ;AA0BD,CA3BD","sourcesContent":["import { SET_LOADING, DRIVERS_ERROR, GET_DRIVERS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  drivers: null,\r\n  error: null,\r\n  loading: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_DRIVERS:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      };\r\n    case ADD_DRIVER:\r\n      return {\r\n        ...state,\r\n        drivers: [...state.drivers, action.payload],\r\n        loading: false\r\n      };\r\n    case DRIVERS_ERROR:\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}