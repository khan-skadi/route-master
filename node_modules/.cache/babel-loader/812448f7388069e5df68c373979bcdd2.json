{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher\\\\src\\\\components\\\\logs\\\\EditLogModal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateLog } from \"../../store/actions/logActions\";\nimport DriverSelectOptions from \"../drivers/DriverSelectOptions\";\nimport PropTypes from \"prop-types\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst EditLogModal = ({\n  current,\n  updateLog\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        locationFrom = _useState2[0],\n        setLocationFrom = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        locationTo = _useState4[0],\n        setLocationTo = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        distance = _useState6[0],\n        setDistance = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        postedOn = _useState8[0],\n        setPostedOn = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        postedBy = _useState10[0],\n        setPostedBy = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        attention = _useState12[0],\n        setAttention = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        progress = _useState14[0],\n        setProgress = _useState14[1];\n\n  const _useState15 = useState(\"\"),\n        _useState16 = _slicedToArray(_useState15, 2),\n        driver = _useState16[0],\n        setDriver = _useState16[1];\n\n  useEffect(() => {\n    if (current) {\n      setLocationFrom(current.locationFrom);\n      setLocationTo(current.locationTo);\n      setDistance(current.distance);\n      setPostedOn(current.postedOn);\n      setPostedBy(current.postedBy);\n    }\n  }, [current]);\n\n  const onSubmit = () => {\n    const updRoute = {\n      id: current.id,\n      locationFrom,\n      locationTo,\n      distance,\n      postedOn,\n      postedBy,\n      attention,\n      progress,\n      driver,\n      date: new Date()\n    };\n    updateLog(updRoute);\n    M.toast({\n      html: \"Route edited\"\n    });\n  };\n\n  return React.createElement(\"div\", {\n    id: \"edit-log-modal\",\n    className: \"modal\",\n    style: modalStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Edit Route\"), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"locationFrom\",\n    value: locationFrom || \"\",\n    onChange: e => setLocationFrom(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"locationFrom\",\n    className: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Location From\"))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"locationTo\",\n    value: locationTo || \"\",\n    onChange: e => setLocationTo(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"locationTo\",\n    className: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Location To\"))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    name: \"driver\",\n    value: driver,\n    className: \"browser-default\",\n    onChange: e => setDriver(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Driver\"), React.createElement(DriverSelectOptions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"distance\",\n    value: distance || \"\",\n    onChange: e => setDistance(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"distance\",\n    className: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Distance\"))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"postedOn\",\n    value: postedOn || \"\",\n    onChange: e => setPostedOn(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"postedOn\",\n    className: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Posted On\"))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"postedBy\",\n    value: postedBy || \"\",\n    onChange: e => setPostedBy(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"postedBy\",\n    className: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Posted By\"))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"filled-in\",\n    checked: attention,\n    value: attention,\n    onChange: e => setAttention(!attention),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Important - Time Sensitive\"))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"filled-in\",\n    checked: progress,\n    value: progress,\n    onChange: e => setProgress(!progress),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"In Progress\"))), React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#!\",\n    onClick: onSubmit,\n    className: \"modal-close waves-effect blue darken-3 btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Submit\", React.createElement(\"i\", {\n    className: \"material-icons right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"send\"))))));\n};\n\nconst modalStyle = {\n  width: \"75%\",\n  height: \"75%\"\n};\nEditLogModal.propTypes = {\n  current: PropTypes.object,\n  updateLog: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  current: state.log.current\n});\n\nexport default connect(mapStateToProps, {\n  updateLog\n})(EditLogModal); // const EditLogModal = ({ current, updateLog }) => {\n//   const [message, setMessage] = useState(\"\");\n//   const [driver, setDriver] = useState(\"\");\n//   const [attention, setAttention] = useState(false);\n//   const [progress, setProgress] = useState(false);\n//   useEffect(() => {\n//     if (current) {\n//       setMessage(current.message);\n//       setAttention(current.attention);\n//       setDriver(current.driver);\n//       setProgress(current.progress);\n//     }\n//   }, [current]);\n//   const onSubmit = () => {\n//     if (message === \"\" || driver === \"\") {\n//       M.toast({ html: \"Please submit a message and a driver\" });\n//     } else {\n//       const updLog = {\n//         id: current.id,\n//         message,\n//         attention,\n//         progress,\n//         driver,\n//         date: new Date()\n//       };\n//       updateLog(updLog);\n//       M.toast({ html: `Route updated by ${driver}` });\n//       // Clear Fields\n//       setMessage(\"\");\n//       setDriver(\"\");\n//       setAttention(false);\n//       setProgress(false);\n//     }\n//   };\n//   return (\n//     <div id=\"edit-log-modal\" className=\"modal\" style={modalStyle}>\n//       <div className=\"modal-content\">\n//         <h4>Edit Route</h4>\n//         <div className=\"row\">\n//           <div className=\"input-field\">\n//             <input\n//               type=\"text\"\n//               name=\"message\"\n//               value={message || \"\"}\n//               onChange={e => setMessage(e.target.value)}\n//             />\n//           </div>\n//         </div>\n//         <div className=\"row\">\n//           <div className=\"input-field\">\n//             <select\n//               name=\"driver\"\n//               value={driver || \"\"}\n//               className=\"browser-default\"\n//               onChange={e => setDriver(e.target.value)}\n//             >\n//               <option value=\"\" disabled>\n//                 Select Driver\n//               </option>\n//               <DriverSelectOptions />\n//             </select>\n//           </div>\n//         </div>\n//         <div className=\"row\">\n//           <div className=\"input-field\">\n//             <p>\n//               <label>\n//                 <input\n//                   type=\"checkbox\"\n//                   className=\"filled-in\"\n//                   checked={attention}\n//                   value={attention}\n//                   onChange={e => setAttention(!attention)}\n//                 />\n//                 <span>Needs Attention</span>\n//               </label>\n//             </p>\n//             <p>\n//               <label>\n//                 <input\n//                   type=\"checkbox\"\n//                   className=\"filled-in\"\n//                   checked={progress}\n//                   value={progress}\n//                   onChange={e => setProgress(!progress)}\n//                 />\n//                 <span>In Progress</span>\n//               </label>\n//             </p>\n//           </div>\n//         </div>\n//       </div>\n//       <div className=\"modal-footer\">\n//         <a\n//           href=\"#!\"\n//           onClick={onSubmit}\n//           className=\"modal-close waves-effect blue darken-3 btn\"\n//         >\n//           Submit\n//           <i className=\"material-icons right\">send</i>\n//         </a>\n//       </div>\n//     </div>\n//   );\n// };\n// const modalStyle = {\n//   width: \"75%\",\n//   height: \"75%\"\n// };\n// EditLogModal.propTypes = {\n//   current: PropTypes.object,\n//   updateLog: PropTypes.func.isRequired\n// };\n// const mapStateToProps = state => ({\n//   current: state.log.current\n// });\n// export default connect(mapStateToProps, { updateLog })(EditLogModal);","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher/src/components/logs/EditLogModal.js"],"names":["React","useState","useEffect","connect","updateLog","DriverSelectOptions","PropTypes","M","EditLogModal","current","locationFrom","setLocationFrom","locationTo","setLocationTo","distance","setDistance","postedOn","setPostedOn","postedBy","setPostedBy","attention","setAttention","progress","setProgress","driver","setDriver","onSubmit","updRoute","id","date","Date","toast","html","modalStyle","e","target","value","width","height","propTypes","object","func","isRequired","mapStateToProps","state","log"],"mappings":"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":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateLog } from \"../../store/actions/logActions\";\nimport DriverSelectOptions from \"../drivers/DriverSelectOptions\";\nimport PropTypes from \"prop-types\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst EditLogModal = ({ current, updateLog }) => {\n  const [locationFrom, setLocationFrom] = useState(\"\");\n  const [locationTo, setLocationTo] = useState(\"\");\n  const [distance, setDistance] = useState(\"\");\n  const [postedOn, setPostedOn] = useState(\"\");\n  const [postedBy, setPostedBy] = useState(\"\");\n  const [attention, setAttention] = useState(false);\n  const [progress, setProgress] = useState(false);\n  const [driver, setDriver] = useState(\"\");\n\n  useEffect(() => {\n    if (current) {\n      setLocationFrom(current.locationFrom);\n      setLocationTo(current.locationTo);\n      setDistance(current.distance);\n      setPostedOn(current.postedOn);\n      setPostedBy(current.postedBy);\n    }\n  }, [current]);\n\n  const onSubmit = () => {\n    const updRoute = {\n      id: current.id,\n      locationFrom,\n      locationTo,\n      distance,\n      postedOn,\n      postedBy,\n      attention,\n      progress,\n      driver,\n      date: new Date()\n    };\n\n    updateLog(updRoute);\n\n    M.toast({ html: \"Route edited\" });\n  };\n\n  return (\n    <div id=\"edit-log-modal\" className=\"modal\" style={modalStyle}>\n      <div className=\"modal-content\">\n        <h4>Edit Route</h4>\n\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"locationFrom\"\n              value={locationFrom || \"\"}\n              onChange={e => setLocationFrom(e.target.value)}\n            />\n            <label htmlFor=\"locationFrom\" className=\"active\">\n              Location From\n            </label>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"locationTo\"\n              value={locationTo || \"\"}\n              onChange={e => setLocationTo(e.target.value)}\n            />\n            <label htmlFor=\"locationTo\" className=\"active\">\n              Location To\n            </label>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <select\n              name=\"driver\"\n              value={driver}\n              className=\"browser-default\"\n              onChange={e => setDriver(e.target.value)}\n            >\n              <option value=\"\" disabled>\n                Driver\n              </option>\n              <DriverSelectOptions />\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"input-field\">\n          <input\n            type=\"text\"\n            name=\"distance\"\n            value={distance || \"\"}\n            onChange={e => setDistance(e.target.value)}\n          />\n          <label htmlFor=\"distance\" className=\"active\">\n            Distance\n          </label>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"input-field\">\n          <input\n            type=\"text\"\n            name=\"postedOn\"\n            value={postedOn || \"\"}\n            onChange={e => setPostedOn(e.target.value)}\n          />\n          <label htmlFor=\"postedOn\" className=\"active\">\n            Posted On\n          </label>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"input-field\">\n          <input\n            type=\"text\"\n            name=\"postedBy\"\n            value={postedBy || \"\"}\n            onChange={e => setPostedBy(e.target.value)}\n          />\n          <label htmlFor=\"postedBy\" className=\"active\">\n            Posted By\n          </label>\n        </div>\n      </div>\n      {/* \n      <div className=\"modal-footer\">\n        <a\n          href=\"#!\"\n          onClick={onSubmit}\n          className=\"modal-close waves-effect blue darken-3 btn\"\n        >\n          Add Route\n          <i className=\"material-icons right\">send</i>\n        </a>\n      </div> */}\n\n      <div className=\"row\">\n        <div className=\"input-field\">\n          <p>\n            <label>\n              <input\n                type=\"checkbox\"\n                className=\"filled-in\"\n                checked={attention}\n                value={attention}\n                onChange={e => setAttention(!attention)}\n              />\n              <span>Important - Time Sensitive</span>\n            </label>\n          </p>\n          <p>\n            <label>\n              <input\n                type=\"checkbox\"\n                className=\"filled-in\"\n                checked={progress}\n                value={progress}\n                onChange={e => setProgress(!progress)}\n              />\n              <span>In Progress</span>\n            </label>\n          </p>\n          <div className=\"modal-footer\">\n            <a\n              href=\"#!\"\n              onClick={onSubmit}\n              className=\"modal-close waves-effect blue darken-3 btn\"\n            >\n              Submit\n              <i className=\"material-icons right\">send</i>\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst modalStyle = {\n  width: \"75%\",\n  height: \"75%\"\n};\n\nEditLogModal.propTypes = {\n  current: PropTypes.object,\n  updateLog: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  current: state.log.current\n});\n\nexport default connect(mapStateToProps, { updateLog })(EditLogModal);\n\n// const EditLogModal = ({ current, updateLog }) => {\n//   const [message, setMessage] = useState(\"\");\n//   const [driver, setDriver] = useState(\"\");\n//   const [attention, setAttention] = useState(false);\n//   const [progress, setProgress] = useState(false);\n\n//   useEffect(() => {\n//     if (current) {\n//       setMessage(current.message);\n//       setAttention(current.attention);\n//       setDriver(current.driver);\n//       setProgress(current.progress);\n//     }\n//   }, [current]);\n\n//   const onSubmit = () => {\n//     if (message === \"\" || driver === \"\") {\n//       M.toast({ html: \"Please submit a message and a driver\" });\n//     } else {\n//       const updLog = {\n//         id: current.id,\n//         message,\n//         attention,\n//         progress,\n//         driver,\n//         date: new Date()\n//       };\n\n//       updateLog(updLog);\n//       M.toast({ html: `Route updated by ${driver}` });\n\n//       // Clear Fields\n//       setMessage(\"\");\n//       setDriver(\"\");\n//       setAttention(false);\n//       setProgress(false);\n//     }\n//   };\n\n//   return (\n//     <div id=\"edit-log-modal\" className=\"modal\" style={modalStyle}>\n//       <div className=\"modal-content\">\n//         <h4>Edit Route</h4>\n//         <div className=\"row\">\n//           <div className=\"input-field\">\n//             <input\n//               type=\"text\"\n//               name=\"message\"\n//               value={message || \"\"}\n//               onChange={e => setMessage(e.target.value)}\n//             />\n//           </div>\n//         </div>\n\n//         <div className=\"row\">\n//           <div className=\"input-field\">\n//             <select\n//               name=\"driver\"\n//               value={driver || \"\"}\n//               className=\"browser-default\"\n//               onChange={e => setDriver(e.target.value)}\n//             >\n//               <option value=\"\" disabled>\n//                 Select Driver\n//               </option>\n//               <DriverSelectOptions />\n//             </select>\n//           </div>\n//         </div>\n\n//         <div className=\"row\">\n//           <div className=\"input-field\">\n//             <p>\n//               <label>\n//                 <input\n//                   type=\"checkbox\"\n//                   className=\"filled-in\"\n//                   checked={attention}\n//                   value={attention}\n//                   onChange={e => setAttention(!attention)}\n//                 />\n//                 <span>Needs Attention</span>\n//               </label>\n//             </p>\n//             <p>\n//               <label>\n//                 <input\n//                   type=\"checkbox\"\n//                   className=\"filled-in\"\n//                   checked={progress}\n//                   value={progress}\n//                   onChange={e => setProgress(!progress)}\n//                 />\n//                 <span>In Progress</span>\n//               </label>\n//             </p>\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className=\"modal-footer\">\n//         <a\n//           href=\"#!\"\n//           onClick={onSubmit}\n//           className=\"modal-close waves-effect blue darken-3 btn\"\n//         >\n//           Submit\n//           <i className=\"material-icons right\">send</i>\n//         </a>\n//       </div>\n//     </div>\n//   );\n// };\n\n// const modalStyle = {\n//   width: \"75%\",\n//   height: \"75%\"\n// };\n\n// EditLogModal.propTypes = {\n//   current: PropTypes.object,\n//   updateLog: PropTypes.func.isRequired\n// };\n\n// const mapStateToProps = state => ({\n//   current: state.log.current\n// });\n\n// export default connect(mapStateToProps, { updateLog })(EditLogModal);\n"]},"metadata":{},"sourceType":"module"}