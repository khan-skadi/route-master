{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher-working_branch2_router\\\\src\\\\components\\\\logs\\\\Logs.js\";\nimport React, { useEffect } from \"react\";\nimport { getLogs } from \"../../store/actions/logActions\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport LogItem from \"./LogItem\";\nimport InfoPanel from \"../layout/InfoPanel\";\nimport ProfileModal from \"./ProfileModal\";\nimport Preloader from \"../layout/Preloader\";\nimport PropTypes from \"prop-types\";\n\nconst Logs = ({\n  log: {\n    logs,\n    loading\n  },\n  getLogs\n}) => {\n  useEffect(() => {\n    getLogs(); // eslint-disable-next-line\n  }, []);\n\n  if (loading || logs === null) {\n    return React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col s8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"collection with-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"collection-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"All Routes\")), !loading && logs.length === 0 ? React.createElement(\"p\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"No logs to show...\") : logs.map(log => React.createElement(LogItem, {\n    log: log,\n    key: log.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(ProfileModal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"col s4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(InfoPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))));\n};\n\nLogs.propTypes = {\n  log: PropTypes.object.isRequired,\n  getLogs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  log: state.log\n});\n\nexport default compose(connect(mapStateToProps, {\n  getLogs\n}), firestoreConnect([{\n  collection: \"drivers\"\n}]))(Logs);","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher-working_branch2_router/src/components/logs/Logs.js"],"names":["React","useEffect","getLogs","connect","firestoreConnect","compose","LogItem","InfoPanel","ProfileModal","Preloader","PropTypes","Logs","log","logs","loading","length","map","id","propTypes","object","isRequired","func","mapStateToProps","state","collection"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,GAAG,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAP;AAA0BZ,EAAAA;AAA1B,CAAD,KAAyC;AACpDD,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,OAAO,GADO,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIY,OAAO,IAAID,IAAI,KAAK,IAAxB,EAA8B;AAC5B,WAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,EAIG,CAACC,OAAD,IAAYD,IAAI,CAACE,MAAL,KAAgB,CAA5B,GACC;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD,GAGCF,IAAI,CAACG,GAAL,CAASJ,GAAG,IAAI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,GAAd;AAAmB,IAAA,GAAG,EAAEA,GAAG,CAACK,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,CAPJ,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,CADF,EAiBE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBF,CADF,CADF;AAyBD,CAnCD;;AAqCAN,IAAI,CAACO,SAAL,GAAiB;AACfN,EAAAA,GAAG,EAAEF,SAAS,CAACS,MAAV,CAAiBC,UADP;AAEflB,EAAAA,OAAO,EAAEQ,SAAS,CAACW,IAAV,CAAeD;AAFT,CAAjB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,GAAG,EAAEW,KAAK,CAACX;AADqB,CAAL,CAA7B;;AAIA,eAAeP,OAAO,CACpBF,OAAO,CAACmB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CADa,EAEpBE,gBAAgB,CAAC,CAAC;AAAEoB,EAAAA,UAAU,EAAE;AAAd,CAAD,CAAD,CAFI,CAAP,CAGbb,IAHa,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { getLogs } from \"../../store/actions/logActions\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport LogItem from \"./LogItem\";\nimport InfoPanel from \"../layout/InfoPanel\";\nimport ProfileModal from \"./ProfileModal\";\nimport Preloader from \"../layout/Preloader\";\nimport PropTypes from \"prop-types\";\n\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\n  useEffect(() => {\n    getLogs();\n    // eslint-disable-next-line\n  }, []);\n\n  if (loading || logs === null) {\n    return <Preloader />;\n  }\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col s8\">\n          <ul className=\"collection with-header\">\n            <li className=\"collection-header\">\n              <h4 className=\"center\">All Routes</h4>\n            </li>\n            {!loading && logs.length === 0 ? (\n              <p className=\"center\">No logs to show...</p>\n            ) : (\n              logs.map(log => <LogItem log={log} key={log.id} />)\n            )}\n          </ul>\n          <div>\n            <ProfileModal />\n          </div>\n        </div>\n\n        <div className=\"col s4\">\n          <InfoPanel />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nLogs.propTypes = {\n  log: PropTypes.object.isRequired,\n  getLogs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  log: state.log\n});\n\nexport default compose(\n  connect(mapStateToProps, { getLogs }),\n  firestoreConnect([{ collection: \"drivers\" }])\n)(Logs);\n"]},"metadata":{},"sourceType":"module"}