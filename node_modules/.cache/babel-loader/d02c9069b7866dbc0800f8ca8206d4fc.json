{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher\\\\src\\\\components\\\\driverProfileLayout\\\\DriverProfile.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getDrivers } from \"../../store/actions/driverActions\";\nimport { withRouter } from \"react-router\";\nimport DriverProfileList from \"./DriverProfileList\";\nimport Preloader from \"../layout/Preloader\";\nimport PropTypes from \"prop-types\"; // const DriverProfile = props => {\n\nconst DriverProfile = ({\n  driver: {\n    drivers,\n    loading\n  },\n  getDrivers\n}, props) => {\n  useEffect(() => {\n    getDrivers(); // eslint-disable-next-line\n  }, []);\n\n  if (loading || drivers === null) {\n    return React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  }\n\n  console.log(drivers.filter(driver => drivers.firstName === \"Khan\"));\n  return React.createElement(\"div\", {\n    className: \"col s12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"with-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, !loading && drivers.length === 0 ? React.createElement(\"p\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Loading...\") : drivers.map(driver => React.createElement(DriverProfileList, {\n    driver: driver,\n    key: driver.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))));\n};\n\nDriverProfile.propTypes = {\n  driver: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  let id = ownProps.match.params.driver_id; // const drivers = state.driver.drivers;\n  // const driver = drivers ? drivers[id] : null;\n\n  console.log(id); // console.log(driver);\n\n  return {\n    driver: state.driver\n  };\n}; //.find(driver => driver.id === id)\n// .filter(driver => driver.id === id)\n\n\nexport default withRouter(connect(mapStateToProps, {\n  getDrivers\n})(DriverProfile));","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher/src/components/driverProfileLayout/DriverProfile.js"],"names":["React","useEffect","connect","getDrivers","withRouter","DriverProfileList","Preloader","PropTypes","DriverProfile","driver","drivers","loading","props","console","log","filter","firstName","length","map","id","propTypes","object","isRequired","mapStateToProps","state","ownProps","match","params","driver_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAV;AAAgCR,EAAAA;AAAhC,CAAD,EAA+CS,KAA/C,KAAyD;AAC7EX,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,UAAU,GADI,CAGd;AACD,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAIQ,OAAO,IAAID,OAAO,KAAK,IAA3B,EAAiC;AAC/B,WAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACDG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAACK,MAAR,CAAeN,MAAM,IAAIC,OAAO,CAACM,SAAR,KAAsB,MAA/C,CAAZ;AACA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,CAACL,OAAD,IAAYD,OAAO,CAACO,MAAR,KAAmB,CAA/B,GACC;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAGCP,OAAO,CAACQ,GAAR,CAAYT,MAAM,IAChB,oBAAC,iBAAD;AAAmB,IAAA,MAAM,EAAEA,MAA3B;AAAmC,IAAA,GAAG,EAAEA,MAAM,CAACU,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARJ,CADF,CADF;AAiBD,CA5BD;;AA8BAX,aAAa,CAACY,SAAd,GAA0B;AACxBX,EAAAA,MAAM,EAAEF,SAAS,CAACc,MAAV,CAAiBC;AADD,CAA1B;;AAIA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,MAAIN,EAAE,GAAGM,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,SAA/B,CAD2C,CAE3C;AACA;;AACAf,EAAAA,OAAO,CAACC,GAAR,CAAYK,EAAZ,EAJ2C,CAK3C;;AACA,SAAO;AACLV,IAAAA,MAAM,EAAEe,KAAK,CAACf;AADT,GAAP;AAGD,CATD,C,CAUA;AACA;;;AACA,eAAeL,UAAU,CACvBF,OAAO,CAACqB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAAyCK,aAAzC,CADuB,CAAzB","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDrivers } from \"../../store/actions/driverActions\";\r\nimport { withRouter } from \"react-router\";\r\nimport DriverProfileList from \"./DriverProfileList\";\r\nimport Preloader from \"../layout/Preloader\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// const DriverProfile = props => {\r\nconst DriverProfile = ({ driver: { drivers, loading }, getDrivers }, props) => {\r\n  useEffect(() => {\r\n    getDrivers();\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (loading || drivers === null) {\r\n    return <Preloader />;\r\n  }\r\n  console.log(drivers.filter(driver => drivers.firstName === \"Khan\"));\r\n  return (\r\n    <div className=\"col s12\">\r\n      <ul className=\"with-header\">\r\n        {/* {props.driver.drivers &&\r\n          props.driver.drivers.map(driver => {\r\n            return <DriverProfileList driver={driver} key={driver.id} />;\r\n          })} */}\r\n        {!loading && drivers.length === 0 ? (\r\n          <p className=\"center\">Loading...</p>\r\n        ) : (\r\n          drivers.map(driver => (\r\n            <DriverProfileList driver={driver} key={driver.id} />\r\n          ))\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nDriverProfile.propTypes = {\r\n  driver: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let id = ownProps.match.params.driver_id;\r\n  // const drivers = state.driver.drivers;\r\n  // const driver = drivers ? drivers[id] : null;\r\n  console.log(id);\r\n  // console.log(driver);\r\n  return {\r\n    driver: state.driver\r\n  };\r\n};\r\n//.find(driver => driver.id === id)\r\n// .filter(driver => driver.id === id)\r\nexport default withRouter(\r\n  connect(mapStateToProps, { getDrivers })(DriverProfile)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}