{"ast":null,"code":"// import { createStore, applyMiddleware, compose } from \"redux\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n// import { reduxFirestore, getFirestore } from \"redux-firestore\";\n// import { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\n// import rootReducer from \"./reducers/index\";\n// import thunk from \"redux-thunk\";\n// import fbConfig from \"../config/fbConfig\";\n// const initialState = {};\n// const middleware = [thunk];\n// const store = createStore(\n//   rootReducer,\n//   initialState,\n//   composeWithDevTools(\n//     compose(\n//       applyMiddleware(\n//         thunk.withExtraArgument({\n//           getFirestore,\n//           getFirebase\n//         }),\n//         reduxFirestore(fbConfig),\n//         reactReduxFirebase(fbConfig)\n//       )\n//     )\n//   )\n// );\n// export default store;\n// FAILSAFE ---------------------------------------------\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher-working_branch2_router/src/store/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","rootReducer","initialState","middleware","store"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACH,KAAD,CAAnB;AAEA,MAAMI,KAAK,GAAGP,WAAW,CACvBI,WADuB,EAEvBC,YAFuB,EAGvBH,mBAAmB,CAACD,eAAe,CAAC,GAAGK,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["// import { createStore, applyMiddleware, compose } from \"redux\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n// import { reduxFirestore, getFirestore } from \"redux-firestore\";\n// import { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\n// import rootReducer from \"./reducers/index\";\n// import thunk from \"redux-thunk\";\n// import fbConfig from \"../config/fbConfig\";\n\n// const initialState = {};\n\n// const middleware = [thunk];\n\n// const store = createStore(\n//   rootReducer,\n//   initialState,\n//   composeWithDevTools(\n//     compose(\n//       applyMiddleware(\n//         thunk.withExtraArgument({\n//           getFirestore,\n//           getFirebase\n//         }),\n//         reduxFirestore(fbConfig),\n//         reactReduxFirebase(fbConfig)\n//       )\n//     )\n//   )\n// );\n\n// export default store;\n\n// FAILSAFE ---------------------------------------------\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}