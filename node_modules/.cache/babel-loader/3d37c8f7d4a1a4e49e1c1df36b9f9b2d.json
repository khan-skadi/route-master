{"ast":null,"code":"import { GET_DRIVERS, ADD_DRIVER, DELETE_DRIVER, SET_LOADING, DRIVERS_ERROR } from \"./types\";\nexport const getDrivers = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(\"/drivers\");\n    const data = await res.json();\n    dispatch({\n      type: \"GET_DRIVERS\",\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: \"DRIVERS_ERROR\",\n      payload: err.response.statusText\n    });\n  }\n};\nexport const addDriver = driver => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(\"/drivers\", {\n      method: \"POST\",\n      body: JSON.stringify(driver),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: \"ADD_DRIVER\",\n      payload: data\n    });\n  } catch (err) {\n    console.log(\"err response\", err);\n    dispatch({\n      type: \"DRIVERS_ERROR\",\n      payload: err.response.statusText\n    });\n  }\n}; // export const deleteDriver = id => async dispatch => {\n//   try {\n//     setLoading();\n//     await fetch(`/drivers/${id}`, {\n//       method: \"DELETE\"\n//     });\n//     dispatch({\n//       type: DELETE_DRIVER,\n//       payload: id\n//     });\n//   } catch (err) {\n//     console.log(\"err response\", err);\n//     dispatch({\n//       type: DRIVERS_ERROR,\n//       payload: err.response.statusText\n//     });\n//   }\n// };\n\nexport const setLoading = () => {\n  return {\n    type: \"SET_LOADING\"\n  };\n};","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher-working_branch2_router/src/store/actions/driverActions.js"],"names":["GET_DRIVERS","ADD_DRIVER","DELETE_DRIVER","SET_LOADING","DRIVERS_ERROR","getDrivers","dispatch","setLoading","res","fetch","data","json","type","payload","err","response","statusText","addDriver","driver","method","body","JSON","stringify","headers","console","log"],"mappings":"AAAA,SACEA,WADF,EAEEC,UAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,aALF,QAMO,SANP;AAQA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAChD,MAAI;AACFC,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,UAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GAVD,CAUE,OAAOI,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAE,eADC;AAEPC,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CAjBM;AAmBP,OAAO,MAAMC,SAAS,GAAGC,MAAM,IAAI,MAAMZ,QAAN,IAAkB;AACnD,MAAI;AACFC,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,UAAD,EAAa;AAClCU,MAAAA,MAAM,EAAE,MAD0B;AAElCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAF4B;AAGlCK,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHyB,KAAb,CAAvB;AAOA,UAAMb,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAE,YADC;AAEPC,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GAhBD,CAgBE,OAAOI,GAAP,EAAY;AACZU,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BX,GAA5B;AACAR,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAE,eADC;AAEPC,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CAxBM,C,CA0BP;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMT,UAAU,GAAG,MAAM;AAC9B,SAAO;AACLK,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM","sourcesContent":["import {\r\n  GET_DRIVERS,\r\n  ADD_DRIVER,\r\n  DELETE_DRIVER,\r\n  SET_LOADING,\r\n  DRIVERS_ERROR\r\n} from \"./types\";\r\n\r\nexport const getDrivers = () => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(\"/drivers\");\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: \"GET_DRIVERS\",\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: \"DRIVERS_ERROR\",\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\nexport const addDriver = driver => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(\"/drivers\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(driver),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: \"ADD_DRIVER\",\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    console.log(\"err response\", err);\r\n    dispatch({\r\n      type: \"DRIVERS_ERROR\",\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\n// export const deleteDriver = id => async dispatch => {\r\n//   try {\r\n//     setLoading();\r\n\r\n//     await fetch(`/drivers/${id}`, {\r\n//       method: \"DELETE\"\r\n//     });\r\n\r\n//     dispatch({\r\n//       type: DELETE_DRIVER,\r\n//       payload: id\r\n//     });\r\n//   } catch (err) {\r\n//     console.log(\"err response\", err);\r\n//     dispatch({\r\n//       type: DRIVERS_ERROR,\r\n//       payload: err.response.statusText\r\n//     });\r\n//   }\r\n// };\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: \"SET_LOADING\"\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}