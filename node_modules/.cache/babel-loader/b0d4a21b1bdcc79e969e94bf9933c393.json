{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher-working_branch2_router\\\\src\\\\components\\\\logs\\\\Logs.js\";\nimport React from \"react\";\nimport { getLogs } from \"../../store/actions/logActions\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport LogItem from \"./LogItem\";\nimport Preloader from \"../layout/Preloader\";\nimport PropTypes from \"prop-types\";\n\nconst Logs = ({\n  log: {\n    logs,\n    loading\n  }\n}) => {\n  if (loading || logs === null) {\n    return React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, !loading && logs.length === 0 ? React.createElement(\"p\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"No logs to show...\") : logs.map(log => React.createElement(LogItem, {\n    log: log,\n    key: log.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), React.createElement(NavLink, {\n    to: \"/archived-routes\",\n    className: \"flow-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"blockquote\", {\n    style: {\n      color: \"green\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Archived Routes\")));\n};\n\nLogs.propTypes = {\n  log: PropTypes.object.isRequired,\n  driver: PropTypes.object.isRequired,\n  getLogs: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  getLogs\n})(Logs);","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher-working_branch2_router/src/components/logs/Logs.js"],"names":["React","getLogs","connect","NavLink","LogItem","Preloader","PropTypes","Logs","log","logs","loading","length","map","id","color","propTypes","object","isRequired","driver","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,GAAG,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR;AAAP,CAAD,KAAgC;AAC3C,MAAIA,OAAO,IAAID,IAAI,KAAK,IAAxB,EAA8B;AAC5B,WAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACC,OAAD,IAAYD,IAAI,CAACE,MAAL,KAAgB,CAA5B,GACC;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD,GAGCF,IAAI,CAACG,GAAL,CAASJ,GAAG,IAAI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,GAAd;AAAmB,IAAA,GAAG,EAAEA,GAAG,CAACK,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,CAJJ,EAME,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,kBAAZ;AAA+B,IAAA,SAAS,EAAC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAY,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CANF,CADF;AAYD,CAjBD;;AAmBAP,IAAI,CAACQ,SAAL,GAAiB;AACfP,EAAAA,GAAG,EAAEF,SAAS,CAACU,MAAV,CAAiBC,UADP;AAEfC,EAAAA,MAAM,EAAEZ,SAAS,CAACU,MAAV,CAAiBC,UAFV;AAGfhB,EAAAA,OAAO,EAAEK,SAAS,CAACa,IAAV,CAAeF;AAHT,CAAjB;AAMA,eAAef,OAAO,CAAC,IAAD,EAAO;AAAED,EAAAA;AAAF,CAAP,CAAP,CAA2BM,IAA3B,CAAf","sourcesContent":["import React from \"react\";\nimport { getLogs } from \"../../store/actions/logActions\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport LogItem from \"./LogItem\";\nimport Preloader from \"../layout/Preloader\";\nimport PropTypes from \"prop-types\";\n\nconst Logs = ({ log: { logs, loading } }) => {\n  if (loading || logs === null) {\n    return <Preloader />;\n  }\n\n  return (\n    <div>\n      {!loading && logs.length === 0 ? (\n        <p className=\"center\">No logs to show...</p>\n      ) : (\n        logs.map(log => <LogItem log={log} key={log.id} />)\n      )}\n      <NavLink to=\"/archived-routes\" className=\"flow-text\">\n        <blockquote style={{ color: \"green\" }}>Archived Routes</blockquote>\n      </NavLink>\n    </div>\n  );\n};\n\nLogs.propTypes = {\n  log: PropTypes.object.isRequired,\n  driver: PropTypes.object.isRequired,\n  getLogs: PropTypes.func.isRequired\n};\n\nexport default connect(null, { getLogs })(Logs);\n"]},"metadata":{},"sourceType":"module"}