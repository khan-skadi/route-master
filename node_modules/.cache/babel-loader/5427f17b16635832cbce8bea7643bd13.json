{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher-working_branch2_router\\\\src\\\\components\\\\logs\\\\LogItem.js\";\nimport React from \"react\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { deleteLog, setCurrent, archiveLog } from \"../../store/actions/logActions\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst LogItem = ({\n  arch,\n  log,\n  deleteLog,\n  setCurrent\n}) => {\n  const onDelete = () => {\n    // vrlo veoma elegantno resenJe\n    // let archive = [];\n    // archive.push(log);\n    // console.log(archive);\n    deleteLog(log.id);\n    M.toast({\n      html: \"Route Deleted\"\n    });\n  };\n\n  const onArchive = () => {\n    archiveLog(log.id); // deleteLog(log.id);\n\n    M.toast({\n      html: \"Route Archived\"\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"collection-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#edit-log-modal\",\n    className: `modal-trigger ${log.attention ? \"red-text\" : log.progress ? \"green-text\" : \"blue-text\"}`,\n    onClick: () => setCurrent(log),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, log.message), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"grey-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"black-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"ID #\", log.id), \" last updated by\", \" \", React.createElement(\"span\", {\n    className: \"black-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, log.tech), \" on\", \" \", React.createElement(Moment, {\n    format: \"MMMM Do YYYY, h:mm:ss a\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, log.date)), React.createElement(\"a\", {\n    href: \"#!\",\n    onClick: onDelete,\n    className: \"secondary-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons grey-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"delete\")), React.createElement(\"a\", {\n    href: \"#!\",\n    onClick: onArchive,\n    className: \"secondary-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons grey-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"archive\")))));\n};\n\nLogItem.propTypes = {\n  log: PropTypes.object.isRequired,\n  deleteLog: PropTypes.func.isRequired,\n  setCurrent: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  deleteLog,\n  setCurrent\n})(LogItem);","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher-working_branch2_router/src/components/logs/LogItem.js"],"names":["React","Moment","connect","PropTypes","deleteLog","setCurrent","archiveLog","M","LogItem","arch","log","onDelete","id","toast","html","onArchive","attention","progress","message","tech","date","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  deleteLog,\n  setCurrent,\n  archiveLog\n} from \"../../store/actions/logActions\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst LogItem = ({ arch, log, deleteLog, setCurrent }) => {\n  const onDelete = () => {\n    // vrlo veoma elegantno resenJe\n    // let archive = [];\n    // archive.push(log);\n    // console.log(archive);\n    deleteLog(log.id);\n    M.toast({ html: \"Route Deleted\" });\n  };\n\n  const onArchive = () => {\n    archiveLog(log.id);\n    // deleteLog(log.id);\n    M.toast({ html: \"Route Archived\" });\n  };\n\n  return (\n    <div>\n      <li className=\"collection-item\">\n        <div>\n          <a\n            href=\"#edit-log-modal\"\n            className={`modal-trigger ${\n              log.attention\n                ? \"red-text\"\n                : log.progress\n                ? \"green-text\"\n                : \"blue-text\"\n            }`}\n            onClick={() => setCurrent(log)}\n          >\n            {log.message}\n          </a>\n          <br />\n          <span className=\"grey-text\">\n            <span className=\"black-text\">ID #{log.id}</span> last updated by{\" \"}\n            <span className=\"black-text\">{log.tech}</span> on{\" \"}\n            <Moment format=\"MMMM Do YYYY, h:mm:ss a\">{log.date}</Moment>\n          </span>\n          <a href=\"#!\" onClick={onDelete} className=\"secondary-content\">\n            <i className=\"material-icons grey-text\">delete</i>\n          </a>\n          <a href=\"#!\" onClick={onArchive} className=\"secondary-content\">\n            <i className=\"material-icons grey-text\">archive</i>\n          </a>\n        </div>\n      </li>\n    </div>\n  );\n};\n\nLogItem.propTypes = {\n  log: PropTypes.object.isRequired,\n  deleteLog: PropTypes.func.isRequired,\n  setCurrent: PropTypes.func.isRequired\n};\n\nexport default connect(null, { deleteLog, setCurrent })(LogItem);\n"]},"metadata":{},"sourceType":"module"}