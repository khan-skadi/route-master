{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher-working_branch2_router\\\\src\\\\components\\\\driverProfileLayout\\\\DriverProfile.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getDrivers } from \"../../store/actions/driverActions\";\nimport DriverProfileButton from \"./DriverProfileButton\";\nimport PropTypes from \"prop-types\";\n\nconst DriverProfile = (props, {\n  driver: {\n    getDrivers\n  }\n}) => {\n  // const { driver } = driver;\n  useEffect(() => {\n    getDrivers(); // eslint - disable - next - line;\n  }, []);\n  const driver = props.driver ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, props.driver.firstName)) : React.createElement(\"div\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Loading post...\");\n  return React.createElement(\"div\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, driver)); //   return (\n  //     <div className=\"row\" style={{ backgroundColor: \"light-blue accent-1\" }}>\n  //       <div className=\"col s12 z-depth-1\">\n  //         <span className=\"flow-text\"> DRIVERS > {driver.firstName} 1234</span>\n  //       </div>\n  //       <br />\n  //       <br />\n  //       <br />\n  //       {/* Main left side */}\n  //       <div className=\"col s4\">\n  //         <div className=\"row\">\n  //           <div className=\"col s10 center\">\n  //             {/* <img\n  //               style={{ marginLeft: \"80px\" }}\n  //               className=\"responsive-img materialboxed circle\"\n  //               width=\"120px\"\n  //               src={driver.image}\n  //               alt=\"profile_picture\"\n  //             /> */}\n  //             <span className=\"flow-text center\">12341234</span>\n  //           </div>\n  //           <div className=\"col s2\">\n  //             <span>\n  //               <i className=\"fas fa-user-edit small\"></i>\n  //               <span style={{ fontWeight: \"bold\" }}>EDIT</span>\n  //             </span>\n  //           </div>\n  //         </div>\n  //         <div className=\"row\">\n  //           <span>\n  //             <span className=\"grey-text\">LICENSE NUMBER</span>\n  //             <br />\n  //             <span className=\"flow-text\">1234124</span>\n  //           </span>\n  //         </div>\n  //         <br />\n  //         <div className=\"row\">\n  //           <span>\n  //             <span className=\"grey-text\">EMAIL/USERNAME</span>\n  //             <br />\n  //             <span className=\"flow-text\">\n  //               <a href=\"#!\">sarawilson@gmail.com</a>\n  //             </span>\n  //           </span>\n  //         </div>\n  //         <br />\n  //         <div className=\"row\">\n  //           <span>\n  //             <span className=\"grey-text\">PHONE NUMBER</span>\n  //             <br />\n  //             <span className=\"flow-text\">\n  //               <a href=\"#!\">+1-555-424-3535</a>\n  //             </span>\n  //           </span>\n  //         </div>\n  //       </div>\n  //       {/* Main right side */}\n  //       <div className=\"col s8\">\n  //         <ul className=\"right\">\n  //           <li>\n  //             <img src=\"#!\" alt=\"\" />\n  //           </li>\n  //           <DriverProfileButton />\n  //         </ul>\n  //         <div className=\"col s12\">\n  //           <ul className=\"with-header\">\n  //             <li className=\"collection-header\">\n  //               <h4 className=\"center\">Sara's Logs</h4>\n  //             </li>\n  //             {/* {driver.drivers &&\n  //               driver.drivers.map(driver => {\n  //                 return <DriverProfileList driver={driver} key={driver.id} />;\n  //               })} */}\n  //           </ul>\n  //         </div>\n  //       </div>\n  //     </div>\n  //   );\n  // };\n};\n\nDriverProfile.propTypes = {\n  driver: PropTypes.object.isRequired\n}; // const mapStateToProps = state => {\n//   return {\n//     driver: state.driver\n//   };\n// };\n// const mapStateToProps = state => ({\n//   driver: state.driver\n// });\n\nconst mapStateToProps = (state, ownProps) => {\n  let id = ownProps.match.params.driver_id;\n  console.log(id);\n  return {\n    driver: state.driver\n  };\n}; //.find(driver => driver.id === id)\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     getDrivers: driver => dispatch(getDrivers(driver))\n//   };\n// };\n// const mapStateToProps = (state, ownProps) => {\n//   const id = ownProps.match.params.id;\n//   const drivers = state.firestore.data.drivers;\n//   const driver = drivers ? drivers[id] : null;\n//   return {\n//     driver: driver,\n//     id: id,\n//     auth: state.firebase.auth\n//   };\n// };\n\n\nexport default connect(mapStateToProps, {\n  getDrivers\n})(DriverProfile);","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher-working_branch2_router/src/components/driverProfileLayout/DriverProfile.js"],"names":["React","useEffect","connect","getDrivers","DriverProfileButton","PropTypes","DriverProfile","props","driver","firstName","propTypes","object","isRequired","mapStateToProps","state","ownProps","id","match","params","driver_id","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQ;AAAEC,EAAAA,MAAM,EAAE;AAAEL,IAAAA;AAAF;AAAV,CAAR,KAAuC;AAC3D;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,UAAU,GADI,CAGd;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAMK,MAAM,GAAGD,KAAK,CAACC,MAAN,GACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBD,KAAK,CAACC,MAAN,CAAaC,SAArC,CADF,CADa,GAKb;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALF;AAOA,SACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,MAAL,CADF,CADF,CAf2D,CAoB3D;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CArGD;;AAsGAF,aAAa,CAACI,SAAd,GAA0B;AACxBF,EAAAA,MAAM,EAAEH,SAAS,CAACM,MAAV,CAAiBC;AADD,CAA1B,C,CAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,MAAIC,EAAE,GAAGD,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBC,SAA/B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,EAAZ;AACA,SAAO;AACLR,IAAAA,MAAM,EAAEM,KAAK,CAACN;AADT,GAAP;AAGD,CAND,C,CAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeN,OAAO,CAACW,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAAyCG,aAAzC,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDrivers } from \"../../store/actions/driverActions\";\r\nimport DriverProfileButton from \"./DriverProfileButton\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst DriverProfile = (props, { driver: { getDrivers } }) => {\r\n  // const { driver } = driver;\r\n  useEffect(() => {\r\n    getDrivers();\r\n\r\n    // eslint - disable - next - line;\r\n  }, []);\r\n\r\n  const driver = props.driver ? (\r\n    <div>\r\n      <h4 className=\"center\">{props.driver.firstName}</h4>\r\n    </div>\r\n  ) : (\r\n    <div className=\"center\">Loading post...</div>\r\n  );\r\n  return (\r\n    <div className=\"center\">\r\n      <h4>{driver}</h4>\r\n    </div>\r\n  );\r\n  //   return (\r\n\r\n  //     <div className=\"row\" style={{ backgroundColor: \"light-blue accent-1\" }}>\r\n  //       <div className=\"col s12 z-depth-1\">\r\n  //         <span className=\"flow-text\"> DRIVERS > {driver.firstName} 1234</span>\r\n  //       </div>\r\n  //       <br />\r\n  //       <br />\r\n  //       <br />\r\n  //       {/* Main left side */}\r\n  //       <div className=\"col s4\">\r\n  //         <div className=\"row\">\r\n  //           <div className=\"col s10 center\">\r\n  //             {/* <img\r\n  //               style={{ marginLeft: \"80px\" }}\r\n  //               className=\"responsive-img materialboxed circle\"\r\n  //               width=\"120px\"\r\n  //               src={driver.image}\r\n  //               alt=\"profile_picture\"\r\n  //             /> */}\r\n  //             <span className=\"flow-text center\">12341234</span>\r\n  //           </div>\r\n  //           <div className=\"col s2\">\r\n  //             <span>\r\n  //               <i className=\"fas fa-user-edit small\"></i>\r\n  //               <span style={{ fontWeight: \"bold\" }}>EDIT</span>\r\n  //             </span>\r\n  //           </div>\r\n  //         </div>\r\n\r\n  //         <div className=\"row\">\r\n  //           <span>\r\n  //             <span className=\"grey-text\">LICENSE NUMBER</span>\r\n  //             <br />\r\n  //             <span className=\"flow-text\">1234124</span>\r\n  //           </span>\r\n  //         </div>\r\n  //         <br />\r\n  //         <div className=\"row\">\r\n  //           <span>\r\n  //             <span className=\"grey-text\">EMAIL/USERNAME</span>\r\n  //             <br />\r\n  //             <span className=\"flow-text\">\r\n  //               <a href=\"#!\">sarawilson@gmail.com</a>\r\n  //             </span>\r\n  //           </span>\r\n  //         </div>\r\n  //         <br />\r\n  //         <div className=\"row\">\r\n  //           <span>\r\n  //             <span className=\"grey-text\">PHONE NUMBER</span>\r\n  //             <br />\r\n  //             <span className=\"flow-text\">\r\n  //               <a href=\"#!\">+1-555-424-3535</a>\r\n  //             </span>\r\n  //           </span>\r\n  //         </div>\r\n  //       </div>\r\n  //       {/* Main right side */}\r\n  //       <div className=\"col s8\">\r\n  //         <ul className=\"right\">\r\n  //           <li>\r\n  //             <img src=\"#!\" alt=\"\" />\r\n  //           </li>\r\n  //           <DriverProfileButton />\r\n  //         </ul>\r\n  //         <div className=\"col s12\">\r\n  //           <ul className=\"with-header\">\r\n  //             <li className=\"collection-header\">\r\n  //               <h4 className=\"center\">Sara's Logs</h4>\r\n  //             </li>\r\n  //             {/* {driver.drivers &&\r\n  //               driver.drivers.map(driver => {\r\n  //                 return <DriverProfileList driver={driver} key={driver.id} />;\r\n  //               })} */}\r\n  //           </ul>\r\n  //         </div>\r\n  //       </div>\r\n  //     </div>\r\n  //   );\r\n  // };\r\n};\r\nDriverProfile.propTypes = {\r\n  driver: PropTypes.object.isRequired\r\n};\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     driver: state.driver\r\n//   };\r\n// };\r\n\r\n// const mapStateToProps = state => ({\r\n//   driver: state.driver\r\n// });\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let id = ownProps.match.params.driver_id;\r\n  console.log(id);\r\n  return {\r\n    driver: state.driver\r\n  };\r\n};\r\n//.find(driver => driver.id === id)\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     getDrivers: driver => dispatch(getDrivers(driver))\r\n//   };\r\n// };\r\n\r\n// const mapStateToProps = (state, ownProps) => {\r\n//   const id = ownProps.match.params.id;\r\n//   const drivers = state.firestore.data.drivers;\r\n//   const driver = drivers ? drivers[id] : null;\r\n//   return {\r\n//     driver: driver,\r\n//     id: id,\r\n//     auth: state.firebase.auth\r\n//   };\r\n// };\r\n\r\nexport default connect(mapStateToProps, { getDrivers })(DriverProfile);\r\n"]},"metadata":{},"sourceType":"module"}