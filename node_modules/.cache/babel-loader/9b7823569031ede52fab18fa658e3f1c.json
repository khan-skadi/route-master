{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher-working_branch2_router\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { SET_LOADING, GET_ARCHS, ADD_ARCH } from \"../actions/types\";\nconst initialState = {\n  archs: null,\n  current: null,\n  error: null,\n  loading: false\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case GET_ARCH:\n      return _objectSpread({}, state, {\n        logs: action.payload,\n        loading: false\n      });\n\n    case ADD_ARCH:\n      return _objectSpread({}, state, {\n        logs: [...state.logs, action.payload],\n        loading: false\n      });\n  }\n});","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher-working_branch2_router/src/store/reducers/archReducer.js"],"names":["SET_LOADING","GET_ARCHS","ADD_ARCH","initialState","archs","current","error","loading","state","action","type","GET_ARCH","logs","payload"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,kBAAjD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,OAAO,EAAE;AAJU,CAArB;AAOA,gBAAe,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,WAAL;AACE,+BACKQ,KADL;AAEED,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKI,QAAL;AACE,+BACKH,KADL;AAEEI,QAAAA,IAAI,EAAEH,MAAM,CAACI,OAFf;AAGEN,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKL,QAAL;AACE,+BACKM,KADL;AAEEI,QAAAA,IAAI,EAAE,CAAC,GAAGJ,KAAK,CAACI,IAAV,EAAgBH,MAAM,CAACI,OAAvB,CAFR;AAGEN,QAAAA,OAAO,EAAE;AAHX;AAbJ;AAmBD,CApBD","sourcesContent":["import { SET_LOADING, GET_ARCHS, ADD_ARCH } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  archs: null,\r\n  current: null,\r\n  error: null,\r\n  loading: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case GET_ARCH:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_ARCH:\r\n      return {\r\n        ...state,\r\n        logs: [...state.logs, action.payload],\r\n        loading: false\r\n      };\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}