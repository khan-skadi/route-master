{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher\\\\src\\\\components\\\\driverProfileLayout\\\\DriverProfile.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getDrivers } from \"../../store/actions/driverActions\"; // import DriverProfileButton from \"./DriverProfileButton\";\n\nimport DriverProfileList from \"./DriverProfileList\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router\"; // const DriverProfile = ({ driver: { drivers }, getDrivers }) => {\n\nconst DriverProfile = props => {\n  // const { driver } = props;\n  // console.log(props);\n  useEffect(() => {\n    getDrivers(); // eslint-disable-next-line\n  }, []); // const { match, location, history } = props;\n  // console.log(props);\n  // let routeId = props.match.params.driver_id;\n  // console.log(routeId);\n\n  let id = props.id;\n  console.log(id);\n  return function filterById(id) {\n    if (props.driver.id === id) {\n      return React.createElement(\"div\", {\n        className: \"col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"with-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, props.driver.drivers && props.driver.drivers.map(driver => {\n        return React.createElement(DriverProfileList, {\n          driver: driver,\n          key: driver.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        });\n      }))); // return true;\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"nothing\");\n    }\n  }; // return (\n  // );\n};\n\nDriverProfile.propTypes = {\n  driver: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  let id = ownProps.match.params.driver_id; // const drivers = state.driver.drivers;\n  // const driver = drivers ? drivers[id] : null;\n\n  console.log(id); // console.log(driver);\n\n  return {\n    driver: state.driver,\n    id: id\n  };\n}; //.find(driver => driver.id === id)\n// .filter(driver => driver.id === id)\n\n\nexport default withRouter(connect(mapStateToProps, {\n  getDrivers\n})(DriverProfile));","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher/src/components/driverProfileLayout/DriverProfile.js"],"names":["React","useEffect","connect","getDrivers","DriverProfileList","PropTypes","withRouter","DriverProfile","props","id","console","log","filterById","driver","drivers","map","propTypes","object","isRequired","mapStateToProps","state","ownProps","match","params","driver_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,mCAA3B,C,CACA;;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,cAA3B,C,CAEA;;AACA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC7B;AACA;AACAP,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,UAAU,GADI,CAGd;AACD,GAJQ,EAIN,EAJM,CAAT,CAH6B,CAS7B;AACA;AACA;AACA;;AACA,MAAIM,EAAE,GAAGD,KAAK,CAACC,EAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACA,SAAO,SAASG,UAAT,CAAoBH,EAApB,EAAwB;AAC7B,QAAID,KAAK,CAACK,MAAN,CAAaJ,EAAb,KAAoBA,EAAxB,EAA4B;AAC1B,aACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,KAAK,CAACK,MAAN,CAAaC,OAAb,IACCN,KAAK,CAACK,MAAN,CAAaC,OAAb,CAAqBC,GAArB,CAAyBF,MAAM,IAAI;AACjC,eAAO,oBAAC,iBAAD;AAAmB,UAAA,MAAM,EAAEA,MAA3B;AAAmC,UAAA,GAAG,EAAEA,MAAM,CAACJ,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,CAFJ,CADF,CADF,CAD0B,CAmB1B;AACD,KApBD,MAoBO;AACL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD;AACF,GAxBD,CAf6B,CAwC7B;AAEA;AACD,CA3CD;;AA6CAF,aAAa,CAACS,SAAd,GAA0B;AACxBH,EAAAA,MAAM,EAAER,SAAS,CAACY,MAAV,CAAiBC;AADD,CAA1B;;AAIA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,MAAIZ,EAAE,GAAGY,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,SAA/B,CAD2C,CAE3C;AACA;;AACAd,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ,EAJ2C,CAK3C;;AACA,SAAO;AACLI,IAAAA,MAAM,EAAEO,KAAK,CAACP,MADT;AAELJ,IAAAA,EAAE,EAAEA;AAFC,GAAP;AAID,CAVD,C,CAWA;AACA;;;AACA,eAAeH,UAAU,CACvBJ,OAAO,CAACiB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAAyCI,aAAzC,CADuB,CAAzB","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDrivers } from \"../../store/actions/driverActions\";\r\n// import DriverProfileButton from \"./DriverProfileButton\";\r\nimport DriverProfileList from \"./DriverProfileList\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router\";\r\n\r\n// const DriverProfile = ({ driver: { drivers }, getDrivers }) => {\r\nconst DriverProfile = props => {\r\n  // const { driver } = props;\r\n  // console.log(props);\r\n  useEffect(() => {\r\n    getDrivers();\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // const { match, location, history } = props;\r\n  // console.log(props);\r\n  // let routeId = props.match.params.driver_id;\r\n  // console.log(routeId);\r\n  let id = props.id;\r\n  console.log(id);\r\n  return function filterById(id) {\r\n    if (props.driver.id === id) {\r\n      return (\r\n        <div className=\"col s12\">\r\n          <ul className=\"with-header\">\r\n            {props.driver.drivers &&\r\n              props.driver.drivers.map(driver => {\r\n                return <DriverProfileList driver={driver} key={driver.id} />;\r\n              })}\r\n\r\n            {/* })} */}\r\n            {/* {<DriverProfileList driver={props.driver} />} */}\r\n\r\n            {/* {props.driver.drivers &&\r\n          props.driver.drivers.map(driver => {\r\n            return <DriverProfileList driver={driver} key={driver.id} />;\r\n          })} */}\r\n          </ul>\r\n        </div>\r\n      );\r\n      // return true;\r\n    } else {\r\n      return <div>nothing</div>;\r\n    }\r\n  };\r\n  // return (\r\n\r\n  // );\r\n};\r\n\r\nDriverProfile.propTypes = {\r\n  driver: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let id = ownProps.match.params.driver_id;\r\n  // const drivers = state.driver.drivers;\r\n  // const driver = drivers ? drivers[id] : null;\r\n  console.log(id);\r\n  // console.log(driver);\r\n  return {\r\n    driver: state.driver,\r\n    id: id\r\n  };\r\n};\r\n//.find(driver => driver.id === id)\r\n// .filter(driver => driver.id === id)\r\nexport default withRouter(\r\n  connect(mapStateToProps, { getDrivers })(DriverProfile)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}