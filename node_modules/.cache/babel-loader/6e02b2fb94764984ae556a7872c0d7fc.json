{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher\\\\src\\\\components\\\\driverProfileLayout\\\\DriverProfile.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getDrivers } from \"../../store/actions/driverActions\"; // import DriverProfileButton from \"./DriverProfileButton\";\n\nimport DriverProfileList from \"./DriverProfileList\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router\"; // const DriverProfile = ({ driver: { drivers }, getDrivers }) => {\n\nconst DriverProfile = ({\n  driver,\n  getDrivers\n}, props) => {\n  // const [id, setId] = useState(null);\n  useEffect(() => {\n    getDrivers(); // eslint-disable-next-line\n  }, []); // const { match, location, history } = props;\n  // console.log(props);\n  // let routeId = props.match.params.driver_id;\n  // console.log(routeId);\n\n  return React.createElement(\"div\", {\n    className: \"col s12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"with-header\",\n    key: driver.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(DriverProfileList, {\n    driver: driver,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })));\n};\n\nDriverProfile.propTypes = {\n  driver: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  let id = ownProps.match.params.driver_id;\n  console.log(ownProps);\n  return {\n    driver: state.driver\n  };\n}; //.find(driver => driver.id === id)\n\n\nexport default withRouter(connect(mapStateToProps, {\n  getDrivers\n})(DriverProfile));","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher/src/components/driverProfileLayout/DriverProfile.js"],"names":["React","useEffect","connect","getDrivers","DriverProfileList","PropTypes","withRouter","DriverProfile","driver","props","id","propTypes","object","isRequired","mapStateToProps","state","ownProps","match","params","driver_id","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,mCAA3B,C,CACA;;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,cAA3B,C,CAEA;;AACA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUL,EAAAA;AAAV,CAAD,EAAyBM,KAAzB,KAAmC;AACvD;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,UAAU,GADI,CAGd;AACD,GAJQ,EAIN,EAJM,CAAT,CAHuD,CASvD;AACA;AACA;AACA;;AACA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAA4B,IAAA,GAAG,EAAEK,MAAM,CAACE,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,iBAAD;AAAmB,IAAA,MAAM,EAAEF,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADF,CADF;AAWD,CAxBD;;AA0BAD,aAAa,CAACI,SAAd,GAA0B;AACxBH,EAAAA,MAAM,EAAEH,SAAS,CAACO,MAAV,CAAiBC;AADD,CAA1B;;AAIA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,MAAIN,EAAE,GAAGM,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,SAA/B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,SAAO;AACLR,IAAAA,MAAM,EAAEO,KAAK,CAACP;AADT,GAAP;AAGD,CAND,C,CAOA;;;AAEA,eAAeF,UAAU,CACvBJ,OAAO,CAACY,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CAAyCI,aAAzC,CADuB,CAAzB","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDrivers } from \"../../store/actions/driverActions\";\r\n// import DriverProfileButton from \"./DriverProfileButton\";\r\nimport DriverProfileList from \"./DriverProfileList\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router\";\r\n\r\n// const DriverProfile = ({ driver: { drivers }, getDrivers }) => {\r\nconst DriverProfile = ({ driver, getDrivers }, props) => {\r\n  // const [id, setId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getDrivers();\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // const { match, location, history } = props;\r\n  // console.log(props);\r\n  // let routeId = props.match.params.driver_id;\r\n  // console.log(routeId);\r\n  return (\r\n    <div className=\"col s12\">\r\n      <ul className=\"with-header\" key={driver.id}>\r\n        {<DriverProfileList driver={driver} />}\r\n        {/* {driver.drivers &&\r\n          driver.drivers.map(driver => {\r\n            return <DriverProfileList driver={driver} key={driver.id} />;\r\n          })} */}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nDriverProfile.propTypes = {\r\n  driver: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let id = ownProps.match.params.driver_id;\r\n  console.log(ownProps);\r\n  return {\r\n    driver: state.driver\r\n  };\r\n};\r\n//.find(driver => driver.id === id)\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { getDrivers })(DriverProfile)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}