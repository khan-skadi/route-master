{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher-working_branch2_router\\\\src\\\\components\\\\drivers\\\\DriverSelectOptions.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getDrivers } from \"../../store/actions/driverActions\";\nimport PropTypes from \"prop-types\";\n\nconst DriverSelectOptions = ({\n  getDrivers,\n  driver: {\n    drivers,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getDrivers(); // eslint-disable-next-line\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"!loading && drivers !== null && drivers.map(d => (\", React.createElement(\"option\", {\n    key: d.id,\n    value: `${d.firstName} ${d.lastName}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, d.firstName, \" \", d.lastName), \"))\");\n};\n\nDriverSelectOptions.propTypes = {\n  driver: PropTypes.object.isRequired,\n  getDrivers: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  driver: state.driver\n});\n\nexport default connect(mapStateToProps, {\n  getDrivers\n})(DriverSelectOptions);","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher-working_branch2_router/src/components/drivers/DriverSelectOptions.js"],"names":["React","useEffect","connect","getDrivers","PropTypes","DriverSelectOptions","driver","drivers","loading","d","id","firstName","lastName","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEF,EAAAA,UAAF;AAAcG,EAAAA,MAAM,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAAtB,CAAD,KAAkD;AAC5EP,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,UAAU,GADI,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAEE;AAAQ,IAAA,GAAG,EAAEM,CAAC,CAACC,EAAf;AAAmB,IAAA,KAAK,EAAG,GAAED,CAAC,CAACE,SAAU,IAAGF,CAAC,CAACG,QAAS,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,CAAC,CAACE,SADL,OACiBF,CAAC,CAACG,QADnB,CAFF,OADF;AASD,CAfD;;AAiBAP,mBAAmB,CAACQ,SAApB,GAAgC;AAC9BP,EAAAA,MAAM,EAAEF,SAAS,CAACU,MAAV,CAAiBC,UADK;AAE9BZ,EAAAA,UAAU,EAAEC,SAAS,CAACY,IAAV,CAAeD;AAFG,CAAhC;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCZ,EAAAA,MAAM,EAAEY,KAAK,CAACZ;AADkB,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CAACe,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAAyCE,mBAAzC,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDrivers } from \"../../store/actions/driverActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst DriverSelectOptions = ({ getDrivers, driver: { drivers, loading } }) => {\r\n  useEffect(() => {\r\n    getDrivers();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      !loading && drivers !== null && drivers.map(d => (\r\n      <option key={d.id} value={`${d.firstName} ${d.lastName}`}>\r\n        {d.firstName} {d.lastName}\r\n      </option>\r\n      ))\r\n    </div>\r\n  );\r\n};\r\n\r\nDriverSelectOptions.propTypes = {\r\n  driver: PropTypes.object.isRequired,\r\n  getDrivers: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  driver: state.driver\r\n});\r\n\r\nexport default connect(mapStateToProps, { getDrivers })(DriverSelectOptions);\r\n"]},"metadata":{},"sourceType":"module"}