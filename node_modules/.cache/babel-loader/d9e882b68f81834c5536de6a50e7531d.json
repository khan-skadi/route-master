{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher\\\\src\\\\components\\\\logs\\\\Logs.js\";\nimport React, { useEffect } from \"react\";\nimport { getLogs } from \"../../store/actions/logActions\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport LogItem from \"./LogItem\";\nimport InfoPanel from \"../layout/InfoPanel\";\nimport ProfileModal from \"./ProfileModal\";\nimport Preloader from \"../layout/Preloader\";\nimport PropTypes from \"prop-types\";\n\nconst Logs = ({\n  log: {\n    logs,\n    loading\n  },\n  getLogs\n}) => {\n  useEffect(() => {\n    getLogs(); // eslint-disable-next-line\n  }, []);\n\n  if (loading || logs === null) {\n    return React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col s8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"collection with-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"collection-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"All Routes\")), !loading && logs.length === 0 ? React.createElement(\"p\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"No logs to show...\") : logs.map(log => React.createElement(LogItem, {\n    log: log,\n    key: log.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(NavLink, {\n    to: \"/archived-routes\",\n    className: \"flow-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"blockquote\", {\n    style: {\n      color: \"green\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Archived Routes\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(ProfileModal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"col s4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(InfoPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))));\n};\n\nLogs.propTypes = {\n  log: PropTypes.object.isRequired,\n  getLogs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  log: state.log\n});\n\nexport default connect(mapStateToProps, {\n  getLogs\n})(Logs);","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher/src/components/logs/Logs.js"],"names":["React","useEffect","getLogs","connect","NavLink","LogItem","InfoPanel","ProfileModal","Preloader","PropTypes","Logs","log","logs","loading","length","map","id","color","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,GAAG,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAP;AAA0BX,EAAAA;AAA1B,CAAD,KAAyC;AACpDD,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,OAAO,GADO,CAGd;AACD,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAIW,OAAO,IAAID,IAAI,KAAK,IAAxB,EAA8B;AAC5B,WAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,EAIG,CAACC,OAAD,IAAYD,IAAI,CAACE,MAAL,KAAgB,CAA5B,GACC;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD,GAGCF,IAAI,CAACG,GAAL,CAASJ,GAAG,IAAI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,GAAd;AAAmB,IAAA,GAAG,EAAEA,GAAG,CAACK,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,CAPJ,EASE,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,kBAAZ;AAA+B,IAAA,SAAS,EAAC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAY,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CATF,CADF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhBF,CADF,EAsBE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAtBF,CADF,CADF;AA8BD,CAzCD;;AA2CAP,IAAI,CAACQ,SAAL,GAAiB;AACfP,EAAAA,GAAG,EAAEF,SAAS,CAACU,MAAV,CAAiBC,UADP;AAEflB,EAAAA,OAAO,EAAEO,SAAS,CAACY,IAAV,CAAeD;AAFT,CAAjB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCZ,EAAAA,GAAG,EAAEY,KAAK,CAACZ;AADqB,CAAL,CAA7B;;AAIA,eAAeR,OAAO,CAACmB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAAsCQ,IAAtC,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { getLogs } from \"../../store/actions/logActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport LogItem from \"./LogItem\";\r\nimport InfoPanel from \"../layout/InfoPanel\";\r\nimport ProfileModal from \"./ProfileModal\";\r\nimport Preloader from \"../layout/Preloader\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\r\n  useEffect(() => {\r\n    getLogs();\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (loading || logs === null) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col s8\">\r\n          <ul className=\"collection with-header\">\r\n            <li className=\"collection-header\">\r\n              <h4 className=\"center\">All Routes</h4>\r\n            </li>\r\n            {!loading && logs.length === 0 ? (\r\n              <p className=\"center\">No logs to show...</p>\r\n            ) : (\r\n              logs.map(log => <LogItem log={log} key={log.id} />)\r\n            )}\r\n            <NavLink to=\"/archived-routes\" className=\"flow-text\">\r\n              <blockquote style={{ color: \"green\" }}>\r\n                Archived Routes\r\n              </blockquote>\r\n            </NavLink>\r\n          </ul>\r\n          <div>\r\n            <ProfileModal />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col s4\">\r\n          <InfoPanel />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLogs.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n  getLogs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  log: state.log\r\n});\r\n\r\nexport default connect(mapStateToProps, { getLogs })(Logs);\r\n"]},"metadata":{},"sourceType":"module"}