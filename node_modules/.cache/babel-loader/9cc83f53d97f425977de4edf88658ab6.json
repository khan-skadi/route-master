{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skadi\\\\Projects\\\\truck-dispatcher-working_branch2_router\\\\src\\\\components\\\\driverProfileLayout\\\\DriverProfileG.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nexport class DriverProfileG extends Component {\n  render() {\n    console.log(this.props);\n    const driver = this.props.driver;\n    const driverList = driver.length ? driver.map(d => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        style: {\n          backgroundColor: \"light-blue accent-1\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col s12 z-depth-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"flow-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \" DRIVERS > \", d.firstName, \"1234\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col s4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col s10 center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"flow-text center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"12341234\")), React.createElement(\"div\", {\n        className: \"col s2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-user-edit small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"EDIT\")))))));\n    }) : React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"No Drivers yet\");\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Profile\"), driverList);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  let id = ownProps.match.params.driver_id;\n  return {\n    drivers: state.drivers.driver.find(driver => driver.id === id)\n  };\n};\n\nexport default connect(mapStateToProps)(DriverProfileG);","map":{"version":3,"sources":["C:/Users/Skadi/Projects/truck-dispatcher-working_branch2_router/src/components/driverProfileLayout/DriverProfileG.js"],"names":["React","Component","connect","DriverProfileG","render","console","log","props","driver","driverList","length","map","d","backgroundColor","firstName","fontWeight","mapStateToProps","state","ownProps","id","match","params","driver_id","drivers","find"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AAC5CG,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AADO,UAECC,MAFD,GAEY,KAAKD,KAFjB,CAECC,MAFD;AAGP,UAAMC,UAAU,GAAGD,MAAM,CAACE,MAAP,GACjBF,MAAM,CAACG,GAAP,CAAWC,CAAC,IAAI;AACd,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,KADZ;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAE;AAAnB,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAwCD,CAAC,CAACE,SAA1C,SADF,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EAWE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,CAJF,CADF,CAXF,CADF,CADF;AA6BD,KA9BD,CADiB,GAiCjB;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAjCF;AAmCA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGN,UAFH,CADF;AAMD;;AA7C2C;;AAgD9C,MAAMO,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,MAAIC,EAAE,GAAGD,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBC,SAA/B;AACA,SAAO;AACLC,IAAAA,OAAO,EAAEN,KAAK,CAACM,OAAN,CAAcf,MAAd,CAAqBgB,IAArB,CAA0BhB,MAAM,IAAIA,MAAM,CAACW,EAAP,KAAcA,EAAlD;AADJ,GAAP;AAGD,CALD;;AAOA,eAAejB,OAAO,CAACc,eAAD,CAAP,CAAyBb,cAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class DriverProfileG extends Component {\r\n  render() {\r\n    console.log(this.props);\r\n    const { driver } = this.props;\r\n    const driverList = driver.length ? (\r\n      driver.map(d => {\r\n        return (\r\n          <div>\r\n            <div\r\n              className=\"row\"\r\n              style={{ backgroundColor: \"light-blue accent-1\" }}\r\n            >\r\n              <div className=\"col s12 z-depth-1\">\r\n                <span className=\"flow-text\"> DRIVERS > {d.firstName}1234</span>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              {/* Main left side */}\r\n              <div className=\"col s4\">\r\n                <div className=\"row\">\r\n                  <div className=\"col s10 center\">\r\n                    <span className=\"flow-text center\">12341234</span>\r\n                  </div>\r\n                  <div className=\"col s2\">\r\n                    <span>\r\n                      <i className=\"fas fa-user-edit small\"></i>\r\n                      <span style={{ fontWeight: \"bold\" }}>EDIT</span>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })\r\n    ) : (\r\n      <div className=\"center\">No Drivers yet</div>\r\n    );\r\n    return (\r\n      <div className=\"container\">\r\n        <h4 className=\"center\">Profile</h4>\r\n        {driverList}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let id = ownProps.match.params.driver_id;\r\n  return {\r\n    drivers: state.drivers.driver.find(driver => driver.id === id)\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DriverProfileG);\r\n"]},"metadata":{},"sourceType":"module"}